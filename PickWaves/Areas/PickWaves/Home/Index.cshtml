@model DcmsMobile.PickWaves.Areas.PickWaves.Home.IndexViewModel
@{
    ViewBag.Title = "Pick Waves Home";
    Layout = @MVC_PickWaves.PickWaves.SharedViews.Views._layoutPickWaves;
}


<div class="container">
    <h2 style="margin-top:0">
        Pick Wave Home
    </h2>

    <div class="row">
        <div class="col-md-4">
            <div class="list-group">
                <a href="@Url.Action(MVC_PickWaves.PickWaves.Home.Customers())" class="list-group-item list-group-item-success">
                    <h4 class="list-group-item-heading">
                        Manage Pick Waves
                        <span class="glyphicon glyphicon-adjust pull-right"></span>
                    </h4>
                </a>
                <a href="#" class="list-group-item">
                    <h4 class="list-group-item-heading">
                        Bucket <small>Created by</small>
                        <span class="badge">Date Created</span>
                        <span class="glyphicon glyphicon-chevron-right pull-right"></span>
                    </h4>
                </a>
                @for (var i = 0; i < Model.RecentBuckets.Count; ++i)
                {
                    <a href="#" class="list-group-item">

                        <h4 class="list-group-item-heading">
                            @Html.DisplayFor(m => m.RecentBuckets[i].BucketId)
                            <small>@Html.DisplayFor(m => m.RecentBuckets[i].CreatedBy)</small>
                            <span class="badge">@Html.DisplayFor(m => m.RecentBuckets[i].CreationDate)</span>
                            <span class="glyphicon glyphicon-chevron-right pull-right"></span>
                        </h4>
                    </a>
                }
            </div>
        </div>

        <div class="col-md-4">
            <ul class="list-group">
                <li class="list-group-item list-group-item-success">
                    <h4 class="list-group-item-heading">
                        Create Pick Waves
                        <span class="glyphicon glyphicon-folder-close pull-right"></span>
                    </h4>
                </li>

                @for (var i = 0; i < Model.ImportedOrders.Count; ++i)
                {
                    <li class="list-group-item">
                        <small>@(i + 1)</small>
                        <span class="label label-default">@Html.DisplayFor(m => m.ImportedOrders[i].PickslipCount)</span>

                        @if (Model.UserIsManager)
                        {
                            <a style="font-size:1.4em; @Html.Raw(Model.ImportedOrders[i].IsCustomerActive ? "" : "text-decoration:line-through")"
                               href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(Model.ImportedOrders[i].CustomerId))"
                               title="@string.Format("Create Pick Waves for {0}", Model.ImportedOrders[i].CustomerName)">
                                @Html.DisplayFor(m => m.ImportedOrders[i].CustomerId):
                            </a>
                            <small @Html.Raw(Model.ImportedOrders[i].InternationalFlag ? "class='bg-info' title='International customer'" : "")>
                                @if (Model.ImportedOrders[i].IsCustomerActive)
                                {
                                    @Html.DisplayFor(m => m.ImportedOrders[i].CustomerName)
                                }
                                else
                                {
                                    <s title="This customer is inactive.">@Html.DisplayFor(m => m.ImportedOrders[i].CustomerName)</s>
                                }
                            </small>
                        }
                        else
                        {
                            <span style="font-size:1.4em;"> @Html.DisplayFor(m => m.ImportedOrders[i].CustomerId): </span>
                            <small @Html.Raw(Model.ImportedOrders[i].InternationalFlag ? "class='bg-info' title='International customer'" : "")>
                                @if (Model.ImportedOrders[i].IsCustomerActive)
                                {
                                    @Html.DisplayFor(m => m.ImportedOrders[i].CustomerName)
                                }
                                else
                                {
                                    <s title="This customer is inactive.">@Html.DisplayFor(m => m.ImportedOrders[i].CustomerName)</s>
                                }
                            </small>
                        }
                        <small>
                            <em>@Html.DisplayFor(m => m.ImportedOrders[i].ImportDateRange)</em>
                        </small>

                    </li>
                }
            </ul>

        </div>

        <div class="col-md-4">
            <div class="list-group">
                <div class="list-group-item list-group-item-success">
                    <h4 class="list-group-item-heading">
                        Create Pitch Carts
                        <span class="glyphicon glyphicon-shopping-cart pull-right"></span>
                    </h4>
                </div>
                <a href="#" class="list-group-item">
                    TODO: List of pick waves for which MPC can be created
                    <span class="glyphicon glyphicon-chevron-right pull-right"></span>
                </a>

            </div>

        </div>
        <div class="col-md-4">
            <div class="list-group">
                <a href="@Url.Action(MVC_PickWaves.PickWaves.BoxPickPallet.Index())" class="list-group-item list-group-item-success">
                    <h4 class="list-group-item-heading">
                        Box Expediting
                        <span class="glyphicon glyphicon-briefcase pull-right"></span>
                    </h4>
                </a>
                <a href="#" class="list-group-item">
                    TODO: List of pick waves for which boxes can be expedited
                    <span class="glyphicon glyphicon-chevron-right pull-right"></span>
                </a>
            </div>
        </div>
        <div class="col-md-4">

            <div class="list-group">
                <a href="@Url.Action(MVC_PickWaves.PickWaves.Config.Index())" class="list-group-item list-group-item-success">
                    <h4 class="list-group-item-heading">
                        Pick Wave Configuration
                        <span class="glyphicon glyphicon-cog pull-right"></span>
                    </h4>
                </a>

                <a href="@Url.Action(MVC_PickWaves.PickWaves.Config.SkuCase())" class="list-group-item">
                    Carton Sizes
                    <span class="glyphicon glyphicon-chevron-right pull-right"></span>
                </a>
                <a href="@Url.Action(MVC_PickWaves.PickWaves.Config.StyleSkuCase())" class="list-group-item">
                    Style Cartons Sizes
                    <span class="glyphicon glyphicon-chevron-right pull-right"></span>
                </a>
                <a href="@Url.Action(MVC_PickWaves.PickWaves.Config.CustSkuCase())" class="list-group-item">
                    Customer Carton Sizes
                    <span class="glyphicon glyphicon-chevron-right pull-right"></span>
                </a>
                <a href="@Url.Action(MVC_PickWaves.PickWaves.Config.Constraint())" class="list-group-item">
                    Customer Weight and Volume Restrictions
                    <span class="glyphicon glyphicon-chevron-right pull-right"></span>
                </a>
            </div>

        </div>
    </div>
</div>
