@model DcmsMobile.PickWaves.ViewModels.Home.IndexViewModel
@{
    ViewBag.Title = "Pick Waves Home";
    Layout = @MVC_PickWaves.PickWaves.SharedViews.Views._layoutPickWaves2;
}
@if (Model != null && Model.IsCustomerFilterApplied)
{
    <h2>Showing PickWave of customer @Model.SearchCustomerId @Html.ActionLink("Show all", MVC_PickWaves.PickWaves.Home.Index()) </h2>
}
@if (Model != null && Model.IsUserNameFilterApplied)
{
    <h2>Showing PickWave created by @Model.SearchUserName @Html.ActionLink("Show all", MVC_PickWaves.PickWaves.Home.Index()) </h2>
}
@helper TabDescription(DcmsMobile.PickWaves.Helpers.ProgressStage state)
{
    switch (state)
    {
        case DcmsMobile.PickWaves.Helpers.ProgressStage.Frozen:
            <p class="ui-state-disabled">
                Picking will not be performed on these pick waves. You will need to unfreeze them first.
            </p>
            break;

        case DcmsMobile.PickWaves.Helpers.ProgressStage.InProgress:
        <p>
            Check the picking progress using the progress bars displayed in the table. Go to the <em>Pick Wave List</em> of a customer to manage individual pick waves.
        </p>
            break;

        case DcmsMobile.PickWaves.Helpers.ProgressStage.Completed:
        <p>
            Picking for these pick waves has been completed. Hopefully, the progress bar is telling you that you did not have to undership anything.
        </p>
            break;

        default:
        <p>Internal Error. We are not sure what you are seeing</p>
            break;
    }
}

<div class="container">
    <div class="page-header">
        <h3>
            Pick Waves Home
        </h3>
    </div>
    <div role="tabpanel">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs bg-info" role="tablist">
            @if (Model.ImportedOrders.Count > 0)
            {
                <li role="presentation" class="active">
                    <a href="#ToCreate" role="tab" data-toggle="tab">
                        To Create
                        <span class="badge" title="@Model.ImportedOrders.Count customers">
                            @Model.ImportedOrders.Count
                        </span>
                    </a>
                </li>
            }
            @for (var i = 0; i < Model.BucketsByStatus.Count; ++i)
            {
                <li role="presentation">
                    <a href="#@Model.BucketsByStatus.Keys[i].ToString()" aria-controls="home" role="tab" data-toggle="tab">
                        @Model.StateDisplayNames[Model.BucketsByStatus.Keys[i]]
                        <span class="badge" title="@Model.BucketsByStatus.Values[i].Count customers">
                            @Model.BucketsByStatus.Values[i].Count
                        </span>
                    </a>
                </li>
            }
            @*<li role="presentation"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">Home</a></li>
                <li role="presentation"><a href="#profile" aria-controls="profile" role="tab" data-toggle="tab">Profile</a></li>
                <li role="presentation"><a href="#messages" aria-controls="messages" role="tab" data-toggle="tab">Messages</a></li>
                <li role="presentation"><a href="#settings" aria-controls="settings" role="tab" data-toggle="tab">Settings</a></li>*@
        </ul>
        <!-- Tab panes -->
        <div class="tab-content">
            @if (Model.ImportedOrders.Count > 0)
            {
                <div id="ToCreate" role="tabpanel" class="tab-pane active">
                    @if (Model.UserIsManager)
                    {
                        <blockquote>
                            <p class="text-info">You can create new pick waves from here by simply clicking the customer Id.</p>
                        </blockquote>
                    }
                    else
                    {
                        <blockquote>
                            Want to create new pick waves ? login as a user who has <em>@Model.ManagerRoleName</em> role.
                        </blockquote>
                    }
                    <h4>Imported Order Summary</h4>
                    <ul class="list-group">
                        <li class="list-group-item list-group-item-success">
                            <div class="row">
                                <div class="col-md-6">
                                    <h4 class="list-group-item-heading">
                                        @Model.ImportedOrders.Count Customers

                                        <span class="label label-info">
                                            @Html.DisplayFor(m => m.TotalImportedPickslipCount) Pickslips
                                        </span>
                                        <small><em>&nbsp; Imported @Html.DisplayFor(m => m.ImportDateRange)</em></small>

                                    </h4>

                                </div>
                                <div class="col-md-3">
                                    @*<h4 class="list-group-item-heading">
                                        <span class="label label-success">
                                            Ordered  @Html.DisplayFor(m => m.TotalImportedDollarsOrdered)
                                        </span>
                                        &nbsp;<small>@Html.DisplayFor(m => m.TotalImportedPiecesOrdered) Pieces</small>
                                    </h4>*@
                                    <h4 class="list-group-item-heading" style="width:7em;text-align:right; display:inline-block">
                                        <span class="label label-success">
                                            Ordered  @Html.DisplayFor(m => m.TotalImportedDollarsOrdered)
                                        </span>
                                    </h4>
                                    <h4 class="list-group-item-heading" style="width:4em;text-align:right; display:inline-block">
                                        <span class="label label-success">
                                           @Html.DisplayFor(m => m.TotalImportedPiecesOrdered) Pieces
                                        </span>
                                    </h4>

                                </div>
                                <div class="col-md-3" style="text-align:right">
                                    <span class="badge">
                                        DC Cancel @Html.DisplayFor(m => m.DcCancelDateRange)
                                    </span>
                                    <span class="glyphicon glyphicon-sort-by-attributes-alt"></span>
                                </div>
                            </div>
                        </li>
                    
                        @for (var i = 0; i < Model.ImportedOrders.Count; ++i)
                        {
                            <li class="list-group-item">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h4 class="list-group-item-heading">
                                            <small>@(i + 1)</small>  @if (Model.UserIsManager)
                                            {
                                                <a href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(new DcmsMobile.PickWaves.ViewModels.CreateWave.IndexViewModel(Model.ImportedOrders[i].CustomerId)))" title="@string.Format("Create Pick Waves for {0}", Model.ImportedOrders[i].CustomerName)">
                                                    @Html.DisplayFor(m => m.ImportedOrders[i].CustomerId):
                                                </a>
                                                <small @Html.Raw(Model.ImportedOrders[i].InternationalFlag ? "class='bg-info' title='International customer'" : "")>
                                                    @if (Model.ImportedOrders[i].IsCustomerActive)
                                                    {
                                                        @Html.DisplayFor(m => m.ImportedOrders[i].CustomerName)
                                                    }
                                                    else
                                                    {
                                                        <s title="This customer is inactive.">@Html.DisplayFor(m => m.ImportedOrders[i].CustomerName)</s>
                                                    }
                                                </small>
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(m => m.ImportedOrders[i].CustomerId)@:
                                                <small @Html.Raw(Model.ImportedOrders[i].InternationalFlag ? "class='bg-info' title='International customer'" : "")>
                                                    @if (Model.ImportedOrders[i].IsCustomerActive)
                                                    {
                                                        @Html.DisplayFor(m => m.ImportedOrders[i].CustomerName)
                                                    }
                                                    else
                                                    {
                                                        <s title="This customer is inactive.">@Html.DisplayFor(m => m.ImportedOrders[i].CustomerName)</s>
                                                    }
                                                </small>
                                            }  <span class="label label-info">@Html.DisplayFor(m => m.ImportedOrders[i].PickslipCount)</span>
                                            <small>

                                                <em>@Html.DisplayFor(m => m.ImportedOrders[i].ImportDateRange)</em>

                                            </small>
                                        </h4>

                                    </div>
                                    <div class="col-md-3">
                                        <h4 class="list-group-item-heading"  style="width:6em;text-align:right; display:inline-block">
                                            <span class="label label-success">
                                                @Html.DisplayFor(m => m.ImportedOrders[i].DollarsOrdered)
                                            </span>
                                        </h4>
                                        <h4 class="list-group-item-heading" style="width:4em;text-align:right; display:inline-block">
                                            <span class="label label-success">
                                                @Html.DisplayFor(m => m.ImportedOrders[i].PiecesOrdered)
                                            </span>
                                        </h4>   
                                    </div>
                                    <div class="col-md-3" style="text-align:right">
                                        <span class="badge">
                                            @Html.DisplayFor(m => m.ImportedOrders[i].DcCancelDateRange)
                                        </span>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                    @*<table class="table table-condensed table-bordered">
                            <caption>
                                Imported Order Summary
                            </caption>
                            <thead>
                                <tr>
                                    <th rowspan="2">
                                        #
                                    </th>
                                    <th colspan="2">
                                        Customer
                                    </th>
                                    <th rowspan="2">
                                        # Pickslips
                                    </th>
                                    <th rowspan="2" title="Earliest DC cancel date [MM/DD] to Latest DC cancel date [MM/DD/YYYY]">
                                        DC Cancel
                                        <span class="ui-icon ui-icon-triangle-1-n" style="display: inline-block"></span>
                                    </th>
                                    <th colspan="2">
                                        Ordered
                                    </th>
                                    <th rowspan="2" title="Earliest Pickslip import date [MM/DD] to Latest Pickslip import date [MM/DD/YYYY]">
                                        Imported on
                                    </th>
                                </tr>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>
                                        $
                                    </th>
                                    <th>
                                        Pieces
                                    </th>
                                </tr>
                                <tr class="ui-state-active">
                                    <th colspan="2">Summary</th>
                                    <th>@Model.ImportedOrders.Count customers</th>
                                    <th>@Html.DisplayFor(m => m.TotalImportedPickslipCount)</th>
                                    <th>@Html.DisplayFor(m => m.DcCancelDateRange)</th>
                                    <th>@Html.DisplayFor(m => m.TotalImportedDollarsOrdered)</th>
                                    <th>@Html.DisplayFor(m => m.TotalImportedPiecesOrdered)</th>
                                    <th>@Html.DisplayFor(m => m.ImportDateRange)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < Model.ImportedOrders.Count; ++i)
                                {
                                    <tr class="@(i % 2 == 0 ? "rowA" : "rowB")">
                                        <td style="text-align: right">@(i + 1)</td>
                                        <td>
                                            @if (Model.UserIsManager)
                                            {

                                                <a href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(new DcmsMobile.PickWaves.ViewModels.CreateWave.IndexViewModel(Model.ImportedOrders[i].CustomerId)))" title="@string.Format("Create Pick Waves for {0}", Model.ImportedOrders[i].CustomerName)">
                                                    <span class="ui-icon ui-icon-plus"></span>
                                                    @Html.DisplayFor(m => m.ImportedOrders[i].CustomerId)
                                                </a>

                                            }
                                            else
                                            {
                                                <span>@Html.DisplayFor(m => m.ImportedOrders[i].CustomerId)</span>
                                            }
                                        </td>
                                        <td @Html.Raw(Model.ImportedOrders[i].InternationalFlag ? "style = 'background-color: #b3ea3c' title='International customer'" : "")>
                                            @if (Model.ImportedOrders[i].IsCustomerActive)
                                            {
                                                @Html.DisplayFor(m => m.ImportedOrders[i].CustomerName)
                                            }
                                            else
                                            {
                                                <span style="text-decoration: line-through" title="This customer is inactive.">@Html.DisplayFor(m => m.ImportedOrders[i].CustomerName)</span>
                                            }
                                        </td>
                                        <td style="text-align: right">
                                            @Html.DisplayFor(m => m.ImportedOrders[i].PickslipCount)
                                        </td>
                                        <td style="text-align: right">
                                            @Html.DisplayFor(m => m.ImportedOrders[i].DcCancelDateRange)
                                        </td>
                                        <td style="text-align: right">
                                            @Html.DisplayFor(m => m.ImportedOrders[i].DollarsOrdered)
                                        </td>
                                        <td style="text-align: right">
                                            @Html.DisplayFor(m => m.ImportedOrders[i].PiecesOrdered)
                                        </td>
                                        <td style="text-align: right">
                                            @Html.DisplayFor(m => m.ImportedOrders[i].ImportDateRange)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>*@
                </div>
            }
            @for (var j = 0; j < Model.BucketsByStatus.Count; ++j)
            {
                <div id="@Model.BucketsByStatus.Values[j][0].BucketStatus.ToString()" role="tabpanel" class="tab-pane">
                    <blockquote>
                        <p class="text-info"><em>@Model.StateDisplayNames[Model.BucketsByStatus.Values[j][0].BucketStatus]</em> Pick Waves</p> 
                    </blockquote>

                    @TabDescription(Model.BucketsByStatus.Values[j][0].BucketStatus)


                    <ul class="list-group">
                        <li class="list-group-item list-group-item-success">
                            <div class="row">
                                <div class="col-md-6">
                                    <h4 class="list-group-item-heading">
                                        @string.Format("{0:N0} customers", Model.BucketsByStatus.Values[j].Count)
                                        @*@Html.DisplayFor(m=>m.BucketsByStatus.Values[j].Count) Customers*@
                                        <span class="label label-info">
                                            @string.Format("{0:N0}", Model.BucketsByStatus.Values[j].Sum(p => p.BucketCount)) Waves
                                            @*@Html.DisplayFor(m => m.BucketsByStatus.Values[j].Sum(p => p.BucketCount)) Waves*@
                                        </span>
                                        <small>
                                            <span class="badge">
                                                &nbsp; DC Cancel @{
                var dr = new DcmsMobile.PickWaves.Helpers.DateRange
                {
                    From = Model.BucketsByStatus.Values[j].Min(p => p.DcCancelDateRange.From),
                    To = Model.BucketsByStatus.Values[j].Max(p => p.DcCancelDateRange.To)
                };
                                                } @dr
                                            </span><span class="glyphicon glyphicon-sort-by-attributes-alt"></span>
                                        </small>

                                    </h4>
                                </div>
                                <div class="col-md-3">
                                    <h4 class="list-group-item-heading" style="width:9em;text-align:right; display:inline-block">
                                        <span class="label label-success">
                                            Ordered @string.Format("{0:N0}", Model.BucketsByStatus.Values[j].Sum(p => p.OrderedPieces)) 
                                        </span>
                                    </h4>
                                    <h4 class="list-group-item-heading" style="width:4em;text-align:right; display:inline-block">
                                        <span class="label label-success">
                                           @* Highest*@ Max priority @Model.BucketsByStatus.Values[j].Max(p => p.MaxPriorityId)
                                        </span>
                                    </h4>
                                </div>
                                <div class="col-md-3">
                                    <div class="progress">
                                        <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width:50% ">
                                            @string.Format("{0:N0}", Model.BucketsByStatus.Values[j].Sum(p => p.PickedPieces)) Picked Pcs
                                        </div>
                                         @string.Format("{0:N0}",Model.BucketsByStatus.Values[j].Sum(p => p.UnpickedPieces + p.PickedPieces)) Unpicked pcs
                                    </div>
                                </div>
                            </div>
                        </li>
                        @for (var i = 0; i < Model.BucketsByStatus.Values[j].Count; ++i)
                        {

                            <li class="list-group-item" >
                                <div class="row">
                                    <div class="col-md-6">
                                        <h4 class="list-group-item-heading">
                                            <small> @(i + 1)</small>
                                            <a @Html.Raw(Model.BucketsByStatus.Values[j][i].IsCustomerActive ? "" : "style='text-decoration:line-through'") href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(
                                                 new DcmsMobile.PickWaves.ViewModels.ManageWaves.IndexViewModel(Model.BucketsByStatus.Values[j][i].CustomerId, Model.BucketsByStatus.Values[j][i].BucketStatus, Model.SearchUserName)))" title="Wave List">
                                                @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].CustomerId):
                                            </a>
                                            <small>
                                            @if (Model.BucketsByStatus.Values[j][i].IsCustomerActive)
                                            {
                                                <span @Html.Raw(Model.BucketsByStatus.Values[j][i].IsCustomerActive ? "" : "class='bg-info' title='International customer'")>
                                                    @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].CustomerName)
                                                </span>
                                            }
                                            else
                                            {
                                                <s title="This customer is inactive.">@Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].CustomerName)</s>
                                            }
                                           
                                                <span class="label label-info">
                                                    @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].BucketCount)
                                                </span>
                                                <span class="badge">
                                                    @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].DcCancelDateRange)
                                                </span>
                                            </small>
                                        </h4>
                                    </div>
                                    <div class="col-md-3">
                                        <h4 class="list-group-item-heading" style="width:9em;text-align:right; display:inline-block">
                                            <span class="label label-success">
                                                @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].OrderedPieces)
                                            </span>
                                        </h4>
                                        <h4 class="list-group-item-heading" style="width:3em;text-align:right; display:inline-block">
                                            <span class="label label-success">
                                                @Html.DisplayFor(p => p.BucketsByStatus.Values[j][i].MaxPriorityId)
                                            </span>
                                        </h4>
                                    </div>
                                    <div class="col-md-3">
                                       
                                            @if (Model.BucketsByStatus.Values[j][i].UnpickedPieces > 0 || Model.BucketsByStatus.Values[j][i].PickedPieces > 0)
                                            {
                                                <div class="progress" style="margin-bottom:0px">
                                                    <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @Model.BucketsByStatus.Values[j][i].PercentUnpickedPieces%">
                                                        @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].PickedPieces)
                                                    </div>
                                                    &nbsp;@Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].UnpickedPieces)
                                                </div>
                                            }
                                           
                                            @if (Model.BucketsByStatus.Values[j][i].UncreatedPieces > 0)
                                            {
                                                if (Model.BucketsByStatus.Values[j][i].UncreatedPieces >= Model.BucketsByStatus.Values[j][i].OrderedPieces)
                                                {
                                                <p class=" list-group-item-text">
                                                    <span class="glyphicon glyphicon-info-sign"></span>Boxes not created
                                                </p>
                                                }
                                                else
                                                {
                                                    if (Model.BucketsByStatus.Values[j][i].BucketStatus == DcmsMobile.PickWaves.Helpers.ProgressStage.Frozen)
                                                    {
                                                    }
                                                    else
                                                    {
                                                        @* We never expect to see this message because we always create boxes for all pieces*@
                                                        <div class="ui-state-error">
                                                            <span class="glyphicon glyphicon-info-sign"></span> @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].UncreatedPieces) pieces cancelled
                                                        </div>
                                                    }
                                                }
                                            }
                                        </div>
                                    </div>
                                </li>
                        }
                    </ul>
                    @*<div class="boxContent">
                                @TabDescription(Model.BucketsByStatus.Values[j][0].BucketStatus)
                                <table class="table table-condensed table-bordered">
                                    <thead>
                                        <tr>
                                            <th colspan="3">
                                                Customer
                                            </th>
                                            <th rowspan="2">
                                                # Waves
                                            </th>
                                            <th rowspan="2">Highest priority</th>
                                            <th rowspan="2" title="Earliest DC cancel date [MM/DD] to Latest DC cancel date [MM/DD/YYYY]" style="white-space: nowrap">
                                                DC Cancel
                                                <span class="ui-icon ui-icon-triangle-1-n" style="display: inline-block;"></span><sub>1</sub>
                                            </th>
                                            <td colspan="2">
                                                Pieces
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>#</th>
                                            <th>ID</th>
                                            <th>Name</th>
                                            <th style="white-space: nowrap">Ordered</th>
                                            <td>
                                                <div class="progress">
                                                    <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 60%;">
                                                        Picked
                                                    </div>
                                                    Not Picked
                                                </div>
                                                @*<div class="pw-thin-progressbar ui-progressbar ui-widget ui-widget-content ui-corner-all" style="width: 15em;">
                                                        <div style="width: 50%" class="ui-progressbar-value ui-widget-header ui-corner-left" title="Number of pieces for which boxes exist but which are not in box yet">Picked</div>
                                                        <div style="left: 50%; width: 50%" class="ui-progressbar-value ui-corner-right" title="Number of pieces which are already in boxes">Not Picked</div>
                                                    </div>
                                            </td>
                                        </tr>
                                        <tr class="ui-state-active">
                                            <th colspan="2">Summary</th>
                                            <th>@string.Format("{0:N0} customers", Model.BucketsByStatus.Values[j].Count) </th>
                                            <th>@Model.BucketsByStatus.Values[j].Sum(p => p.BucketCount)</th>
                                            <th>@Model.BucketsByStatus.Values[j].Max(p => p.MaxPriorityId)</th>
                                            @{
                        var dr = new DcmsMobile.PickWaves.Helpers.DateRange
                        {
                            From = Model.BucketsByStatus.Values[j].Min(p => p.DcCancelDateRange.From),
                            To = Model.BucketsByStatus.Values[j].Max(p => p.DcCancelDateRange.To)
                        };
                                            }
                                            <th>@dr</th>
                                            <th>@string.Format("{0:N0}", Model.BucketsByStatus.Values[j].Sum(p => p.OrderedPieces))</th>
                                            <th>
                                                @string.Format("{0:N0}", Model.BucketsByStatus.Values[j].Sum(p => p.PickedPieces)) of
                                                @string.Format("{0:N0}", Model.BucketsByStatus.Values[j].Sum(p => p.UnpickedPieces + p.PickedPieces))
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (var i = 0; i < Model.BucketsByStatus.Values[j].Count; ++i)
                                        {
                                            <tr class="@(i % 2 == 0 ? "rowA" : "rowB")">
                                                <td style="text-align: right">@(i + 1)</td>

                                                <td>
                                                    <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(
                                                         new DcmsMobile.PickWaves.ViewModels.ManageWaves.IndexViewModel(Model.BucketsByStatus.Values[j][i].CustomerId, Model.BucketsByStatus.Values[j][i].BucketStatus, Model.SearchUserName)))" title="Wave List">
                                                        <span class="ui-icon ui-icon-zoomin"></span>
                                                        @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].CustomerId)
                                                    </a>
                                                </td>
                                                <td>
                                                    <span @Html.Raw(Model.BucketsByStatus.Values[j][i].IsCustomerActive ? "" : "style='text-decoration:line-through' title='This customer is inactive'")>@Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].CustomerName)</span>
                                                </td>
                                                <td style="text-align: right">
                                                    @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].BucketCount)
                                                </td>
                                                <td style="text-align: right">
                                                    @Html.DisplayFor(p => p.BucketsByStatus.Values[j][i].MaxPriorityId)
                                                </td>
                                                <td style="text-align: right">
                                                    @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].DcCancelDateRange)
                                                </td>
                                                <td style="text-align: right">
                                                    @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].OrderedPieces)
                                                </td>
                                                <td>
                                                    @if (Model.BucketsByStatus.Values[j][i].UnpickedPieces > 0 || Model.BucketsByStatus.Values[j][i].PickedPieces > 0)
                                                    {
                                                        @*<div class="pw-thin-progressbar ui-progressbar ui-widget ui-widget-content ui-corner-all" style="width: 14em;"
                                                                 title="@Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].PickedPieces) of @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].OrderedPieces) pieces picked.">
                                                                @if (Model.BucketsByStatus.Values[j][i].PickedPieces > 0)
                                                                {
                                                                    <div style="width: @Model.BucketsByStatus.Values[j][i].PercentPickedPieces%" class="ui-progressbar-value ui-widget-header ui-corner-left">
                                                                        @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].PickedPieces)
                                                                    </div>
                                                                }
                                                                @if (Model.BucketsByStatus.Values[j][i].UnpickedPieces > 0)
                                                                {
                                                                    <div style="left: @(Model.BucketsByStatus.Values[j][i].PercentPickedPieces)%; width: @Model.BucketsByStatus.Values[j][i].PercentUnpickedPieces%" class="ui-progressbar-value ui-corner-right">
                                                                        @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].UnpickedPieces)
                                                                    </div>
                                                                }
                                                            </div>
                                                        <div class="progress">
                                                            <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @Model.BucketsByStatus.Values[j][i].PercentPickedPieces%;">
                                                                @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].PickedPieces)
                                                            </div>
                                                            @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].UnpickedPieces)
                                                        </div>
                                                    }
                                                    @if (Model.BucketsByStatus.Values[j][i].UncreatedPieces > 0)
                                                    {
                                                        if (Model.BucketsByStatus.Values[j][i].UncreatedPieces >= Model.BucketsByStatus.Values[j][i].OrderedPieces)
                                                        {
                                                            <div>Boxes not created</div>
                                                        }
                                                        else
                                                        {
                                                            if (Model.BucketsByStatus.Values[j][i].BucketStatus == DcmsMobile.PickWaves.Helpers.ProgressStage.Frozen)
                                                            {
                                                            }
                                                            else
                                                            {
                                                                @* We never expect to see this message because we always create boxes for all pieces
                                                                <div class="ui-state-error">
                                                                    @Html.DisplayFor(m => m.BucketsByStatus.Values[j][i].UncreatedPieces) pieces cancelled
                                                                </div>
                                                            }
                                                        }
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>*@
                </div>
            }
            @*<div role="tabpanel" class="tab-pane active" id="home">...</div>
                <div role="tabpanel" class="tab-pane" id="profile">...</div>
                <div role="tabpanel" class="tab-pane" id="messages">...</div>
                <div role="tabpanel" class="tab-pane" id="settings">...</div>*@
        </div>
    </div>



</div>


@section script{
    @*<link type="text/css" href="@Links_PickWaves.Areas.PickWaves.Home.Home_Index_css" rel="stylesheet" />
        <script type="text/javascript" src="@Links_PickWaves.Areas.PickWaves.Home.Home_Index_js"></script>*@
}
@*
    $Id$
    $Revision$
    $URL$
    $Header$
    $Author$
    $Date$
*@
