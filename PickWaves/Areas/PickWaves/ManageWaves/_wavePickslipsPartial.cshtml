@model DcmsMobile.PickWaves.ViewModels.ManageWaves.WavePickslipsViewModel

@if (Model.UserIsManager && Model.Bucket.IsFrozen && Model.Bucket.BucketState != DcmsMobile.PickWaves.Helpers.ProgressStage.Completed)
{

    <blockquote>
        You can add more pickslip on this wave
        <a href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(new DcmsMobile.PickWaves.ViewModels.CreateWave.IndexViewModel(
                 Model.Bucket.MaxCustomerId, Model.Bucket.BucketId)))">Add pickslips</a>
    </blockquote>

}



<ul class="list-group">

    @for (var i = 0; i < Model.PickslipList.Count; ++i)
    {
        <li class="list-group-item">
            <div class="row">
                <div class="col-md-5">
                    <h4 class="list-group-item-heading">
                        <small>@(i + 1)</small>
                        <a href='@Url.Content(string.Format("~/Inquiry/Pickslip/{0}", Model.PickslipList[i].PickslipId))' target="_inquiry">@Html.DisplayFor(m => m.PickslipList[i].PickslipId)</a>
                        <small>
                            PurchaseOrder  <a href='@Url.Content(string.Format("~/Inquiry/Home/InquiryIndex?id={0}", Model.PickslipList[i].PurchaseOrder))' target="_inquiry">@Html.DisplayFor(m => m.PickslipList[i].PurchaseOrder)</a>
                            &bull;
                            VwhId  @Html.DisplayFor(m => m.PickslipList[i].VwhId)
                        </small>
                    </h4>
                    <p class="list-group-item-text">

                        Customer DC: @Html.DisplayFor(m => m.PickslipList[i].CustomerDcId)

                        <small>&bull; Store @Html.DisplayFor(m => m.PickslipList[i].CustomerStoreId)</small>

                    </p>
                </div>
                <div class="col-md-5">

                    @Html.DisplayFor(m => m.PickslipList[i].CurrentPieces) of  @Html.DisplayFor(m => m.PickslipList[i].OrderedPieces) Pieces picked
                    @if (Model.PickslipList[i].UnPickedPieces > 0)
                    {
                        <small>&bull; Unpicked <span class="badge"> @Model.PickslipList[i].UnPickedPieces</span></small>
                    }
                    @if (Model.PickslipList[i].CancelledBoxCount > 0)
                    {
                        <span class="text-warning pull-right">
                            &bull; @Html.DisplayFor(m => m.PickslipList[i].CancelledBoxCount) boxes cancelled
                        </span>
                    }
                    <div class="progress" style="margin-bottom:0px;">
                        <div style="width:@Model.PickslipList[i].PercentCurrentPieces%; min-width:10%" class="progress-bar" title="@Html.DisplayFor(m => m.PickslipList[i].CurrentPieces) pieces in box">
                            @Html.DisplayFor(m => m.PickslipList[i].CurrentPieces)
                        </div>
                    </div>

                </div>
                <div class="col-md-2">
                    @if (Model.UserIsManager)
                    {

                        if (Model.PickslipList[i].IsRemovablePickslip)
                        {

                            <div class="btn-group pull-right">
                                <button type="button" class="btn btn-primary dropdown-toggle btn-sm" data-toggle="dropdown">
                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu" role="menu" style="padding-bottom:0px;">
                                    <li>
                                        <center>Are you sure?</center>
                                        <div class="btn-group btn-group-justified">
                                            <button class="btn btn-primary" type="submit"
                                                    data-pickslip-remove-url="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.RemovePickslipFromBucket
                                                         (Model.Bucket.BucketId, Model.PickslipList[i].PickslipId))">
                                                Yes
                                            </button>
                                            <a class="btn btn-default">No</a>
                                        </div>
                                    </li>

                                </ul>
                            </div>
                        }
                        else
                        {


                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-warning" disabled> Can't remove </button>
                                <button type="button" class="btn btn-xs btn-link dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                    <small title="Can't remove because some pieces are pulled or picked or Wave is unfreeze.">Why?</small>
                                </button>
                                <ul class="dropdown-menu" role="menu">
                                    <li class="text-info">
                                        <a href="#">
                                            <small>
                                                Can't remove because some<br />
                                                pieces are pulled or picked<br />
                                                or Wave is unfreeze.
                                            </small>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        }
                    }
                </div>
            </div>
        </li>
    }
</ul>









@*<table>
    <caption>Pickslip list of Wave @Html.DisplayFor(m => m.Bucket.BucketId)</caption>
    <thead>
        <tr>
            <th rowspan="2">#</th>
            <th rowspan="2">
                Pickslip<span class="ui-icon ui-icon-extlink" style="display: inline-block" title="Inquiry link"></span>
            </th>
            <th colspan="2" style="text-align: center">Pieces</th>
            <th rowspan="2">
                Purchase Order
                <span class="ui-icon ui-icon-extlink" style="display: inline-block" title="Inquiry link"></span>
            </th>
            <th rowspan="2">VWh</th>
            <th colspan="2">Customer</th>
            @if (Model.UserIsManager)
            {
                <th rowspan="2">Remove from Pick Wave</th>
            }
        </tr>
        <tr>
            <th>
                Ordered
                <span class="ui-icon ui-icon-triangle-1-s" style="display: inline-block"></span><sup>2</sup>
            </th>
            <td style="white-space: nowrap; text-align: center; vertical-align: middle">
                <div class="pw-thin-progressbar ui-progressbar ui-widget ui-widget-content ui-corner-all" style="width: 15em; display: inline-block">
                    <div style="width: 40%" class="ui-progressbar-value ui-widget-header ui-corner-left">
                        Picked
                    </div>
                    <div style="width: 50%" class="ui-progressbar-value">
                        Not Picked
                    </div>
                </div>
                <span class="ui-icon ui-icon-triangle-1-n" style="display: inline-block"></span><sup>1</sup>
            </td>
            <th>DC</th>
            <th>Store</th>
        </tr>
    </thead>
    <tbody>
        @for (var i = 0; i < Model.PickslipList.Count; ++i)
        {
            <tr class="@(i % 2 == 0 ? "rowA" : "rowB")">
                <td>
                    @(i + 1)
                </td>
                <td>
                    <a href='@Url.Content(string.Format("~/Inquiry/Pickslip/{0}", Model.PickslipList[i].PickslipId))' target="_inquiry">@Html.DisplayFor(m => m.PickslipList[i].PickslipId)</a>
                </td>
                <td style="text-align: right">
                    @Html.DisplayFor(m => m.PickslipList[i].OrderedPieces)
                </td>
                <td>
                    <div class="pw-thin-progressbar ui-progressbar ui-widget ui-widget-content ui-corner-all" style="width: 15em;">
                        @if (Model.PickslipList[i].CurrentPieces > 0)
                        {
                            <div style="width: @Model.PickslipList[i].PercentCurrentPieces%" class="ui-progressbar-value ui-widget-header ui-corner-left" title="@Html.DisplayFor(m => m.PickslipList[i].CurrentPieces) pieces in box">
                                @Html.DisplayFor(m => m.PickslipList[i].CurrentPieces)
                            </div>
                        }
                        @if (Model.PickslipList[i].UnPickedPieces > 0)
                        {
                            <div style="width: @Model.PickslipList[i].PercentUnPickedPieces%; left: @Model.PickslipList[i].PercentCurrentPieces%;" class="ui-progressbar-value" title="@Html.DisplayFor(m => m.PickslipList[i].UnPickedPieces) pieces not in box">
                                @Html.DisplayFor(m => m.PickslipList[i].UnPickedPieces)
                            </div>
                        }
                    </div>
                    @if (Model.PickslipList[i].CancelledBoxCount > 0)
                    {
                        <br /> <span style="font-style: italic; font-weight: normal; background-color: thistle">
                            @Html.DisplayFor(m => m.PickslipList[i].CancelledBoxCount) boxes cancelled
                        </span>
                    }
                </td>
                <td style="text-align: center">
                    <a href='@Url.Content(string.Format("~/Inquiry/Home/InquiryIndex?id={0}", Model.PickslipList[i].PurchaseOrder))' target="_inquiry">@Html.DisplayFor(m => m.PickslipList[i].PurchaseOrder)</a>
                </td>
                <td style="text-align: center">
                    @Html.DisplayFor(m => m.PickslipList[i].VwhId)
                </td>
                <td style="text-align: center">
                    @Html.DisplayFor(m => m.PickslipList[i].CustomerDcId)
                </td>
                <td style="text-align: center">
                    @Html.DisplayFor(m => m.PickslipList[i].CustomerStoreId)
                </td>
                @if (Model.UserIsManager)
                {
                    <td>
                        @if (Model.PickslipList[i].IsRemovablePickslip)
                        {
                            <span class="ui-icon ui-icon-close" style="cursor:pointer" data-pickslip-val="@Model.PickslipList[i].PickslipId"
                                  data-pickslip-remove-url="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.RemovePickslipFromBucket
                                  (Model.Bucket.BucketId, Model.PickslipList[i].PickslipId))"></span>
                        }
                        else
                        {
                            <span title="Can't remove because of some pieces are pulled or picked or Wave is unfreeze.">Can't remove</span>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
    <tfoot>
        <tr class="ui-state-active" style="font-size: 1.2em; font-weight: bold">
            <td colspan="2">Total</td>
            <td style="text-align: right">@Html.DisplayFor(m => m.TotalOrderedPieces)</td>
            <td>
                <div class="pw-thin-progressbar ui-progressbar ui-widget ui-widget-content ui-corner-all" style="width: 15em;">
                    @if (Model.TotalPickedPieces > 0)
                    {
                        <div style="width: @Model.TotalPercentPickedPieces%" class="ui-progressbar-value ui-widget-header ui-corner-left" title="@Html.DisplayFor(m => m.TotalPickedPieces) pieces in box">
                            @Html.DisplayFor(m => m.TotalPickedPieces)
                        </div>
                    }
                    @if (Model.TotalUnpickedPieces > 0)
                    {
                        <div style="width: @(100 - Model.TotalPercentPickedPieces)%; left: @Model.TotalPercentPickedPieces%;" class="ui-progressbar-value" title="@Html.DisplayFor(m => m.TotalUnpickedPieces) pieces not in box">
                            @Html.DisplayFor(m => m.TotalUnpickedPieces)
                        </div>
                    }
                </div>
            </td>
            <td colspan="5"></td>
        </tr>
    </tfoot>
</table>*@
