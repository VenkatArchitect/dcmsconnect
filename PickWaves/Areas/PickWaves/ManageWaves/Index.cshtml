<!--This document is HTML5 Validated by "W3C Markup Validation Service" at http://validator.w3.org/ on 15 Dec 2014 by apanwar-->
@model DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.IndexViewModel
@{
    ViewBag.Title = string.Format("{0} wave of {1}:{2}", Model.BucketStateDisplayName, Model.CustomerId, Model.CustomerName);
    Layout = MVC_PickWaves.PickWaves.SharedViews.Views._layoutPickWaves;
    var obj = ViewBag.IsEditable;
    var isEditable = obj != null && (bool)obj;
}
@section applinks{

    <li title="This report will identify those SKUs which cannot be shipped due to insufficient inventory. It will also tell you which areas these SKUs can be pulled from.">
        <a href="@(string.Format("{0}?customer_id={1}", DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.IndexViewModel.InventoryShortageReportUrl, Model.CustomerId))"
           target="report">
            <span class="glyphicon glyphicon-new-window"></span> 130.28: Inventory Shortages
        </a>

    </li>
    <li title="This report will display all PO or Waves with no. of boxes for 23008 Customer.">
        <a href="@(string.Format("{0}?customer_id={1}", DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.IndexViewModel.UnshippedboxesReportUrl, Model.CustomerId))"
           target="report">
            <span class="glyphicon glyphicon-new-window"></span> 110.16: No. of Unshipped Boxes.
        </a>

    </li>
    <li class="divider">
    </li>
    <li title="Pick Waves to be created by Customer @Model.CustomerId: @Model.CustomerName">
        <a href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(Model.CustomerId))">
            Create Pick Waves of  @Model.CustomerName
        </a>
    </li>
    @if (Model.BucketState != DcmsMobile.PickWaves.Helpers.ProgressStage.Frozen)
    {
        <li title="Frozen Pick Waves of same Customer @Model.CustomerId: @Model.CustomerName">
            <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(Model.CustomerId, Model.UserName, DcmsMobile.PickWaves.Helpers.ProgressStage.Frozen)) ">
                Frozen Pick Waves of @Model.CustomerName
            </a>
        </li>
    }
    @if (Model.BucketState != DcmsMobile.PickWaves.Helpers.ProgressStage.InProgress)
    {

        <li title="In Progress Pick Waves of same Customer @Model.CustomerId: @Model.CustomerName">
            <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(Model.CustomerId, Model.UserName, DcmsMobile.PickWaves.Helpers.ProgressStage.InProgress))">
                In Progress Pick Waves of @Model.CustomerName
            </a>
        </li>
    }
    @if (Model.BucketState != DcmsMobile.PickWaves.Helpers.ProgressStage.Completed)
    {

        <li title="Completed Pick Waves of same Customer @Model.CustomerId: @Model.CustomerName">
            <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(Model.CustomerId, Model.UserName, DcmsMobile.PickWaves.Helpers.ProgressStage.Completed))">
                Completed Pick Waves of  @Model.CustomerName
            </a>
        </li>
    }
    <li class="divider">
    </li>
}
<div class="container">
    @if (!string.IsNullOrWhiteSpace(Model.UserName))
    {
        <div class="alert alert-info">
            Showing Pick Waves created by @Model.UserName  @Html.ActionLink("Show all", MVC_PickWaves.PickWaves.ManageWaves.Index(Model.CustomerId, null, Model.BucketState))
        </div>
    }

    <h2 style="margin-top:0">
        @Html.DisplayFor(m => m.BucketCount)  @Model.BucketStateDisplayName Pick Waves of
        <small>
            <a href="@Url.Action(MVC_PickWaves.PickWaves.Home.Customer(Model.CustomerId))"
               title="See other pick waves of this customer">@Model.CustomerId:@Model.CustomerName</a>
        </small>
    </h2>

    <div class="panel panel-info">
        <div class="panel-heading" style="padding:0;border-bottom:0">
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="@Html.Raw(Model.BucketState == DcmsMobile.PickWaves.Helpers.ProgressStage.Frozen ? "active" : "")">
                    <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(Model.CustomerId, Model.UserName, DcmsMobile.PickWaves.Helpers.ProgressStage.Frozen)) ">
                        Frozen
                    </a>
                </li>
                <li role="presentation" class="@Html.Raw(Model.BucketState == DcmsMobile.PickWaves.Helpers.ProgressStage.InProgress ? "active" : "")">
                    <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(Model.CustomerId, Model.UserName, DcmsMobile.PickWaves.Helpers.ProgressStage.InProgress))">
                        In Progress
                    </a>
                </li>
                <li role="presentation" class="@Html.Raw(Model.BucketState == DcmsMobile.PickWaves.Helpers.ProgressStage.Completed ? "active" : "")">
                    <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(Model.CustomerId,Model.UserName, DcmsMobile.PickWaves.Helpers.ProgressStage.Completed))">
                        Completed
                    </a>
                </li>
            </ul>
        </div>
        <div class="panel-body">
            <div role="tabpanel" class="tab-pane active">

                @if (Model.Buckets.Count > 0)
                {
                    if (Model.Buckets.Count > 2)
                    {
                        //Show quick list only if we have many pick waves
                        <p>
                            Pick Wave
                            <abbr title="Pick Waves with number of orderd pieces">Quick List</abbr>. Jump to <a href="#fullList">Detailed List</a>
                        </p>
                        <ul class="list-inline">
                            @for (var i = 0; i < Model.Buckets.Count; ++i)
                            {  
                                
                                <li class="@(i % 2 == 0 ? "bg-info" : null)" style="width: 27em; -ms-text-overflow: ellipsis; -o-text-overflow: ellipsis; text-overflow: ellipsis;white-space:nowrap;overflow: hidden;">
                                    <a title=" pick wave details"
                                       href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WavePickslips(Model.Buckets[i].BucketId))">
                                        <span class="badge">@Html.DisplayFor(m => m.Buckets[i].OrderedPieces)</span>
                                        @Html.DisplayFor(m => m.Buckets[i].BucketId)
                                    </a>
                                    Priority : @Html.DisplayFor(m => m.Buckets[i].Priority)
                                    Priority : @Html.DisplayFor(m => m.Buckets[i].PickslipCount)
                                    Priority : @Html.DisplayFor(m => m.Buckets[i].PoCount)
                                </li>
                            }
                        </ul>
                    }
                    <div id="fullList">
                        @for (var i = 0; i < Model.Buckets.Count; ++i)
                        {
                            @Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelPartial, Model.Buckets_O[i], new ViewDataDictionary
                               {
                                   {"IsAuthorized", Model.UserIsManager}
                               })
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info">@string.Format("No Pick Waves found for customer {0}", Model.CustomerId)</div>
                }
            </div>
        </div>
    </div><!-- Nav tabs -->











</div>


@section script {
    <script src="@Links_PickWaves.Areas.PickWaves.SharedViews.BucketModel_js"></script>

    @*<link type="text/css" href="@Links_PickWaves.Areas.PickWaves.ManageWaves.ManageWave_Index_css" rel="stylesheet" />*@
}
















