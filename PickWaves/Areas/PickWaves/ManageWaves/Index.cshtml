@model DcmsMobile.PickWaves.ViewModels.ManageWaves.IndexViewModel
@{
    ViewBag.Title = Model.PageTitle;
    Layout = MVC_PickWaves.PickWaves.SharedViews.Views._layoutPickWaves2;
}
@section areatitle{

    <li title="This report will identify those SKUs which cannot be shipped due to insufficient inventory. It will also tell you which areas these SKUs can be pulled from.">
        <a href="@(string.Format("{0}?customer_id={1}", DcmsMobile.PickWaves.ViewModels.ManageWaves.IndexViewModel.InventoryShortageReportUrl, Model.CustomerId))"
           target="report">
            <span class="glyphicon glyphicon-new-window"></span> 130.28: Inventory Shortages
        </a>

    </li>
    <li class="divider">
    </li>
    <li>
        <a href="@MVC_PickWaves.PickWaves.Home.Index()">Pick Wave Home</a>

    </li>
}
<div class="container">
    @if (!string.IsNullOrWhiteSpace(Model.UserName))
    {
        <div class="alert alert-info">
            Showing PickWave created by @Model.UserName  @Html.ActionLink("Show all", MVC_PickWaves.PickWaves.ManageWaves.Index(new DcmsMobile.PickWaves.ViewModels.ManageWaves.IndexViewModel(Model.CustomerId, Model.BucketState, null)))
        </div>
    }
    <div class="page-header">
        <h3>
            @Model.PageTitle
        </h3>
    </div>
    <p>This list is order by priority and then DC Cancel Date</p>
    @if (Model.Buckets.Count > 0)
    {
        for (var i = 0; i < Model.Buckets.Count; ++i)
        {

            <div class="panel panel-default">
                <div class="panel-heading">

                    <h3 class="list-group-item-heading" style="display:inline-block">
                        Pick Wave <a title="Pick Wave Details"
                                     href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Wave(new DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel(Model.Buckets[i].BucketId,
                                                                DcmsMobile.PickWaves.ViewModels.ManageWaves.SuggestedNextActionType.BackTo)))">

                            @Model.Buckets[i].BucketId
                        </a> <small>@Model.Buckets[i].BucketName</small>
                        @if (Model.Buckets[i].IsFrozen)
                        {
                        <small class="badge"> <em>Frozen</em></small>
                        }
                    </h3>
                    <span>Created @Html.DisplayFor(m => m.Buckets[i].CreationDate) by @Html.DisplayFor(m => m.Buckets[i].CreatedBy)</span>

                    <div class="btn-group" role="group">
                        <a class="btn btn-default btn-sm" @Html.Raw(Model.UserIsManager && Model.Buckets[i].IsFrozen ? "" : "disabled'")
                           href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.EditableWave(new DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel(
                                                            Model.Buckets[i].BucketId,
                                                        DcmsMobile.PickWaves.ViewModels.ManageWaves.SuggestedNextActionType.CancelEditing)))">
                            <span class="glyphicon glyphicon-edit"></span> Edit
                        </a>
                        <a class="btn btn-default btn-sm" @Html.Raw(Model.UserIsManager && Model.Buckets[i].IsFrozen ? "" : "disabled'")
                           href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(new DcmsMobile.PickWaves.ViewModels.CreateWave.IndexViewModel(Model.Buckets[0].MaxCustomerId, Model.Buckets[0].BucketId)))">
                            <span class="glyphicon glyphicon-plus"></span>  Add Pickslips
                        </a>
                    </div>



                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6 ">
                            <div class="panel panel-success">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        @Html.DisplayFor(m => m.Buckets[i].CountValidatedBoxes) of @Html.DisplayFor(m => m.Buckets[i].CountTotalBoxes) boxes Validated

                                    </h4>
                                    @if (Model.Buckets[i].CountCancelledBoxes > 0 || true)
                                    {

                                        <span>&bull; @Html.DisplayFor(m => m.Buckets[i].CountCancelledBoxes) boxes cancelled</span>

                                    }
                                    @if (Model.Buckets[i].CountNotStartedBoxes > 0 || true)
                                    {
                                        <span>
                                            &bull; @Html.DisplayFor(m => m.Buckets[i].CountNotStartedBoxes) boxes not started
                                        </span>
                                    }
                                    
                                </div>
                                <div class="panel-body">
                                    <p class="list-group-item-text">
                                        @Html.DisplayFor(m => m.Buckets[i].UnderPickedPieces)
                                        @Html.DisplayFor(m => m.Buckets[i].CancelledPieces)


                                        <div class="btn-group" role="group" aria-label="...">
                                            <a class="btn btn-default btn-sm" @Html.Raw(Model.UserIsManager ? "" : "disabled") title="Increase priority">
                                                <span class="glyphicon glyphicon-arrow-down">
                                                </span>
                                            </a>
                                            <button type="button" class="btn btn-default btn-sm" disabled>Priority @Model.Buckets[i].PriorityId</button>
                                            <a class="btn btn-default btn-sm" @Html.Raw(Model.UserIsManager ? "" : "disabled") title="Decrease priority">
                                                <span class="glyphicon glyphicon-arrow-up"></span>

                                            </a>
                                        </div>


                                        &bull; @Html.DisplayFor(m => m.Buckets[i].CountPickslips)
                                        <small>Pickslips</small>


                                        &bull; @Html.DisplayFor(m => m.Buckets[i].CountPurchaseOrder)
                                        <small>POs</small>
                                    </p>
                                    <p class="list-group-item-text">
                                        @*Created on @Html.DisplayFor(m => m.Buckets[i].CreationDate) &bull; by <small>@Html.DisplayFor(m => m.Buckets[i].CreatedBy)</small>*@
                                    </p>
                                    <p class="list-group-item-text">
                                        @if (Model.Buckets[i].RequiredBoxExpediting || true)
                                        {
                                        <span class="text-info">&bull; Required Box Expediting</span>
                                        }
                                        @if (Model.Buckets[i].QuickPitch || true)
                                        {
                                        <span class="text-info">&bull; Quick Pitching Required</span>
                                        }
                                        @if (Model.Buckets[i].CountNotAssignedSku > 0)
                                        {
                                        <div class="alert alert-danger">@Html.DisplayFor(m => m.Buckets[i].CountNotAssignedSku)</div>

                                        }

                                    </p>
                                </div>
                            </div>




                        </div>
                        <div class="col-md-6">
                            <ul class="list-group">
                                <li class="list-group-item list-group-item-success">
                                    <span class="badge pull-right">DC Cancel @Html.DisplayFor(m => m.Buckets[i].DcCancelDateRange)</span>
                                    <h4 class="list-group-item-heading">
                                        @Html.DisplayFor(m => m.Buckets[i].OrderedPieces) Pieces Ordered
                                        &bull; @Html.DisplayFor(m => m.Buckets[i].PercentPiecesComplete) complete
                                    </h4>
                                </li>
                                @if (Model.Buckets[i].Activities.Count(p => !string.IsNullOrWhiteSpace(p.AreaId)) > 0)
                                {
                                    for (var j = 0; j < Model.Buckets[i].Activities.Count; j++)
                                    {

                                        <li class="list-group-item list-group-item-@Html.Raw(Model.Buckets[i].Activities[j].ActivityType == DcmsMobile.PickWaves.Helpers.BucketActivityType.Pulling ? "success" : "info")">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    @Html.DisplayFor(m => m.Buckets[i].Activities[j].DisplayName)
                                                    <strong>&nbsp; @Html.DisplayFor(m => m.Buckets[i].Activities[j].AreaShortNameDisplay)</strong>
                                                </div>
                                                <div class="col-md-8">
                                                    <div class="progress">
                                                        <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @Model.Buckets[i].Activities[j].PercentPiecesComplete%;">
                                                            @Html.DisplayFor(m => m.Buckets[i].Activities[j].PiecesComplete)
                                                        </div>
                                                        @Html.DisplayFor(m => m.Buckets[i].Activities[j].PiecesIncomplete)
                                                    </div>
                                                </div>
                                            </div>

                                        </li>
                                    }
                                }


                            </ul>

                        </div>
                    </div>









                    @*@Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelPartial, Model.Buckets[i],
            new ViewDataDictionary(new
            {
                IsEditable = false
            }))*@
                </div>
            </div>



        }
    }
    else
    {
        <div class="alert alert-info">@string.Format("No Pick Waves found for customer {0}", Model.CustomerId)</div>
    }
</div>
@*<div class="box">
        @if (Model.Buckets.Count > 0)
        {

                        @for (var i = 0; i < Model.Buckets.Count; ++i)
                        {
                            <tr>
                                <td style="text-align: left; vertical-align: top">
                                    <span style="margin-top: 2mm; margin-left: 2mm; display: inline-block">@(i + 1).</span>
                                    <ul class="waveActionMenu" style="margin-top: 25%">
                                        <li>
                                            <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Wave(new DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel(Model.Buckets[i].BucketId,
                                                                DcmsMobile.PickWaves.ViewModels.ManageWaves.SuggestedNextActionType.BackTo)))" title="Pick Wave Details">
                                                <span class="ui-icon ui-icon-zoomin"></span>
                                                @Model.Buckets[i].BucketId
                                            </a>
                                            <ul>
                                                <li @Html.Raw(Model.UserIsManager && Model.Buckets[i].IsFrozen ? "" : "class='ui-state-disabled'")>
                                                    <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.EditableWave(new DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel(
                                                            Model.Buckets[i].BucketId,
                                                        DcmsMobile.PickWaves.ViewModels.ManageWaves.SuggestedNextActionType.CancelEditing)))">
                                                        <span class="ui-icon ui-icon-pencil"></span>Edit
                                                    </a>
                                                </li>
                                                <li>-</li>
                                                <li class="increase-action @Html.Raw(Model.UserIsManager ? "" : "ui-state-disabled")">
                                                    <a>
                                                        <span class="ui-icon ui-icon-arrowthick-1-n" title="Increase priority"></span>
                                                        Increase Priority
                                                    </a>
                                                </li>
                                                <li class="decrease-action @Html.Raw(Model.UserIsManager ? "" : "ui-state-disabled")">
                                                    <a>
                                                        <span class="ui-icon ui-icon-arrowthick-1-s" title="Decrease priority"></span>
                                                        Decrease Priority
                                                    </a>
                                                </li>
                                                <li>-</li>
                                                <li @Html.Raw(Model.UserIsManager && Model.Buckets[i].IsFrozen ? "" : "class='ui-state-disabled'")>
                                                    <a href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(new DcmsMobile.PickWaves.ViewModels.CreateWave.IndexViewModel(Model.Buckets[0].MaxCustomerId, Model.Buckets[0].BucketId)))">Add Pickslips</a>
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>
                                </td>
                                <td>
                                    <div class="bucketModelPartial" style="padding-top: 1em; padding-bottom: 0.5em">
                                        @Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelPartial, Model.Buckets[i])
                                        @Html.DisplayFor(m => m.Buckets[i], MVC_PickWaves.PickWaves.SharedViews.Views.DisplayTemplates.BucketModel, new
                                            {
                                                IsEditable = false
                                            })
                                    </div>
                                </td>
                            </tr>
                        }

            </div>
        }
        else
        {
    <span class="ui-state-highlight">@string.Format("No Pick Waves found for customer {0}", Model.CustomerId)</span>
        }*@



@section script {
    @*<script src="@Links_PickWaves.Areas.PickWaves.ManageWaves.ManageWave_Index_js"></script>
        <link type="text/css" href="@Links_PickWaves.Areas.PickWaves.ManageWaves.ManageWave_Index_css" rel="stylesheet" />*@
}
