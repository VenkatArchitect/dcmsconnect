@using DcmsMobile.PickWaves.Helpers

@model DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.WaveBoxListModel
@{
    ViewBag.Title = "Pick Wave # " + Model.Bucket.BucketId;
    Layout = MVC_PickWaves.PickWaves.SharedViews.Views._layoutPickWaves;
}

@section applinks{
    <li title="This report display details of pick wave.">
        <a href="@(string.Format("{0}?bucket_id={1}", DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.ManageWavesController.BucketSummaryReportUrl, Model.Bucket.BucketId))" target="report">
            Report 140.02: Pick Wave Summary
        </a>
    </li>
    <li>
        <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(Model.Bucket.CustomerId, null, Model.Bucket.BucketState))"
           title="See other Pick Waves of Customer @Model.Bucket.CustomerId: @Model.Bucket.CustomerName">Other Pick Waves of @Model.Bucket.CustomerName</a>
    </li>
    <li class="divider"></li>
}

@helper DisplayBoxPieces(DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.BoxModel box)
{
    if (box.CurrentPieces == box.ExpectedPieces)
    {
        @box.CurrentPieces
    }
    else if ((box.CurrentPieces ?? 0) == 0 || box.State == BoxState.Cancelled)
    {
        @box.ExpectedPieces
    }
    else
    {
        @(box.CurrentPieces ?? 0) @:of @box.ExpectedPieces
    }
}

@helper DisplayBoxStatus(DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.BoxModel box)
{
    string lblClass;
    string stateText;
    DateTimeOffset? date;
    switch (box.State)
    {
        case BoxState.Cancelled:
            lblClass = "label-danger";
            stateText = "Cancelled";
            date = box.CancelDate;
            break;

        case BoxState.Completed:
            lblClass = "label-success";
            stateText = "Completed";
            date = box.VerifyDate;
            break;

        case BoxState.InProgress:
            lblClass = "label-info";

            if (box.MaxPitchingEndDate.HasValue)
            {
                stateText = "Pitched";
                date = box.MaxPitchingEndDate;
            }
            else
            {
                stateText = "Created";
                date = box.CreatedDate;
            }
            break;

        case BoxState.NotStarted:
            lblClass = "label-default";
            stateText = "Not Started";
            date = null;
            break;

        default:
            lblClass = "label-default";
            stateText = "??";
            date = null;
            break;

    }

    <span class="label @lblClass">
        @stateText @string.Format("{0:g}", date)
    </span>
}
<div class="container">

    <h2 style="margin-top:0">
        @ViewBag.Title
        <small>
            <a href="@Url.Action(MVC_PickWaves.PickWaves.Home.Customer(Model.Bucket.CustomerId))"
               title="See other pick waves of this customer">@Model.Bucket.CustomerId:@Model.Bucket.CustomerName</a>
        </small>
    </h2>    
    <div role="tabpanel" id="tabs">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs bg-success" role="tablist">
            <li >
                <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WavePickslips(Model.Bucket.BucketId))" role="tab">
                    Pickslips
                </a>
            </li>
            <li class="active">
                @*<a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WaveBoxes(Model.Bucket.BucketId))" role="tab">
                Boxes
            </a>*@
                <a role="tab">
                    Boxes
                </a>
            </li>
            <li>
                <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WaveSkus(Model.Bucket.BucketId))" role="tab">
                    SKUs
                </a>
            </li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active">
                <blockquote>
                    Boxes of Pick Wave @Html.DisplayFor(m => m.Bucket.BucketId)
                </blockquote>

                <form action="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.CancelBoxes())" method="post">
                    <ul class="list-group">
                        <li class="list-group-item active">
                            <div class="row">
                                <div class="col-md-6">
                                    @if (Model.BoxesList.Count > 0)
                                    {
                                        <button class="pull-left btn btn-default btn-xs" type="submit"
                                                @(Model.UserIsManager ? "" : "disabled=disabled")
                                                name="@MVC_PickWaves.PickWaves.ManageWaves.CancelBoxesParams.bucketId"
                                                value="@Model.Bucket.BucketId">
                                            Cancel Selected
                                        </button>
                                    }
                                    <h4 class="list-group-item-heading">
                                        &nbsp;
                                        Box
                                        <small>
                                            &bull; Pickslip
                                        </small>
                                        <span class="label label-default">
                                            <abbr title="Virtual Wearhouse">VWH</abbr>
                                        </span>
                                    </h4>
                                </div>
                                <div class="col-md-3">
                                    <abbr title="If this box will be pulled, the carton id is displayed. Otherwise this box will be pitched.">
                                        Pull Carton ?
                                    </abbr>
                                    <span class="badge">
                                        Pieces
                                    </span>
                                </div>
                                <div class="col-md-3" style="text-align:right">
                                    <span class="label label-default">Status</span>
                                </div>
                            </div>
                        </li>

                        @for (var i = 0; i < Model.BoxesList.Count; i++)
                        {
                            <li class="list-group-item list-group-item-@(string.IsNullOrWhiteSpace(Model.BoxesList[i].CartonId) ? "info" :"success" )">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h4 class="list-group-item-heading">
                                            <small>@(i + 1)</small>
                                            @if (Model.UserIsManager)
                                            {
                                                <input type="checkbox" name="@MVC_PickWaves.PickWaves.ManageWaves.CancelBoxesParams.boxes"
                                                       value="@Model.BoxesList[i].Ucc128Id" />

                                            }
                                            <a href="@Model.BoxesList[i].UrlInquiryBox" target="_inquiry">@Html.DisplayFor(m => m.BoxesList[i].Ucc128Id)</a>
                                            <small>
                                                &bull;
                                                <a href="@Model.BoxesList[i].UrlInquiryPickslip" target="_inquiry">@Html.DisplayFor(m => m.BoxesList[i].PickslipId)</a>
                                            </small>
                                            <span class="label label-default">
                                                @Html.DisplayFor(m => m.BoxesList[i].VWhId)
                                            </span>
                                        </h4>
                                    </div>
                                    <div class="col-md-3" title="If this box will be pulled, the carton id is displayed. Otherwise this box will be pitched.">
                                        <a href="@Model.BoxesList[i].UrlInquiryCarton" target="_inquiry">
                                            @Html.DisplayFor(m => m.BoxesList[i].CartonId)
                                        </a>
                                        <span class="badge">@DisplayBoxPieces(Model.BoxesList[i])</span>
                                    </div>
                                    <div class="col-md-3" style="text-align:right">
                                        @DisplayBoxStatus(Model.BoxesList[i])
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </form>
            </div>
        </div>
    </div>   

    @Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelPartial, Model.Bucket, new ViewDataDictionary
                                   {
                                       {"IsAuthorized", Model.UserIsManager}
                                   })
    </div>
@section script {
    <script src="@Links_PickWaves.Areas.PickWaves.SharedViews.BucketModel_js"></script>
}
