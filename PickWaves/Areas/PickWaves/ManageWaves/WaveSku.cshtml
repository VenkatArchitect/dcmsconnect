@using DcmsMobile.PickWaves.Helpers
@model DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.WaveSkuListModel
@{
    ViewBag.Title = "Pick Wave # " + Model.Bucket.BucketId; 
    Layout = MVC_PickWaves.PickWaves.SharedViews.Views._layoutPickWaves;
}

@section applinks{
    <li title="This report display details of pick wave.">
        <a href="@(string.Format("{0}?bucket_id={1}", DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.ManageWavesController.BucketSummaryReportUrl, Model.Bucket.BucketId))" target="report">
            Report 140.02: Pick Wave Summary
        </a>
    </li>
    <li>
        <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(Model.Bucket.CustomerId, null))"
           title="See other Pick Waves of Customer @Model.Bucket.CustomerId: @Model.Bucket.CustomerName">Other Pick Waves of @Model.Bucket.CustomerName</a>
    </li>
    <li class="divider"></li>
}
@helper InventoryTdClass(DcmsMobile.PickWaves.ViewModels.BucketActivityModel activity, int? pcs)
{
    if (activity != null && activity.PiecesIncomplete > 0)
    {
        if (pcs == null || pcs < activity.PiecesIncomplete)
        {
            @:class='text-danger'
        }
        else
        {
            @:class='text-info'
    }
    }
}

<div class="container">

    <h2 style="margin-top:0">
        @ViewBag.Title
        <small>
            <a href="@Url.Action(MVC_PickWaves.PickWaves.Home.Customer(Model.Bucket.CustomerId))"
               title="See other pick waves of this customer">@Model.Bucket.CustomerId:@Model.Bucket.CustomerName</a>
        </small>
    </h2>  

    <div role="tabpanel" style="margin-bottom:0.5em">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs bg-success" role="tablist">
            <li>
                <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WavePickslips(Model.Bucket.BucketId)) role=" tab">
                    Pickslips
                </a>

            </li>
            <li>
                <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WaveBoxes(Model.Bucket.BucketId))" role="tab">
                    Boxes
                </a>
            </li>
            <li class="active">
                <a role="tab">
                    SKUs
                </a>
            </li>
        </ul>
    </div>
        @Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelPartial, Model.Bucket, new ViewDataDictionary
                                   {
                                       {"IsAuthorized", Model.UserIsManager}
                                   })
        <!-- Tab panes -->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active">
                <blockquote>
                    @string.Format("SKUs List of wave {0}", Model.Bucket.BucketId)
                </blockquote>


                <ul class="list-group">
                    <li class="list-group-item active">
                        <div class="row">
                            <div class="col-md-5">
                                <h4>
                                    SKU
                                    <span class="label label-info">@Html.DisplayFor(m => m.TotalWeight) Weight / Dozen</span>
                                    <span class="label label-success"> @Html.DisplayFor(m => m.TotalVolume) Volume / Dozen</span>
                                    <abbr title="Virtual Warehouse">VWH</abbr>
                                </h4>
                                <div class='well well-sm'>
                                    <div class="text-info">
                                        Activity Type
                                        <em>@Model.PercentPiecesComplete% picked</em>
                                        <span class="badge pull-right">Ordered Pieces @Html.DisplayFor(m => m.TotalOrderedPieces)</span>
                                    </div>

                                    <div class="progress" style="margin-bottom:0">
                                        <div style="width: 50%" class="progress-bar progress-bar-success">
                                            <span style="white-space:nowrap">
                                                @Html.DisplayFor(m => m.TotalPiecesPicked) pieces picked
                                            </span>
                                        </div>
                                        <div class="progress-bar progress-bar-warning" style="width:  50%">
                                            @Html.DisplayFor(m => m.RemainingPiecesToPick) pieces remains
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-7">

                                @foreach (var area in Model.AllAreas)
                                {
                                    <div style="width:14em; display:inline-block;">
                                        <div class="well well-sm">
                                            <div class="text-info">
                                                <span class="pull-right">Pieces</span>
                                                <span>@area.BuildingId</span>-<span>@area.ShortName</span>
                                                @if (!string.IsNullOrEmpty(area.ReplenishAreaId))
                                                {
                                                    <small title="Replenish from @area.ReplenishAreaId">
                                                        &larr;@area.ReplenishAreaId
                                                    </small>
                                                }
                                            </div>

                                            <div class="label label-primary">
                                                Pieces @@ location
                                            </div>

                                        </div>

                                    </div>
                                }

                            </div>
                        </div>
                    </li>

                    @for (var i = 0; i < Model.BucketSkuList.Count; ++i)
                    {
                        <li class="list-group-item">
                            <div class="row">
                                <div class="col-md-5">
                                    <h4>
                                        <small>@(i + 1)</small>
                                        @Html.DisplayFor(m => m.BucketSkuList[i].DisplaySku)
                                        <span class="label label-info" title="Weight Per Dozen">@Html.DisplayFor(m => m.BucketSkuList[i].WeightPerDozen)</span>
                                        <span class="label label-success" title="Volume Per Dozan">@Html.DisplayFor(m => m.BucketSkuList[i].VolumePerDozen)</span>
                                        @Html.DisplayFor(m => m.BucketSkuList[i].VwhId)
                                    </h4>


                                    @if (Model.BucketSkuList[i].Activities.Count > 0)
                                    {
                                        for (var j = 0; j < Model.BucketSkuList[i].Activities.Count; ++j)
                                        {
                                            <div class='alert alert-@Html.Raw(Model.BucketSkuList[i].Activities[j].ActivityType == BucketActivityType.Pulling ? "success" : "info")'>
                                                <div>
                                                    @Html.DisplayFor(m => m.BucketSkuList[i].Activities[j].DisplayName)
                                                    @Html.DisplayFor(m => m.BucketSkuList[i].Activities[j].PickingDateRange)
                                                    <em>@Model.BucketSkuList[i].Activities[j].PercentPiecesComplete%</em>
                                                    <span class="badge pull-right">@Html.DisplayFor(m => m.BucketSkuList[i].OrderedPieces)</span>
                                                </div>
                                                <div class="progress" style="margin-bottom:0">
                                                    <div style="width: @Model.BucketSkuList[i].Activities[j].PercentPiecesComplete%" class="progress-bar progress-bar-success">
                                                        <span style="white-space:nowrap">
                                                            @Html.DisplayFor(m => m.BucketSkuList[i].Activities[j].PiecesComplete)
                                                        </span>
                                                    </div>
                                                    <div class="progress-bar progress-bar-warning" style="width:  @Model.BucketSkuList[i].Activities[j].PercentPiecesIncomplete%">
                                                        @Html.DisplayFor(m => m.BucketSkuList[i].Activities[j].PiecesIncomplete)
                                                    </div>
                                                </div>
                                                @if (Model.BucketSkuList[i].Activities[j].UnderPickedPieces.HasValue || Model.BucketSkuList[i].Activities[j].CancelledPieces.HasValue)
                                                {
                                                    <ul class="list-inline">
                                                        @if (Model.BucketSkuList[i].Activities[j].UnderPickedPieces.HasValue)
                                                        {
                                                            <li class="list-group-item list-group-item-danger"> @Html.DisplayFor(m => m.BucketSkuList[i].Activities[j].UnderPickedPieces) Under picked</li>
                                                        }
                                                        @if (Model.BucketSkuList[i].Activities[j].CancelledPieces.HasValue)
                                                        {
                                                            <li class="list-group-item list-group-item-danger">@Html.DisplayFor(m => m.BucketSkuList[i].Activities[j].CancelledPieces) Cancelled</li>
                                                        }
                                                    </ul>
                                                }
                                            </div>

                                        }
                                    }
                                    else
                                    {
                                        <div class='alert alert-warning'>
                                            Not picked or pulled yet
                                        </div>
                                    }
                                </div>

                                <div class="col-md-7">

                                    @{
                        var hasInventory = false;
                                    }
                                    @for (var j = 0; j < Model.AllAreas.Count; ++j)
                                    {
                                        if (Model.BucketSkuList[i].InventoryByArea != null && Model.BucketSkuList[i].InventoryByArea[j].InventoryPieces != null)
                                        {
                                            hasInventory = true;
                                            var activity = Model.BucketSkuList[i].Activities.FirstOrDefault(p => p.AreaId == Model.BucketSkuList[i].InventoryByArea[j].AreaId);
                                            <div style="width:14em; display:inline-block" @InventoryTdClass(activity, Model.BucketSkuList[i].InventoryByArea[j].InventoryPieces)>
                                                <div class="well well-sm">
                                                    <div>
                                                        <span class="pull-right" title="Total pieces at @Model.AllAreas[j].BuildingId-@Model.AllAreas[j].ShortName">@Html.DisplayFor(m => m.BucketSkuList[i].InventoryByArea[j].InventoryPieces)</span>
                                                        <span>@Model.AllAreas[j].BuildingId-@Model.AllAreas[j].ShortName</span>
                                                    </div>
                                                    @if (!string.IsNullOrWhiteSpace(Model.BucketSkuList[i].InventoryByArea[j].BestLocationId))
                                                    {
                                                        <div class="label label-primary" title="Best Location with maximum number of pieces">
                                                            @Html.DisplayFor(m => m.BucketSkuList[i].InventoryByArea[j].PiecesAtBestLocation)
                                                            @Html.DisplayFor(m => m.BucketSkuList[i].InventoryByArea[j].BestLocationId)
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div style="width:14em; display:inline-block" class="hidden-xs">
                                                &nbsp;
                                            </div>
                                        }
                                    }
                                    @if (!hasInventory)
                                    {
                                        <div style="text-align:center">No Inventory</div>
                                    }

                                </div>


                            </div>

                        </li>
                    }
                </ul>
            </div>
        </div>
 

   

</div>


@section script {
    <script src="@Links_PickWaves.Areas.PickWaves.SharedViews.BucketModel_js"></script>
}




