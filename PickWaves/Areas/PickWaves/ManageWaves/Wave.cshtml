@model DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel
@{
    ViewBag.Title = "Pick Wave # " + Model.Bucket.BucketId + " : " + Model.Bucket.MaxCustomerName;
    Layout = MVC_PickWaves.PickWaves.SharedViews.Views._layoutPickWaves2;
}



@*@section sidebar {
        @if (Model.UserIsManager)
        {
            <h3>Quick menu</h3>
            <div class="boxContent">

                <ul id="actionMenu">
                    <li class="freeze-action @Html.Raw(Model.Bucket.BucketState != DcmsMobile.PickWaves.Helpers.ProgressStage.Completed ? "" : "ui-state-disabled")">
                        <a @Html.Raw(Model.Bucket.IsFrozen ? "" : "style='display:none'")><span class="ui-icon ui-icon-unlocked"></span>Unfreeze</a>
                        <a @Html.Raw(Model.Bucket.IsFrozen ? "style='display:none'" : "")><span class="ui-icon ui-icon-locked"></span>Freeze</a>
                    </li>
                    <li>
                        <a><span class="ui-icon ui-icon-arrowthick-1-n"></span>Increase priority</a>
                    </li>
                    <li>
                        <a><span class="ui-icon ui-icon-arrowthick-1-s"></span>Decrease priority</a>
                    </li>
                    <li @Html.Raw(Model.Bucket.BucketState != DcmsMobile.PickWaves.Helpers.ProgressStage.Completed ? "" : "class='ui-state-disabled' title='Only frozen and not complete waves can be edited'")>

                        @if (Model.Bucket.IsFrozen)
                        {
                            <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.EditableWave(new DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel
                                (Model.Bucket.BucketId, DcmsMobile.PickWaves.ViewModels.ManageWaves.SuggestedNextActionType.CancelEditing)))" style="font-weight:bold">
                                <span class="ui-icon ui-icon-pencil"></span>Edit
                            </a>
                        }
                        else
                        {
                            <a>
                                <span class="ui-icon ui-icon-pencil"></span>Edit
                            </a>
                        }
                    </li>
                    <li>-</li>
                    <li @Html.Raw(Model.Bucket.IsFrozen && Model.Bucket.BucketState != DcmsMobile.PickWaves.Helpers.ProgressStage.Completed ? "" : "class='ui-state-disabled' title='Only frozen and not complete waves can be add pickslip'")>
                        <a href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(new DcmsMobile.PickWaves.ViewModels.CreateWave.IndexViewModel(
                                                                                                             Model.Bucket.MaxCustomerId,Model.Bucket.BucketId)))">Add Pickslips</a>
                    </li>
                    <li>-</li>
                    <li>
                        <a href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(new DcmsMobile.PickWaves.ViewModels.CreateWave.IndexViewModel(Model.Bucket.MaxCustomerId)))">
                            <span class="ui-icon ui-icon-document"></span>Create New Wave
                        </a>
                    </li>
                </ul>
            </div>
        }
        <h3>Reports</h3>
        <div class="boxContent">
            <dl>
                <dt>
                    <a href="@(string.Format("{0}?bucket_id={1}", DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel.BucketSummaryReportUrl, Model.Bucket.BucketId))" target="report">
                        <em>140.02</em>. Pick Wave Summary report.
                    </a>
                </dt>
                <dd>
                    This report display details of pick wave.
                </dd>
            </dl>
        </div>
        <div class="boxContent">
            <fieldset style="padding: 1em 3em 1em 1em;">
                <legend>Legend</legend>
                <div style="width: 9em; background-color: antiquewhite; text-align: center">
                    Pulling Boxes
                </div>
                <div style="width: 9em; background-color: paleturquoise; text-align: center">
                    Pitching Boxes
                </div>
            </fieldset>
        </div>
    }*@



@section areatitle{
    <li title="This report display details of pick wave.">
        <a href="@(string.Format("{0}?bucket_id={1}", DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel.BucketSummaryReportUrl, Model.Bucket.BucketId))" target="report">
            Report 140.02: Pick Wave Summary
        </a>
    </li>
    <li><a href="@Url.Action(MVC_PickWaves.PickWaves.Home.Index())"> Pick Wave Home</a></li>
}
<div class="container">
    <div class="page-header">
        <h3>
            @ViewBag.Title           
        </h3>
        @if (Model.HighlightedActions != DcmsMobile.PickWaves.ViewModels.ManageWaves.SuggestedNextActionType.NotSet)
        {

            <small>
              
                <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(new DcmsMobile.PickWaves.ViewModels.ManageWaves.IndexViewModel
                                         (Model.Bucket.MaxCustomerId, Model.Bucket.BucketState, null)))">
                    See: Other @Model.Bucket.StateDisplayName Waves of same customer: @Model.Bucket.MaxCustomerName
                </a>
            </small>

        }
    </div>
   
    <div>
        @if (Model.DisplayEditableWave && Model.UserIsManager)
        {
            <!--Edit the pickwave partial-->
            @Html.Partial(MVC_PickWaves.PickWaves.ManageWaves.Views._bucketEditorPartial, Model)


        }
        else
        {
            <!--Pickwave detail partial-->
            @Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelPartial, Model.Bucket, new ViewDataDictionary
                               {
                                   {"IsAuthorized", Model.UserIsManager}
                               })

        }

        <div id="filterStatus" style="display: inline">
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pitching" data-boxstate="@((int)DcmsMobile.PickWaves.Helpers.BoxState.InProgress)"
                 style="background-color: paleturquoise;display:none">
                Filter: Inprogress Pitching
            </div>
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pitching" data-boxstate="@((int)DcmsMobile.PickWaves.Helpers.BoxState.Completed)"
                 style="background-color: paleturquoise;display:none">
                Filter: Completed Pitching
            </div>
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pitching" data-boxstate="@((int)DcmsMobile.PickWaves.Helpers.BoxState.Cancelled)"
                 style="background-color: paleturquoise;display:none">
                Filter: Cancelled Pitching
            </div>
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pulling" data-boxstate="@((int)@DcmsMobile.PickWaves.Helpers.BoxState.InProgress)"
                 style="background-color: antiquewhite;display:none">
                Filter: Inprogress Pulling
            </div>
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pulling" data-boxstate="@((int)DcmsMobile.PickWaves.Helpers.BoxState.Completed)"
                 style="background-color: antiquewhite;display:none">
                Filter: Completed Pulling
            </div>
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pulling" data-boxstate="@((int)DcmsMobile.PickWaves.Helpers.BoxState.Cancelled)"
                 style="background-color: antiquewhite;display:none">
                Filter: Cancelled Pulling
            </div>
        </div>
        <div id="clearFilter" style="display: none">
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.NotSet">
                <span style="text-decoration: underline; cursor: pointer" class="ui-progressbar-value" data-boxstate="@DcmsMobile.PickWaves.Helpers.BoxState.NotSet">Clear filter</span>
            </div>
        </div>
        <div id="divTabs" data-load-image-url="@Url.Content(Links_PickWaves.Areas.PickWaves.SharedViews.ajax_loader_gif)" data-active-tab="@Model.ActiveTab">
            <ul>
                <li>
                    <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WavePickslips(Model.Bucket.BucketId).AddRouteValue("_", 0))">Pickslips</a>
                </li>
                <li>
                    <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WaveBoxes(Model.Bucket.BucketId, DcmsMobile.PickWaves.Helpers.BoxState.NotSet,
                            DcmsMobile.PickWaves.Helpers.BucketActivityType.NotSet).AddRouteValue("_", 0))"
                       data-state-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveBoxesParams.stateFilter"
                       data-activity-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveBoxesParams.activityFilter">Boxes</a>
                </li>
                <li>
                    <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WaveSkus(Model.Bucket.BucketId, DcmsMobile.PickWaves.Helpers.BoxState.NotSet,
                            DcmsMobile.PickWaves.Helpers.BucketActivityType.NotSet).AddRouteValue("_", 0))"
                       data-state-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveSkusParams.stateFilter"
                       data-activity-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveSkusParams.activityFilter">SKUs</a>
                </li>
            </ul>
        </div>

    </div>

 

</div>
@Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelModalPartial)



@section script {
    <script src="@Links_PickWaves.Areas.PickWaves.ManageWaves.Index_js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.bootstrap.js"></script>


    @*<link type="text/css" href="@Links_PickWaves.Areas.PickWaves.ManageWaves.ManageWave_Wave_css" rel="stylesheet" />
        <script src="@Links_PickWaves.Areas.PickWaves.ManageWaves.ManageWave_Wave_js"></script>*@
}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    @*@if (Model.UserIsManager)
    {

        <div id="dlgFreeze" title="@Html.Raw(Model.Bucket.IsFrozen ? "Unfreeze Pick Wave" : "Freeze Pick Wave")">
            @using (Html.BeginForm(MVC_PickWaves.PickWaves.ManageWaves.FreezeBucket(), FormMethod.Post))
            {
                <input type="hidden" name="@MVC_PickWaves.PickWaves.ManageWaves.FreezeBucketParams.bucketId" value="@Model.Bucket.BucketId" />
                <input type="hidden" name="@MVC_PickWaves.PickWaves.ManageWaves.FreezeBucketParams.freeze" value="@((!Model.Bucket.IsFrozen).ToString())" />
                <input id="hfDisplayEditable" type="hidden" name="@MVC_PickWaves.PickWaves.ManageWaves.FreezeBucketParams.displayEditable" />
            }
            @if (Model.Bucket.BucketState == DcmsMobile.PickWaves.Helpers.ProgressStage.Frozen)
            {
                <div>
                    Boxes will be created for this pick wave and it will become available for processing.
                    <br />
                    <p style="font-style: italic">
                        We will try to pull as many cartons as possible for <strong>@Model.Bucket.PiecesIncomplete</strong>
                        pieces from pull area <strong>@Html.DisplayFor(m => m.Bucket.PullAreaShortName)</strong>. Remaining pieces will be picked from pitch area
                        <strong>@Html.DisplayFor(m => m.Bucket.PitchAreaShortName)</strong>.
                    </p>
                </div>
                <div style="padding-top: 1em">Are you sure want to unfreeze pick wave?</div>
            }
            else
            {
                <div>
                    Pick Wave can not be processed till it is frozen.
                    <br />
                    <p style="font-style: italic">
                        <strong>@Model.Bucket.CountNotStartedBoxes</strong> Boxes assigned to this pick wave, which are not picked will be deleted and will be available for other pick waves.
                    </p>
                </div>
                <div style="padding-top: 1em">Are you sure want to freeze pick wave?</div>
            }
        </div>

    }*@