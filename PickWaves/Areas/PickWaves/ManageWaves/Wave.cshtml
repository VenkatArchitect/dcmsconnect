@model DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.WaveViewModel
@{
    ViewBag.Title = "Pick Wave # " + Model.Bucket.BucketId + " : " + Model.Bucket.MaxCustomerName;
    Layout = MVC_PickWaves.PickWaves.SharedViews.Views._layoutPickWaves2;
}


@section applinks{
    <li title="This report display details of pick wave.">
        <a href="@(string.Format("{0}?bucket_id={1}", DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.WaveViewModel.BucketSummaryReportUrl, Model.Bucket.BucketId))" target="report">
            Report 140.02: Pick Wave Summary
        </a>
    </li>
}
<div class="container">  
        <h2 style="margin-top:0px;">
            @ViewBag.Title
        </h2>
        @if (Model.HighlightedActions != DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.SuggestedNextActionType.NotSet)
        {

            <small>

                <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Index(new DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.IndexViewModel
                                         (Model.Bucket.MaxCustomerId, Model.Bucket.BucketState, null)))">
                    See: Other @Model.Bucket.StateDisplayName Waves of same customer
                </a>
            </small>

        }
 
    <div>
        @if (Model.DisplayEditableWave && Model.UserIsManager)
        {
            <!--Edit the pickwave partial-->
            @Html.Partial(MVC_PickWaves.PickWaves.ManageWaves.Views._bucketEditorPartial, Model)
        }
        else
        {
            <!--Pickwave detail partial-->
            @Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelPartial, Model.Bucket, new ViewDataDictionary
                               {
                                   {"IsAuthorized", Model.UserIsManager}
                               })
        }
    </div>

    <div>
        <div id="filterStatus" style="display: inline">
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pitching" data-boxstate="@((int)DcmsMobile.PickWaves.Helpers.BoxState.InProgress)"
                 style="background-color: paleturquoise;display:none">
                Filter: Inprogress Pitching
            </div>
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pitching" data-boxstate="@((int)DcmsMobile.PickWaves.Helpers.BoxState.Completed)"
                 style="background-color: paleturquoise;display:none">
                Filter: Completed Pitching
            </div>
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pitching" data-boxstate="@((int)DcmsMobile.PickWaves.Helpers.BoxState.Cancelled)"
                 style="background-color: paleturquoise;display:none">
                Filter: Cancelled Pitching
            </div>
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pulling" data-boxstate="@((int)@DcmsMobile.PickWaves.Helpers.BoxState.InProgress)"
                 style="background-color: antiquewhite;display:none">
                Filter: Inprogress Pulling
            </div>
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pulling" data-boxstate="@((int)DcmsMobile.PickWaves.Helpers.BoxState.Completed)"
                 style="background-color: antiquewhite;display:none">
                Filter: Completed Pulling
            </div>
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.Pulling" data-boxstate="@((int)DcmsMobile.PickWaves.Helpers.BoxState.Cancelled)"
                 style="background-color: antiquewhite;display:none">
                Filter: Cancelled Pulling
            </div>
        </div>
        <div id="clearFilter" style="display: none">
            <div data-activity="@DcmsMobile.PickWaves.Helpers.BucketActivityType.NotSet">
                <span style="text-decoration: underline; cursor: pointer" class="ui-progressbar-value" data-boxstate="@DcmsMobile.PickWaves.Helpers.BoxState.NotSet">Clear filter</span>
            </div>
        </div>

        <div role="tabpanel" id="tabs">
            <!-- Nav tabs -->
            <ul class="nav nav-tabs bg-info" role="tablist">
                <li>
                    <a href="#pickslips" data-href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WavePickslips(Model.Bucket.BucketId).AddRouteValue("_", 0))"
                       role="tab" data-toggle="tab">
                        Pickslips
                        <img class="hidden" src="@Links_PickWaves.Areas.PickWaves.SharedViews.ajax_loader_gif " alt=" loading.." />
                    </a>

                </li>
                <li>
                    <a href="#boxes" data-href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WaveBoxes(Model.Bucket.BucketId, DcmsMobile.PickWaves.Helpers.BoxState.NotSet,
                            DcmsMobile.PickWaves.Helpers.BucketActivityType.NotSet).AddRouteValue("_", 0))"
                       data-state-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveBoxesParams.stateFilter"
                       data-activity-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveBoxesParams.activityFilter" role="tab" data-toggle="tab">
                        Boxes
                        <img class="hidden" src="@Links_PickWaves.Areas.PickWaves.SharedViews.ajax_loader_gif " alt=" loading.." />
                    </a>
                </li>
                <li>
                    <a href="#skus" data-href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WaveSkus(Model.Bucket.BucketId, DcmsMobile.PickWaves.Helpers.BoxState.NotSet,
                            DcmsMobile.PickWaves.Helpers.BucketActivityType.NotSet).AddRouteValue("_", 0))"
                       data-state-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveSkusParams.stateFilter"
                       data-activity-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveSkusParams.activityFilter" role="tab" data-toggle="tab">
                        SKUs
                        <img class="hidden" src="@Links_PickWaves.Areas.PickWaves.SharedViews.ajax_loader_gif " alt=" loading.." />
                    </a>
                </li>
            </ul>
            <!-- Tab panes -->
            <div class="tab-content">              
                <div role="tabpanel" class="tab-pane" id="pickslips"></div>
                <div role="tabpanel" class="tab-pane" id="boxes"></div>
                <div role="tabpanel" class="tab-pane" id="skus"></div>
            </div>
        </div>






    </div>



</div>
@Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelModalPartial)



@section script {
    <script src="@Links_PickWaves.Areas.PickWaves.ManageWaves.Wave_js"></script>

    <script type="text/javascript">
        $(document).ready(function (e) {
            // Make the first tab active
            $('#tabs').on('show.bs.tab', function (e) {
                // Load AJAX content when the tab is shown
                $('img', e.target).removeClass('hidden');
                //alert(x.length);
                $.get($(e.target).data('href')).done(function (data, textStatus, jqXHR) {
                    //success
                    $($(e.target).attr('href')).html(data);
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    //error
                    alert(jqXHR.responseText);
                }).always(function () {
                    $('img', e.target).addClass('hidden');
                });
            }).on('click', 'button[data-pickslip-remove-url]', function (e) {
                // Remove Pickslip
                alert($(e.target).data('pickslip-remove-url'));

                $.post($(e.target).data('pickslip-remove-url')).done(function (data, textStatus, jqXHR) {
                    //success
                    $(e.target).closest('li.list-group-item').addClass('list-group-item-warning')
                      .find('a.pickslip').css('text-decoration', 'line-through');
                }).error(function (jqXHR, textStatus, errorThrown) {
                    //error
                   alert.html(jqXHR.responseText);
                });
            }).find('> ul a:first').tab('show');

            
            //$('div.tab-content').on('click', '#pickslips button[data-pickslip-remove-url]', function (e) {
            //    $.post($(e.target).data('pickslip-remove-url')).done(function (data, textStatus, jqXHR) {
            //        //success
            //        $('.alert', e.delegateTarget).removeClass('hidden').addClass('alert-info').html(jqXHR.responseText);
            //        location.reload(true);
            //        return;
            //    }).error(function (jqXHR, textStatus, errorThrown) {
            //        //error
            //        $('.alert', e.delegateTarget).removeClass('hidden').addClass('alert-danger').html(jqXHR.responseText);
            //    });

            //});


        });
    </script>

    @*<link type="text/css" href="@Links_PickWaves.Areas.PickWaves.ManageWaves.ManageWave_Wave_css" rel="stylesheet" />
        <script src="@Links_PickWaves.Areas.PickWaves.ManageWaves.ManageWave_Wave_js"></script>*@
}
































@*@if (Model.UserIsManager)
    {

        <div id="dlgFreeze" title="@Html.Raw(Model.Bucket.IsFrozen ? "Unfreeze Pick Wave" : "Freeze Pick Wave")">
            @using (Html.BeginForm(MVC_PickWaves.PickWaves.ManageWaves.FreezeBucket(), FormMethod.Post))
            {
                <input type="hidden" name="@MVC_PickWaves.PickWaves.ManageWaves.FreezeBucketParams.bucketId" value="@Model.Bucket.BucketId" />
                <input type="hidden" name="@MVC_PickWaves.PickWaves.ManageWaves.FreezeBucketParams.freeze" value="@((!Model.Bucket.IsFrozen).ToString())" />
                <input id="hfDisplayEditable" type="hidden" name="@MVC_PickWaves.PickWaves.ManageWaves.FreezeBucketParams.displayEditable" />
            }
            @if (Model.Bucket.BucketState == DcmsMobile.PickWaves.Helpers.ProgressStage.Frozen)
            {
                <div>
                    Boxes will be created for this pick wave and it will become available for processing.
                    <br />
                    <p style="font-style: italic">
                        We will try to pull as many cartons as possible for <strong>@Model.Bucket.PiecesIncomplete</strong>
                        pieces from pull area <strong>@Html.DisplayFor(m => m.Bucket.PullAreaShortName)</strong>. Remaining pieces will be picked from pitch area
                        <strong>@Html.DisplayFor(m => m.Bucket.PitchAreaShortName)</strong>.
                    </p>
                </div>
                <div style="padding-top: 1em">Are you sure want to unfreeze pick wave?</div>
            }
            else
            {
                <div>
                    Pick Wave can not be processed till it is frozen.
                    <br />
                    <p style="font-style: italic">
                        <strong>@Model.Bucket.CountNotStartedBoxes</strong> Boxes assigned to this pick wave, which are not picked will be deleted and will be available for other pick waves.
                    </p>
                </div>
                <div style="padding-top: 1em">Are you sure want to freeze pick wave?</div>
            }
        </div>

    }*@


@*<div id="divTabs" data-load-image-url="@Url.Content(Links_PickWaves.Areas.PickWaves.SharedViews.ajax_loader_gif)" data-active-tab="@Model.ActiveTab">
        <ul>
            <li>
                <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WavePickslips(Model.Bucket.BucketId).AddRouteValue("_", 0))">Pickslips</a>
            </li>
            <li>
                <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WaveBoxes(Model.Bucket.BucketId, DcmsMobile.PickWaves.Helpers.BoxState.NotSet,
                        DcmsMobile.PickWaves.Helpers.BucketActivityType.NotSet).AddRouteValue("_", 0))"
                   data-state-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveBoxesParams.stateFilter"
                   data-activity-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveBoxesParams.activityFilter">Boxes</a>
            </li>
            <li>
                <a href="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.WaveSkus(Model.Bucket.BucketId, DcmsMobile.PickWaves.Helpers.BoxState.NotSet,
                        DcmsMobile.PickWaves.Helpers.BucketActivityType.NotSet).AddRouteValue("_", 0))"
                   data-state-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveSkusParams.stateFilter"
                   data-activity-param="@MVC_PickWaves.PickWaves.ManageWaves.WaveSkusParams.activityFilter">SKUs</a>
            </li>
        </ul>
    </div>*@