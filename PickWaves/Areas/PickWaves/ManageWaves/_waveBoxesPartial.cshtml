@using DcmsMobile.PickWaves.Helpers
@model DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.WaveBoxListModel
@* Design only for use by Wave.cshtml*@


@helper DisplayBoxPieces(DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.BoxModel box)
{
    if (box.CurrentPieces == box.ExpectedPieces)
    {
        @box.CurrentPieces
    }
    else if ((box.CurrentPieces ?? 0) == 0 || box.State == BoxState.Cancelled)
    {
        @box.ExpectedPieces
    }
    else
    {
        @(box.CurrentPieces ?? 0) @:of @box.ExpectedPieces
    }
}
@helper ShowBoxPiecesStatus(BoxState filter)
{

    if (filter == BoxState.NotSet || filter == BoxState.Completed || filter == BoxState.InProgress)
    {
        <span>@Html.DisplayFor(m => m.TotalPiecesInBox) of @Html.DisplayFor(m => m.TotalOrderedPieces) Pieces Picked</span>
    }
    else if (filter == BoxState.Cancelled)
    {
        <span>@string.Format("{0:N0} Pcs cancelled in {1:N0} boxes", Model.BoxesList.Sum(p => p.ExpectedPieces), Model.BoxesList.Count)</span>
    }
}

@helper ShowListTitle()
{
    var stateText = string.Empty;
    if (Model.StateFilter == BoxState.NotSet)
    {
        stateText = "All Boxes";
    }
    else if (Model.StateFilter == BoxState.InProgress)
    {
        stateText = "Inprogress Boxes";
    }
    else if (Model.StateFilter == BoxState.Completed)
    {
        stateText = "Boxes which have pieces";
    }
    else if (Model.StateFilter == BoxState.Cancelled)
    {
        stateText = "Cancelled Boxes";
    }
    <span>@string.Format("{0} of wave {1}", stateText, Model.BucketId)</span>
}




<blockquote>
    @ShowListTitle()
    <small> @ShowBoxPiecesStatus(Model.StateFilter)</small>
</blockquote>



<ul class="list-group">
    <li class="list-group-item active">
        <div class="row">
            <div class="col-md-4">
                <h4 class="list-group-item-heading">
                    Box
                    <small>
                        &bull; PickSlip
                    </small>
                </h4>
            </div>
            <div class="col-md-1">
                <h4 class="list-group-item-heading">
                    VWH
                </h4>
            </div>
            <div class="col-md-3" title="If this box will be pulled, the carton id is displayed. Otherwise this box will be pitched.">
                <abbr title="If this box will be pulled, the carton id is displayed. Otherwise this box will be pitched.">
                    Pull Carton ?
                </abbr>
                <span class="badge">
                    Pieces
                </span>
            </div>
            <div class="col-md-1">
                <span class="label label-default">Status</span>
            </div>
            <div class="col-md-3" style="text-align:right">
                <span class="badge">Date Created</span>
                <small style="text-align:right">by</small>
            </div>
        </div>
    </li>

    @for (var i = 0; i < Model.BoxesList.Count; i++)
    {
        <li class="list-group-item list-group-item-@(string.IsNullOrWhiteSpace(Model.BoxesList[i].CartonId) ? "info" :"success" )">
            <div class="row">
                <div class="col-md-4">
                    <h4 class="list-group-item-heading">
                        <small>@(i + 1)</small>
                        <a href="@Model.BoxesList[i].UrlInquiryBox" target="_inquiry">@Html.DisplayFor(m => m.BoxesList[i].Ucc128Id)</a>
                        <small>
                            &bull; @Html.DisplayFor(m => m.BoxesList[i].PickslipId)
                        </small>
                    </h4>
                </div>
                <div class="col-md-1">
                    <h4 class="list-group-item-heading">
                        @Html.DisplayFor(m => m.BoxesList[i].VWhId)
                    </h4>

                </div>
                <div class="col-md-3" title="If this box will be pulled, the carton id is displayed. Otherwise this box will be pitched.">
                    @Html.DisplayFor(m => m.BoxesList[i].CartonId)
                    <span class="badge"> @DisplayBoxPieces(Model.BoxesList[i])</span>
                </div>
                <div class="col-md-1">
                    <span class="label @Html.DisplayFor(m => m.BoxesList[i].DisplayStateStyle)">
                        @Html.DisplayFor(m => m.BoxesList[i].DisplayStateText)
                    </span>
                </div>
                <div class="col-md-3" style="text-align:right">
                    <span class="badge">@Html.DisplayFor(m => m.BoxesList[i].CreatedDate)</span>
                    <small style="text-align:right">@Html.DisplayFor(m => m.BoxesList[i].CreatedBy)</small>
                </div>
            </div>
        </li>
    }
</ul>


