<!--This document is HTML5 Validated by "W3C Markup Validation Service" at http://validator.w3.org/ on 15 Dec 2014 by apanwar-->
@using DcmsMobile.PickWaves.Helpers
@model DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.WaveBoxListModel
@* Design only for use by Wave.cshtml*@


@helper DisplayBoxPieces(DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.BoxModel box)
{
    if (box.CurrentPieces == box.ExpectedPieces)
    {
        @box.CurrentPieces
    }
    else if ((box.CurrentPieces ?? 0) == 0 || box.State == BoxState.Cancelled)
    {
        @box.ExpectedPieces
    }
    else
    {
        @(box.CurrentPieces ?? 0) @:of @box.ExpectedPieces
    }
}

@helper DisplayBoxStatus(DcmsMobile.PickWaves.Areas.PickWaves.ManageWaves.BoxModel box)
{
    string lblClass;
    string stateText;
    DateTimeOffset? date;
    switch (box.State)
    {
        case BoxState.Cancelled:
            lblClass = "label-danger";
            stateText = "Cancelled";
            date = box.CancelDate;
            break;

        case BoxState.Completed:
            lblClass = "label-success";
            stateText = "Completed";
            date = box.VerifyDate;
            break;

        case BoxState.InProgress:
            lblClass = "label-info";

            if (box.MaxPitchingEndDate.HasValue)
            {
                stateText = "Pitched";
                date = box.MaxPitchingEndDate;
            }
            else
            {
                stateText = "Created";
                date = box.CreatedDate;
            }
            break;

        case BoxState.NotStarted:
            lblClass = "label-default";
            stateText = "Not Started";
            date = null;
            break;

        default:
            lblClass = "label-default";
            stateText = "??";
            date = null;
            break;

    }

    <span class="label @lblClass">
        @stateText @string.Format("{0:g}", date)
    </span>
}

<blockquote>
    Boxes of Pick Wave @Html.DisplayFor(m => m.BucketId)
</blockquote>


<form action="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.CancelBoxes())" method="post">
    <ul class="list-group">
        <li class="list-group-item active">
            <div class="row">
                <div class="col-md-6">
                    @if (Model.BoxesList.Count > 0)
                    {
                        <button class="pull-left btn btn-default btn-xs" type="submit" 
                                @(Model.UserIsManager ? "" : "disabled=disabled")
                                name="@MVC_PickWaves.PickWaves.ManageWaves.CancelBoxesParams.bucketId"
                                value="@Model.BucketId">
                            Cancel Selected
                        </button>
                    }
                    <h4 class="list-group-item-heading">
                        &nbsp;
                        Box
                        <small>
                            &bull; Pickslip
                        </small>
                        <span class="label label-default">
                            <abbr title="Virtual Wearhouse">VWH</abbr>
                        </span>
                    </h4>
                </div>
                <div class="col-md-3">
                    <abbr title="If this box will be pulled, the carton id is displayed. Otherwise this box will be pitched.">
                        Pull Carton ?
                    </abbr>
                    <span class="badge">
                        Pieces
                    </span>
                </div>
                <div class="col-md-3" style="text-align:right">
                    <span class="label label-default">Status</span>
                </div>
            </div>
        </li>

        @for (var i = 0; i < Model.BoxesList.Count; i++)
        {
            <li class="list-group-item list-group-item-@(string.IsNullOrWhiteSpace(Model.BoxesList[i].CartonId) ? "info" :"success" )">
                <div class="row">
                    <div class="col-md-6">
                        <h4 class="list-group-item-heading">
                            <small>@(i + 1)</small>
                            @if (Model.UserIsManager)
                            {
                                <input type="checkbox" name="@MVC_PickWaves.PickWaves.ManageWaves.CancelBoxesParams.boxes"
                                       value="@Model.BoxesList[i].Ucc128Id" />

                            }
                            <a href="@Model.BoxesList[i].UrlInquiryBox" target="_inquiry">@Html.DisplayFor(m => m.BoxesList[i].Ucc128Id)</a>
                            <small>
                                &bull;
                                <a href="@Model.BoxesList[i].UrlInquiryPickslip" target="_inquiry">@Html.DisplayFor(m => m.BoxesList[i].PickslipId)</a>
                            </small>
                            <span class="label label-default">
                                @Html.DisplayFor(m => m.BoxesList[i].VWhId)
                            </span>
                        </h4>
                    </div>
                    <div class="col-md-3" title="If this box will be pulled, the carton id is displayed. Otherwise this box will be pitched.">
                        <a href="@Model.BoxesList[i].UrlInquiryCarton" target="_inquiry">
                            @Html.DisplayFor(m => m.BoxesList[i].CartonId)
                        </a>
                        <span class="badge">@DisplayBoxPieces(Model.BoxesList[i])</span>
                    </div>
                    <div class="col-md-3" style="text-align:right">
                        @DisplayBoxStatus(Model.BoxesList[i])
                    </div>
                </div>
            </li>
        }
    </ul>
</form>
