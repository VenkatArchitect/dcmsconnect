@* To use this partial, make sure you include _bucketEditorPartial.partial.js *@

@model DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    var dict = new Dictionary<DcmsMobile.PickWaves.Helpers.BucketActivityType, string>
    {
        {DcmsMobile.PickWaves.Helpers.BucketActivityType.Pitching, "(Undecided)"},
        {DcmsMobile.PickWaves.Helpers.BucketActivityType.Pulling, "(No Pulling)"}
    };
}
<div class="bucketmodel-editor">
    @Html.HiddenFor(m => m.Bucket.BucketId)
    <div>
        @Html.LabelFor(m => m.Bucket.BucketName)
        @Html.TextBoxFor(m => m.Bucket.BucketName, new
   {
       size = 50,
       maxlength = 50
   })<sup>*</sup>
        @Html.ValidationMessageFor(m => m.Bucket.BucketName)
    </div>
    <div>
        @Html.LabelFor(m => m.Bucket.PriorityId)
        @Html.TextBoxFor(m => m.Bucket.PriorityId, new
   {
       size = 2,
       maxlength = 2,
       id = "tbPriority"
   })
        @Html.ValidationMessageFor(m => m.Bucket.PriorityId)
        <em>(Pick Waves with higher priority will show first(Max: 99))</em>
    </div>
    @for (var i = 0; i < Model.Bucket.Activities.Count; ++i)
    {
        @Html.HiddenFor(m => m.Bucket.Activities[i].ActivityType)
        <div>
            @if (Model.BucketAreaLists[Model.Bucket.Activities[i].ActivityType].Count > 0)
            {
                <span style="display: inline-block; width: 12em">@Html.DisplayFor(m => m.Bucket.Activities[i].DisplayName)</span>
                @Html.DropDownListFor(m => m.Bucket.Activities[i].AreaId, Model.BucketAreaLists[Model.Bucket.Activities[i].ActivityType], dict[Model.Bucket.Activities[i].ActivityType])
                if (Model.Bucket.Activities[i].ActivityType == DcmsMobile.PickWaves.Helpers.BucketActivityType.Pulling)
                {
                    @Html.CheckBoxFor(m => m.Bucket.PrePrintingPallets) <span>Pre-create pallets to pull</span>
                }
                else
                {
                    @Html.CheckBoxFor(m => m.Bucket.QuickPitch)  <span>Quick Pitch</span> <em style="font-size: 0.9em">(To create an ADR exclusive pick wave, set this to Undecided.)</em>
                    <div>
                        <span style="width: 12em; display: inline-block; margin-top: 0.25em; ">
                            @Html.LabelFor(m => m.Bucket.PitchLimit)
                        </span>
                        @Html.TextBoxFor(m => m.Bucket.PitchLimit, new
                                                         {
                                                             size = 5,
                                                             maxlength = 5
                                                         })
                    </div>
                }
            }
        </div>
    }
    <div>
        @Html.LabelFor(m => m.Bucket.BucketComment)
        @Html.TextAreaFor(m => m.Bucket.BucketComment, new
            {
                maxlength = 128
            })<sub style="color: blue; font-size: 1.1em">Max 128 characters</sub>
        <br />
        <label></label>
        <em>(Remark will be shown in Wave Summery UI)</em>
    </div>

    @Html.CheckBoxFor(m => m.UnfreezeWaveAfterSave)
    @Html.LabelFor(m => m.UnfreezeWaveAfterSave)

    @Html.HiddenFor(m => m.BucketNameOriginal)
    @Html.HiddenFor(m => m.PriorityIdOriginal)
    @Html.HiddenFor(m => m.PullAreaOriginal)
    @Html.HiddenFor(m => m.PitchAreaOriginal)
    @Html.HiddenFor(m => m.BucketCommentOriginal)
    @Html.HiddenFor(m => m.PrePrintingPalletsOriginal)
    @Html.HiddenFor(m => m.QuickPitchOriginal)
    @Html.HiddenFor(m => m.PitchLimitOriginal)
</div>
