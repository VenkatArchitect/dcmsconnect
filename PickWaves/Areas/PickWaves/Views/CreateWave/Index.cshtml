@model DcmsMobile.PickWaves.ViewModels.CreateWave.IndexViewModel
@{
    ViewBag.Title = string.Format("Create Pick Waves for {0}", Model.CustomerName);
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();   
}
@section sidebar {
    <div class="boxContent">
        You can see @Html.ActionLink("Existing Waves", MVC_PickWaves.PickWaves.Home.Customer(Model.CustomerId)) of customer <em>@Html.DisplayFor(m => m.CustomerId) : @Html.DisplayFor(m => m.CustomerName)</em>
    </div>
}
@if (Model.LastBucketId.HasValue)
{
    <div class="ui-state-highlight">
        Pick wave <a style="font-weight:bold; font-size : 1.2em;" href ="@Url.Action(MVC_PickWaves.PickWaves.ManageWaves.Wave(
            new DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel
                (Model.LastBucketId.Value, DcmsMobile.PickWaves.ViewModels.ManageWaves.SuggestedNextActionType.UnfreezeMe)))">
            @Model.LastBucketId</a> has been created. 
        @Html.ActionLink("Edit", MVC_PickWaves.PickWaves.ManageWaves.EditableWave(new DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel
                (Model.LastBucketId.Value, DcmsMobile.PickWaves.ViewModels.ManageWaves.SuggestedNextActionType.CancelEditing))) | 
        @Html.ActionLink("Add pickslips", MVC_PickWaves.PickWaves.CreateWave.PickslipListSelector
                (new DcmsMobile.PickWaves.ViewModels.CreateWave.PickslipListSelectorViewModel(Model.CustomerId, Model.LastBucketId.Value)))

    </div>
}
<div class="boxContent">
    @using (Html.BeginForm(MVC_PickWaves.PickWaves.CreateWave.CreatePickWave(), FormMethod.Post, new
        {
            id = "frmMain"
        }))
    {       
        <blockquote>
            To create a Pick Wave, select a pitch and/or pull area. Then choose one of the pickslip counts in the table below.
        </blockquote>        
        <div id="areaDropDowns">
            <div style="margin-top: 0.25em; background-color: antiquewhite" id="divPullArea">
                <fieldset style="padding: 1em">
                    <legend style="margin-left: 1em">
                        @Html.CheckBoxFor(m => m.AllowPulling, new { id = "cbAllowPulling" })
                        Pull as many cartons as possible from Area</legend>
                    <ul style="list-style-type: none">
                        @for (var i = 0; i < Model.PullAreaList.Count; ++i)
                        {
                            <li class="pull-area @Html.Raw(i < Model.CountVisiblePullAreas && Model.PullAreaList[i].AreaId == Model.PullAreaId ? "" : "ui-helper-hidden")
                                @Html.Raw(Model.PullAreaList[i].AreaId == Model.PullAreaId ? "ui-state-active" : "")
                                " style="padding: 4px 4px 4px 4px" >
                                @Html.RadioButtonFor(m => m.PullAreaId, Model.PullAreaList[i].AreaId, new
                           {
                               style = "display:inline-block;vertical-align:middle",
                               id = string.Format("pull_area_{0}", i)
                           })
                                <label style="display: inline-block; width: 24em; overflow-x: hidden; white-space: nowrap; padding-right: 2em" for="@string.Format("pull_area_{0}", i)">
                                    @Model.PullAreaList[i].DisplayName.</label>
                                @Model.PullAreaList[i].PercentSkusInArea % SKUs available.
                            </li>
                        }
                        @if (Model.CountVisiblePullAreas < Model.PullAreaList.Count)
                        {
                            <li>
                                <a href="#" id="seeAllPullAreas">See More Pull Areas</a>
                            </li>
                        }
                        <li style="padding: 4px 4px 4px 4px">
                            @Html.CheckBoxFor(m => m.RequireBoxExpediting)

                            @Html.LabelFor(m => m.RequireBoxExpediting)
                        </li>
                    </ul>

                </fieldset>
            </div>
            <div style="margin-top: 0.25em; background-color: paleturquoise;" id="divPitchArea">
                <fieldset style="padding: 1em">
                    <legend style="margin-left: 1em">
                        @Html.CheckBoxFor(m => m.AllowPitching, new { id = "cbAllowPitching" })
                        Allow Pitching from Area</legend>
                    <ul style="list-style-type: none">
                        @for (var i = 0; i < Model.PitchAreaList.Count; ++i)
                        {
                            <li class="pitch-area @Html.Raw(i < Model.CountVisiblePitchAreas && Model.PitchAreaList[i].AreaId == Model.PitchAreaId ? "" : "ui-helper-hidden")
                                @Html.Raw(Model.PitchAreaList[i].AreaId == Model.PitchAreaId ? "ui-state-active" : "")
                                " 
                                style="padding: 4px 4px 4px 4px">
                                @Html.RadioButtonFor(m => m.PitchAreaId, Model.PitchAreaList[i].AreaId, new
                           {
                               style = "display:inline-block;vertical-align:middle",
                               id = string.Format("pitch_area_{0}", i)
                           })
                                <label style="display: inline-block; width: 24em; overflow-x: hidden; white-space: nowrap; padding-right: 2em" for="@string.Format("pitch_area_{0}", i)">
                                    @Model.PitchAreaList[i].DisplayName.</label>
                                @Model.PitchAreaList[i].PercentSkusInArea % SKUs available.
                            </li>
                        }
                        @if (Model.CountVisiblePitchAreas < Model.PitchAreaList.Count)
                        {
                            <li>
                                <a href="#" id="seeAllPitchAreas">See More Pitch Areas</a>
                            </li>
                        }
                    </ul>
                </fieldset>
            </div>


        </div>
        <button type="submit" id="btnCreateWave" style="display: none">Create Wave</button>
                        if (Model.CustomerOrders.Count > 0)
                        {
        <div id="matrixPartial" data-name-selected-dc="@Model.NameFor(m => m.ColDimVal)" data-name-selected-dim="@Model.NameFor(m => m.RowDimVal)">
            @Html.Partial(MVC_PickWaves.PickWaves.CreateWave.Views._pickslipMatrixPartial, Model)
        </div>
                        }
                        else
                        {
        <span class="ui-state-highlight" style="margin-top: 2em; display: inline-block">No imported orders found for Customer @Model.CustomerId
        </span>
                        }
    }
</div>

<div id="divDlg" title="Create Pick Wave">
    <em id="dlgColDimSpan" style="display: inline-block; width: 8em"></em><span id="dlgColDimSpanVal"></span>
    <br />
    <em id="dlgRowDimSpan" style="display: inline-block; width: 8em">Customer DC</em> <span id="dlgRowDimSpanVal"></span>
    <hr />
    Create a pick wave containing <span id="dlgSpanPsCount"></span>pickslips ?
    <div id="dlgMessage" class="validation-summary-errors"></div>
</div>

@section Scripts{
    <link type="text/css" href="@Links_PickWaves.Areas.PickWaves.Content.CreateWave_Index_min_css" rel="stylesheet" />
    <script src="@Links_PickWaves.Areas.PickWaves.Scripts.CreateWave_Index_js" type="text/javascript"></script>
}

