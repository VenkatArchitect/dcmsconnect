<!--This document is HTML5 Validated by "W3C Markup Validation Service" at http://validator.w3.org/ on 15 Dec 2014 by apanwar-->
@model DcmsMobile.PickWaves.Areas.PickWaves.CreateWave.PickslipListViewModel
@{
    ViewBag.Title = "Add Pickslips";
    Layout = @MVC_PickWaves.PickWaves.SharedViews.Views._layoutPickWaves;
}
@*@section sidebar {
        <div class="boxContent">
            If you want to create new wave for customer <em>@Model.CustomerId</em>
            @Html.ActionLink("Back to list", MVC_PickWaves.PickWaves.CreateWave.Index(new DcmsMobile.PickWaves.ViewModels.CreateWave.IndexViewModel(Model.CustomerId)))
        </div>
        <div class="boxContent">
            <ul>
                <li>
                    If you want to
                    @Html.ActionLink("Add more pickslip", MVC_PickWaves.PickWaves.CreateWave.Index(new DcmsMobile.PickWaves.ViewModels.CreateWave.IndexViewModel(Model.CustomerId,
                   Model.RowDimIndex.Value, Model.ColDimIndex.Value,Model.VwhId, null, null, Model.BucketId))) in @Model.BucketId Pick Wave.
            </li>
            <li>
                To see Pick Wave <a href="@Url.Action(
                    MVC_PickWaves.PickWaves.ManageWaves.Wave(new DcmsMobile.PickWaves.ViewModels.ManageWaves.WaveViewModel(Model.BucketId, DcmsMobile.PickWaves.ViewModels.ManageWaves.SuggestedNextActionType.UnfreezeMe)))">
                    @Model.BucketId
                </a>detail
            </li>
        </ul>
    </div>
    }*@

@section applinks{
    <li>
        <a href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(Model.CustomerId,Model.RowDimIndex.Value, Model.ColDimIndex.Value, Model.VwhId, null, null, Model.BucketId))">
            Add more pickslip
        </a>

    </li>
    <li class="divider">
    </li>
}
<div class="container">
    <h2 style="margin-top:0;">
        Add Pickslips <small>@Html.DisplayFor(m => m.CustomerId) @Html.DisplayFor(m => m.CustomerName)</small>
    </h2>


    @if (Model.Bucket == null)
    {
        <blockquote>
            A new default pick wave will be automatically created for you when you add pickslips. You will be able to update the properties of the pick wave later.
        </blockquote>
    }
    else
    {
        @Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelPartial, Model.Bucket, new ViewDataDictionary
                               {
                                   {"IsAuthorized", Model.UserIsManager}
                               })
    }
    <ul class="list-inline">
        <li>Pickslips of </li>
        <li>@Html.DisplayFor(m => m.ColDimDisplayName) <em> @Html.DisplayFor(m => m.ColDimVal)</em></li>
        <li>@Html.DisplayFor(m => m.RowDimDisplayName) <em>@Html.DisplayFor(m => m.RowDimVal)</em></li>
        <li><abbr title="Virtual Warehouse">VWH</abbr> <em>@Model.VwhId</em></li>
        <li><a href="@Url.Action(MVC_PickWaves.PickWaves.CreateWave.Index(Model.CustomerId, Model.RowDimIndex, Model.ColDimIndex, Model.VwhId, null, null, Model.BucketId))">Change</a></li>
    </ul>
    @using (Html.BeginForm(MVC_PickWaves.PickWaves.CreateWave.AddPickslipsToBucket(), FormMethod.Post))
    {
        <input type="hidden" name="@Model.NameFor(m => m.BucketId)" value="@Model.BucketId" />
        <input type="hidden" name="@Model.NameFor(m => m.CustomerId)" value="@Model.CustomerId" />
        <input type="hidden" name="@Model.NameFor(m => m.RowDimVal)" value="@Model.RowDimVal" />
        <input type="hidden" name="@Model.NameFor(m => m.ColDimVal)" value="@Model.ColDimVal" />
        <input type="hidden" name="@Model.NameFor(m => m.RowDimIndex)" value="@Model.RowDimIndex" />
        <input type="hidden" name="@Model.NameFor(m => m.ColDimIndex)" value="@Model.ColDimIndex" />
        <input type="hidden" name="@Model.NameFor(m => m.VwhId)" value="@Model.VwhId" />
        <ul class="list-group">
            <li class="list-group-item list-group-item-info">
                <div class="row">
                    <div class="col-md-4">
                        <h4 class="list-group-item-heading">
                            Pickslip <button class="btn btn-primary" type="submit" disabled="@Model.UserIsManager">Add Selected</button>
                        </h4>
                    </div>
                    <div class="col-md-4">
                        <abbr title="Purchase Order">PO</abbr>
                        &bull; <abbr title="Distribution Center">DC</abbr> &bull; Store
                    </div>
                    <div class="col-md-4">
                        Imported
                        <span class="badge pull-right">Start - DC Cancel</span>
                    </div>
                </div>
            </li>
            @for (var i = 0; i < Model.PickslipList.Count; ++i)
            {
                <li class="list-group-item">
                    <div class="row">
                        <div class="col-md-4">
                            <h4 class="list-group-item-heading">
                                <input type="checkbox" class="ui-helper-hidden" name='@Model.NameFor(m => m.SelectedPickslip)' value="@Model.PickslipList[i].PickslipId" />
                                <a href='@Model.PickslipList[i].UrlInquiryPickslip' target="_inquiry"
                                   class="pickslip">@Html.DisplayFor(m => m.PickslipList[i].PickslipId)</a>

                                @*<a href='@Url.Content(string.Format("~/Inquiry/Home/InquiryIndex?id={0}", Model.PickslipList[i].PickslipId))' target="PO">@Model.PickslipList[i].PickslipId</a>*@

                            </h4>
                        </div>
                        <div class="col-md-4">
                            <a href='@Model.PickslipList[i].UrlInquiryPurchaseOrder' target="_inquiry"
                               class="Po">@Html.DisplayFor(m => m.PickslipList[i].PurchaseOrder)</a>
                            @*<a href='@Url.Content(string.Format("~/Inquiry/Home/InquiryIndex?id={0}", Model.PickslipList[i].PurchaseOrder))' target="PO">@Model.PickslipList[i].PurchaseOrder</a>*@
                            &bull; @Html.DisplayFor(m => m.PickslipList[i].CustomerDcId) &bull; @Html.DisplayFor(m => m.PickslipList[i].CustomerStoreId)
                        </div>
                        <div class="col-md-4">
                            @Html.DisplayFor(m => m.PickslipList[i].PickslipImportDate)
                            <span class="badge pull-right">@Html.DisplayFor(m => m.PickslipList[i].StartDate) - @Html.DisplayFor(m => m.PickslipList[i].DcCancelDate)</span>
                        </div>
                    </div>
                </li>
            }
        </ul>
    }
</div>
@Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelModalPartial)
@section script {
    <script src="@Links_PickWaves.Areas.PickWaves.CreateWave.PickslipList_js"></script>
}




@*<div class="boxContent">
        @if (Model.Bucket != null)
            {
                @Html.Partial(MVC_PickWaves.PickWaves.SharedViews.Views._bucketModelPartial, Model.Bucket)
            }
        <div>
            @using (Html.BeginForm(MVC_PickWaves.PickWaves.CreateWave.AddPickslipsToBucket(), FormMethod.Post))
            {
                <input type="hidden" name="@Model.NameFor(m => m.BucketId)" value="@Model.BucketId" />
                <input type="hidden" name="@Model.NameFor(m => m.CustomerId)" value="@Model.CustomerId" />
                <input type="hidden" name="@Model.NameFor(m => m.RowDimVal)" value="@Model.RowDimVal" />
                <input type="hidden" name="@Model.NameFor(m => m.ColDimVal)" value="@Model.ColDimVal" />
                <input type="hidden" name="@Model.NameFor(m => m.RowDimIndex)" value="@Model.RowDimIndex" />
                <input type="hidden" name="@Model.NameFor(m => m.ColDimIndex)" value="@Model.ColDimIndex" />
                <input type="hidden" name="@Model.NameFor(m => m.VwhId)" value="@Model.VwhId" />

                if (Model.PickslipList.Count > 0)
                {
                    if (Model.Bucket != null)
                    {
                        <blockquote>
                            Select pickslips first from below list to add in Pick Wave @Model.BucketId.
                            <button type="submit" @Html.Raw(Model.UserIsManager ? "" : "disabled='disabled'")>Add pickslips</button>
                        </blockquote>
                    }
                    <table>
                        <caption>
                            @string.Format("Pickslips of {0}: {1}; {2}: {3}", Model.ColDimDisplayName, Model.ColDimVal, Model.RowDimDisplayName, Model.RowDimVal)
                            <span style="font-size: 0.7em;">(VWh : @Model.VwhId)</span>
                        </caption>
                        <thead>
                            <tr>
                                <th>
                                    <input type="checkbox" id="btnSelectAll" title="Select All/Clear" />
                                    #
                                </th>
                                <th>
                                    Pickslip<span class="ui-icon ui-icon-extlink" style="display: inline-block" title="Inquiry link"></span>
                                </th>
                                <th>
                                    Purchase Order<span class="ui-icon ui-icon-extlink" style="display: inline-block" title="Inquiry link"></span>
                                </th>
                                <th>
                                    Start Date
                                </th>
                                <th>
                                    Imported
                                </th>
                                <th>
                                    Customer DC
                                </th>
                                <th>
                                    Customer Store
                                </th>
                            </tr>
                        </thead>
                        <tbody id="pickslipListBody">
                            @for (var i = 0; i < Model.PickslipList.Count; ++i)
                            {
                                <tr class="@(i % 2 == 0 ? "rowA" : "rowB")">
                                    <td style="white-space: nowrap; text-align: right">
                                        <input type="checkbox" class="ui-helper-hidden" name='@Model.NameFor(m => m.SelectedPickslip)' value="@Model.PickslipList[i].PickslipId" />
                                        @(i + 1)
                                    </td>
                                    <td style="text-align: center">
                                        <a href='@Url.Content(string.Format("~/Inquiry/Home/InquiryIndex?id={0}", Model.PickslipList[i].PickslipId))' target="PO">@Model.PickslipList[i].PickslipId</a>
                                    </td>
                                    <td style="text-align: center">
                                        <a href='@Url.Content(string.Format("~/Inquiry/Home/InquiryIndex?id={0}", Model.PickslipList[i].PurchaseOrder))' target="PO">@Model.PickslipList[i].PurchaseOrder</a>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => m.PickslipList[i].StartDate)
                                    </td>
                                    <td style="text-align: center">
                                        @Html.DisplayFor(m => m.PickslipList[i].PickslipImportDate)
                                    </td>
                                    <td style="text-align: center">
                                        @Html.DisplayFor(m => m.PickslipList[i].CustomerDcId)
                                    </td>
                                    <td style="text-align: center">
                                        @Html.DisplayFor(m => m.PickslipList[i].CustomerStoreId)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <span class="ui-state-highlight">No pickslips found for @Model.ColDimDisplayName : @Model.ColDimVal @Model.RowDimDisplayName : @Model.RowDimVal of this customer.</span>
                }
            }
        </div>
    </div>*@
@*@section script{*@
@*<script src="@Links_PickWaves.Scripts.jquery_validate_js" type="text/javascript"></script>
    <script src="@Links_PickWaves.Scripts.jquery_validate_unobtrusive_js" type="text/javascript"></script>
    <script src="@Links_PickWaves.Areas.PickWaves.CreateWave.CreateWave_PickslipList_js" type="text/javascript"></script>
    <link type="text/css" href="@Links_PickWaves.Areas.PickWaves.CreateWave.CreateWave_PickslipList_css" rel="stylesheet" />*@
@*<style type="text/css">
        .ui-selected {
            background-color: rgb(243,152,20) !important;
        }

        .ui-selectee {
            cursor: crosshair;
        }
        /*These styling is used to showing progress bar when showing bucket information*/
        .ui-progressbar-value {
            display: inline-block;
            text-align: center;
            font-size: 0.9em;
            overflow: hidden;
            font-weight: normal;
        }

        .ui-progressbar {
            width: 12em;
        }

        span.ui-icon {
            cursor: pointer;
            display: inline-block;
        }
    </style>*@
@* } *@