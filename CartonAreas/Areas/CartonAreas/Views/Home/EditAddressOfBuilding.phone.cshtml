@model DcmsMobile.CartonAreas.ViewModels.EditAddressOfBuildingViewModel
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    ViewBag.Title = string.Format("Edit Address and Description Of {0}", Model.BuildingId);
}

@Html.ValidationSummary()

@using (Html.BeginForm(MVC_CartonAreas.CartonAreas.Home.UpdateAddress(), FormMethod.Post))
{
    @Html.HiddenFor(m => m.BuildingId)
    <ul data-role="listview" data-inset="true">
        <li class="ui-field-contain">
            @Html.LabelFor(m => m.Description, new
       {
           @for = "tbDescription"
       })
            @Html.TextBoxFor(m => m.Description, new { size = 30, maxlength = 40, id = "tbDescription" })
        </li>
        <li class="ui-field-contain">
            @Html.LabelFor(m => m.Address1, new
       {
           @for = "tbAddress1"
       })
            @Html.TextBoxFor(m => m.Address1, new { size = 30, maxlength = 40, id = "tbAddress1" })
            <sup>*</sup>
           
            <label></label>
            <div class="ui-body-inherit">
                @Html.ValidationMessageFor(m => m.Address1)
            </div>
        </li>

        <li class="ui-field-contain">
            @Html.LabelFor(m => m.Address2, new
       {
           @for = "tbAddress2"
       })
            @Html.TextBoxFor(m => m.Address2, new { size = 30, maxlength = 40, id = "tbAddress2" })
        </li>

        <li class="ui-field-contain">
            @Html.LabelFor(m => m.Address3, new
       {
           @for = "tbAddress3"
       })
            @Html.TextBoxFor(m => m.Address3, new { size = 30, maxlength = 40, id = "tbAddress3" })
        </li>

        <li class="ui-field-contain">
            @Html.LabelFor(m => m.Address4, new
       {
           @for = "tbAddress4"
       })
            @Html.TextBoxFor(m => m.Address4, new { size = 30, maxlength = 40, id = "tbAddress4" })
        </li>

        <li class="ui-field-contain">
            <label for="tbCity">City/State/Zip</label>
            @Html.TextBoxFor(m => m.City, new { size = 15, maxlength = 40, id = "tbCity" })
            <sup>*</sup>
            @Html.ValidationMessageFor(m => m.City)

            <label for="tbState"></label>
            @Html.TextBoxFor(m => m.State, new { size = 2, maxlength = 2, id = "tbState" })

            <label for="tbZip"></label>
            @Html.TextBoxFor(m => m.ZipCode, new { size = 5, maxlength = 10, id = "tbZip" })
            @Html.ValidationMessageFor(m => m.ZipCode)
        </li>
        <li class="ui-field-contain">
            @Html.LabelFor(m => m.CountryCode, new
       {
           @for = "tbCountryCode"
       })
            @Html.DropDownListFor(m => m.CountryCode, Model.CountryCodeList, new { id = "tbCountryCode" })
        </li>
    </ul>

    <div>
        <button type="submit" class="ui-btn ui-btn-inline">Update</button>
        <a href="@Url.Action(MVC_CartonAreas.CartonAreas.Home.Index())" class="ui-btn ui-btn-inline">Cancel</a>
    </div>
}
@*<img src="@Links_CartonAreas.Areas.CartonAreas.Content.images.BOL_jpg" />*@

@section scripts
    {
    <script src="@Links_CartonAreas.Scripts.jquery_validate_js" type="text/javascript"></script>
    <script src="@Links_CartonAreas.Scripts.jquery_validate_unobtrusive_js" type="text/javascript"></script>
    <style type="text/css">
        /* Validation styles for Index Page */
        .field-validation-error {
            color: #ff0000;
        }

        .field-validation-valid {
            display: none;
        }

        li.ui-field-contain .input-validation-error {
            border: 1px solid #ff0000;
            background-color: #ffeeee;
        }

        .validation-summary-errors {
            font-weight: bold;
            color: #ff0000;
        }

        .validation-summary-valid {
            display: none;
        }
    </style>
}
