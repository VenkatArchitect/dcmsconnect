@model DcmsMobile.CartonAreas.ViewModels.ManageCartonAreaViewModel
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    ViewBag.Title = "Manage Carton Area";
}
@section scripts {
    <script type="text/javascript" src="@Links_CartonAreas.Areas.CartonAreas.Scripts.ManageCartonAreas_all_min_js"></script>
}
@section sidebar {
    <div class="box boxA">
        <div class="boxContent">
            <ul>
                <li>
                    @Html.LabelFor(m => m.CurrentArea.BuildingId)
                    @Html.DisplayFor(m => m.CurrentArea.BuildingId)
                </li>
            </ul>
            @Html.ActionLink("Back to Carton Area List", MVC_CartonAreas.CartonAreas.Home.Actions.ManageCartonArea())
        </div>
    </div>
}
<style type="text/css">
    .ui-widget {
        font-size: 1em;
    }

    #divLocationList .ui-progressbar {
        height: 1.1em;
    }

        #divLocationList .ui-progressbar .ui-widget-header {
            color: Black;
            font-weight: normal;
        }
</style>
<h2>@Html.LabelFor(m => m.CurrentArea.AreaId) @Html.DisplayFor(m => m.CurrentArea.ShortName)</h2>
<div class="box">
    <h3>
        Search for locations
    </h3>
    <div id="divFilter" class="boxContent designForm">
        <div id="divupdatefilter">
            @Html.Partial(MVC_CartonAreas.CartonAreas.Home.Views._areaInfoPartial, Model.CurrentArea)
        </div>
        @using (Html.BeginForm(MVC_CartonAreas.CartonAreas.Home.ApplyLocationIdFilter(), FormMethod.Get))
        {
            <div>
                @Html.HiddenFor(m => m.CurrentArea.AreaId, new { id = "hfAreaId" })
                @Html.LabelFor(m => m.LocationId)
                @Html.TextBoxFor(m => m.LocationId)
                <button type="submit" id="btnLocation">
                    Go
                </button>
                @Html.ValidationMessageFor(m => m.LocationId)
            </div>
        }
        @using (Html.BeginForm(MVC_CartonAreas.CartonAreas.Home.ApplyAssignedSkuFilter(), FormMethod.Get))
        {
            <div>
                @Html.HiddenFor(m => m.CurrentArea.AreaId)
                @Html.LabelFor(m => m.AssignedSkuText)
                @Html.HiddenFor(m => m.AssignedSkuId)
                @Html.TextBoxFor(m => m.AssignedSkuText, new Dictionary<string, object>
   {
           {"data-ac-list-url", Url.Action(MVC_CartonAreas.CartonAreas.AutoComplete.SkusAssignedToCartonLocations())},
         {"data-ac-validate-url", Url.Action(MVC_CartonAreas.CartonAreas.AutoComplete.ValidateSku())},
         {"data-ac-extra-param", Model.CurrentArea.AreaId}
   })<sup>&darr;*</sup>
                <button type="submit">Go</button>
                <span data-ac-msg-for="@Html.NameFor(m => m.AssignedSkuText)" class="sku-display"></span>
            </div>
        }
    </div>
</div>
<div class="box">
    @if (Model.Locations.Count > 0)
    {
        <div class="boxContent" id="divLocationList">
            <table>
                <caption>
                    @if (this.ViewData.ModelState.IsValid)
                    {

                        @Model.Locations.Count() <text>Locations Displayed</text>
                    }
                    else
                    {
                        <text> Invalid filters</text>
                    }
                </caption>
                <thead>
                    <tr>
                        <th rowspan="2">
                            Location <span class="ui-icon ui-icon-triangle-1-n" style="display: inline-block"></span>
                        </th>
                        <th colspan="3" style="text-align: center">
                            Assigned
                        </th>
                        <th colspan="4" style="text-align: center">
                            Content
                        </th>
                        <th rowspan="2" style="text-align: center">
                            Change
                        </th>
                    </tr>
                    <tr>
                        <th style="text-align: center">
                            SKU
                        </th>
                        <th>
                            Capacity(Cartons)
                        </th>
                        <th>
                            VWH
                        </th>
                        <th>
                            # Pieces
                        </th>
                        <th>
                            # Cartons
                        </th>
                        <th>
                            SKU
                        </th>
                        <th>
                            # Pallets
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Locations.Count; i++)
                    {
                        <tr class="@(i % 2 == 0 ? "rowA" : "rowB")">
                            <td>
                                <span class="mca-locationid">@Html.DisplayFor(m => m.Locations[i].LocationId)</span>
                            </td>
                            <td style="white-space: nowrap">
                                <span class="mca-sku">
                                    @if (Model.Locations[i].AssignedSku != null)
                                    {
                                        <span title="@Model.Locations[i].AssignedSku.UpcCode">
                                            @Html.DisplayFor(m => m.Locations[i].AssignedSku.Style)
                                            @Html.DisplayFor(m => m.Locations[i].AssignedSku.Color)
                                            @Html.DisplayFor(m => m.Locations[i].AssignedSku.Dimension)
                                            @Html.DisplayFor(m => m.Locations[i].AssignedSku.SkuSize)
                                        </span>
                                    }
                                </span>
                            </td>

                            <td style="text-align: right">
                                <span class="mca-maxassignedcartons">
                                    @Html.DisplayFor(m => m.Locations[i].MaxAssignedCartons)
                                </span>
                            </td>
                            <td style="text-align: right">
                                <span class="mca-vwh">
                                    @Html.DisplayFor(m => m.Locations[i].AssignedVwhId)
                                </span>
                            </td>
                            <td style="text-align: right">
                                @Html.DisplayFor(m => m.Locations[i].TotalPieces)
                            </td>
                            <td style="text-align: right" title="@Model.Locations[i].PercentFull% full">
                                <div class="ui-progressbar ui-widget ui-widget-content ui-corner-all">
                                    <div style="width: @Model.Locations[i].PercentFull%" class="ui-progressbar-value ui-widget-header ui-corner-left @(Model.Locations[i].MaxAssignedCartons.HasValue && Model.Locations[i].CartonCount >= Model.Locations[i].MaxAssignedCartons ? "ui-state-error" : "") ">
                                        <span class=" mca-cartoncount">
                                            @Html.DisplayFor(m => m.Locations[i].CartonCount)
                                        </span>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <span class="mca-ctnSku">
                                    @if (Model.Locations[i].CartonSku != null)
                                    {
                                        <span title="@Model.Locations[i].CartonSku.UpcCode">
                                            @Html.DisplayFor(m => m.Locations[i].CartonSku.Style)/
                                            @Html.DisplayFor(m => m.Locations[i].CartonSku.Color)/
                                            @Html.DisplayFor(m => m.Locations[i].CartonSku.Dimension)/
                                            @Html.DisplayFor(m => m.Locations[i].CartonSku.SkuSize)
                                        </span>
                                        if (Model.Locations[i].CartonSkuCount > 1)
                                        {
                                            <span class="ui-priority-primary">
                                                and @(Model.Locations[i].CartonSkuCount - 1)
                                                more
                                            </span>

                                        }
                                    }
                                </span>
                            </td>
                            <td style="text-align: right">
                                @Html.DisplayFor(m => m.Locations[i].PalletCount)
                            </td>
                            <td style="white-space: nowrap">
                                <button class="mca-assign" title="Assign SKU" />
                                <button class="mca-unassign"
                                        @(Model.Locations[i].AssignedSku == null ? "disabled" : "") title="Unassign SKU" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div>
            No qualifying locations found
        </div>
    }
</div>
<div id="divEditDialog" data-unassign-url="@Url.Action(MVC_CartonAreas.CartonAreas.Home.UnassignLocation())">
    @Html.Partial(MVC_CartonAreas.CartonAreas.Home.Views._assignSkuDialogPartial, Model.AssignedSku)
</div>
@*
    $Id$
    $Revision$
    $URL$
    $Header$
    $Author$
    $Date$
*@ 