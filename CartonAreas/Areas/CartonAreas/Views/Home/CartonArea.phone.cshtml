@model DcmsMobile.CartonAreas.ViewModels.CartonAreaViewModel
@{
    ViewBag.Title = "Carton Areas in Building " + @Model.BuildingId;
}

<div id="AreaList">
    <table data-role="table" id="table-column-toggle" data-mode="columntoggle" class="ui-responsive table-stroke">
        <thead>
            <tr>
                <th>Area<span style="display:inline-block;" class="ui-icon ui-icon-triangle-1-n"></span></th>
                <th data-priority="1">Description</th>
                <th># Locations</th>
                <th data-priority="2">Numbered</th>
                <th data-priority="3">Pallet Required</th>
                <th data-priority="4">Unusable Inventory</th>
                <th>Change</th>
            </tr>

        </thead>
        <tbody>
            @for (var i = 0; i < Model.CartonAreaList.Count(); i++)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(m => m.CartonAreaList[i].ShortName)
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.CartonAreaList[i].Description)
                    </td>
                    <td>
                        @if (Model.CartonAreaList[i].LocationNumberingFlag)
                        {
                            <a href="@Url.Action(MVC_CartonAreas.CartonAreas.Home.ManageCartonArea(Model.CartonAreaList[i].AreaId))">@Html.DisplayFor(m => m.CartonAreaList[i].TotalLocations)</a>
                        }
                        else
                        {
                            @Html.DisplayFor(m => m.CartonAreaList[i].TotalLocations)
                        }
                    </td>
                    <td>
                        <span class="@(Model.CartonAreaList[i].LocationNumberingFlag ? "ui-nodisc-icon ui-alt-icon ui-btn ui-corner-all ui-icon-check ui-btn-icon-notext ui-btn-inline" : "")" title="Numbered Location"></span>
                    </td>
                    <td>
                        <span class="@(Model.CartonAreaList[i].IsPalletRequired ? "ui-nodisc-icon ui-alt-icon ui-btn ui-corner-all ui-icon-check ui-btn-icon-notext ui-btn-inline" : "")" title="Pallet required"></span>
                    </td>
                    <td>
                        <span class="@(Model.CartonAreaList[i].UnusableInventory ? "ui-nodisc-icon ui-alt-icon ui-btn ui-corner-all ui-icon-check ui-btn-icon-notext ui-btn-inline" : "")" title="Unusable Inventory"></span>
                    </td>
                    <td>
                        @Html.HiddenFor(m => m.CartonAreaList[i].AreaId)
                        <a href="#editArea" data-rel="popup" class="ui-btn ui-corner-all ui-icon-edit ui-btn-icon-notext ui-btn-inline" data-area="@Model.CartonAreaList[i].AreaId"
                           data-area-short-name="@Model.CartonAreaList[i].ShortName" data-description="@Model.CartonAreaList[i].Description"
                           data-locationnumberingflag="@Model.CartonAreaList[i].LocationNumberingFlag" title='Update area @Model.CartonAreaList[i].ShortName'>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div data-role="popup" id="editArea">
    @using (Html.BeginForm(MVC_CartonAreas.CartonAreas.Home.UpdateArea(), FormMethod.Post))
    {
        <div class="ui-field-contain">
            <label for="tbDescription">Description</label>
            <input type="text" name="@EclipseLibrary.Mvc.Helpers.ReflectionHelpers.NameFor((DcmsMobile.CartonAreas.ViewModels.CartonAreaModel m) => m.Description )"
                   id="tbDescription" maxlength="40" size=" 30" />
            @*@Html.TextBoxFor(m => m.Description, new { id = "tbDescription", maxlength = 40, size = 30 })*@

            <label for="cbLocationNumberingFlag">Numbered Location</label>
            <input id="cbLocationNumberingFlag" type="checkbox"
                   name="@EclipseLibrary.Mvc.Helpers.ReflectionHelpers.NameFor((DcmsMobile.CartonAreas.ViewModels.CartonAreaModel m) => m.LocationNumberingFlag)" value="true" />
            @*@Html.CheckBoxFor(m => m.LocationNumberingFlag, new { id = "cbLocationNumberingFlag" })*@

            <label for="cbPalletRequired">Pallet Required</label>
            <input id="cbPalletRequired" type="checkbox"
                   name="@EclipseLibrary.Mvc.Helpers.ReflectionHelpers.NameFor((DcmsMobile.CartonAreas.ViewModels.CartonAreaModel m) => m.IsPalletRequired)" value="true" />

            @*@Html.CheckBoxFor(m => m.IsPalletRequired, new { id = "cbPalletRequired" })*@

            <label for="cbUnusableInventory">Unusable Inventory</label>
            <input id="cbUnusableInventory" type="checkbox"
                   name="@EclipseLibrary.Mvc.Helpers.ReflectionHelpers.NameFor((DcmsMobile.CartonAreas.ViewModels.CartonAreaModel m) => m.UnusableInventory)" value="true" />
        </div>
        <input type="hidden" name="@EclipseLibrary.Mvc.Helpers.ReflectionHelpers.NameFor((DcmsMobile.CartonAreas.ViewModels.CartonAreaModel m) => m.AreaId) " id="hfAreaId" />
        <button class="ui-btn ui-btn-inline" type="submit">Update</button>
        <a href="#" class="ui-btn ui-corner-all ui-shadow ui-btn-inline ui-btn-b" data-rel="back">Cancel</a>
    }
</div>


@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            // When edit pallet limit is clicked, populate values in the dialog
            $('#AreaList').on('click', 'a[href="#editArea"]', function (e) {
                //alert($('#cbLocationNumberingFlag').length);
                $('#editArea')
                    .find('h3 span').text($(this).attr('data-area-short-name'))
                    .end()
                    .find('#tbDescription').val($(this).attr('data-description'))
                    .end()
                    .find('#hfAreaId').val($(this).attr('data-area'));
                $('#cbLocationNumberingFlag').prop('checked', $(this).attr('data-locationnumberingflag') == "True")
                    .checkboxradio('refresh');
            });
        });
    </script>
}
