// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace DcmsMobile.Receiving.Areas.Receiving.Controllers {
    public partial class HomeController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CreateProcess() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CreateProcess);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult EditProcess() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.EditProcess);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SelectProcess() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SelectProcess);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Receiving() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Receiving);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Tutorial() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Tutorial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult HandleScan() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.HandleScan);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult HandleMobileScan() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.HandleMobileScan);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UnPalletizeCarton() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UnPalletizeCarton);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult PrintCarton() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.PrintCarton);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult NonpalletizedCartons() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.NonpalletizedCartons);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult SpotCheckAreaList() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.SpotCheckAreaList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CloseShipment() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CloseShipment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReOpenShipment() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ReOpenShipment);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC_Receiving.Receiving.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Receiving";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Home";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string CreateProcess = "CreateProcess";
            public readonly string EditProcess = "EditProcess";
            public readonly string SelectProcess = "SelectProcess";
            public readonly string Receiving = "Receiving";
            public readonly string Tutorial = "Tutorial";
            public readonly string HandleScan = "HandleScan";
            public readonly string HandleMobileScan = "HandleScan";
            public readonly string UnPalletizeCarton = "UnPalletizeCarton";
            public readonly string PrintCarton = "PrintCarton";
            public readonly string GetPrinters = "GetPrinters";
            public readonly string NonpalletizedCartons = "NonpalletizedCartons";
            public readonly string SpotCheckAreaList = "SpotCheckAreaList";
            public readonly string ShipmentList = "ShipmentList";
            public readonly string CloseShipment = "CloseShipment";
            public readonly string ReOpenShipment = "ReOpenShipment";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants {
            public const string Index = "Index";
            public const string CreateProcess = "CreateProcess";
            public const string EditProcess = "EditProcess";
            public const string SelectProcess = "SelectProcess";
            public const string Receiving = "Receiving";
            public const string Tutorial = "Tutorial";
            public const string HandleScan = "HandleScan";
            public const string HandleMobileScan = "HandleScan";
            public const string UnPalletizeCarton = "UnPalletizeCarton";
            public const string PrintCarton = "PrintCarton";
            public const string GetPrinters = "GetPrinters";
            public const string NonpalletizedCartons = "NonpalletizedCartons";
            public const string SpotCheckAreaList = "SpotCheckAreaList";
            public const string ShipmentList = "ShipmentList";
            public const string CloseShipment = "CloseShipment";
            public const string ReOpenShipment = "ReOpenShipment";
        }


        static readonly ActionParamsClass_CreateProcess s_params_CreateProcess = new ActionParamsClass_CreateProcess();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateProcess CreateProcessParams { get { return s_params_CreateProcess; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateProcess {
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_EditProcess s_params_EditProcess = new ActionParamsClass_EditProcess();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditProcess EditProcessParams { get { return s_params_EditProcess; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditProcess {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_SelectProcess s_params_SelectProcess = new ActionParamsClass_SelectProcess();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SelectProcess SelectProcessParams { get { return s_params_SelectProcess; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SelectProcess {
            public readonly string info = "SelectProcess";
        }
        static readonly ActionParamsClass_Receiving s_params_Receiving = new ActionParamsClass_Receiving();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Receiving ReceivingParams { get { return s_params_Receiving; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Receiving {
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_Tutorial s_params_Tutorial = new ActionParamsClass_Tutorial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Tutorial TutorialParams { get { return s_params_Tutorial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Tutorial {
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_HandleScan s_params_HandleScan = new ActionParamsClass_HandleScan();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HandleScan HandleScanParams { get { return s_params_HandleScan; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HandleScan {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_HandleMobileScan s_params_HandleMobileScan = new ActionParamsClass_HandleMobileScan();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HandleMobileScan HandleMobileScanParams { get { return s_params_HandleMobileScan; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HandleMobileScan {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_UnPalletizeCarton s_params_UnPalletizeCarton = new ActionParamsClass_UnPalletizeCarton();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UnPalletizeCarton UnPalletizeCartonParams { get { return s_params_UnPalletizeCarton; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UnPalletizeCarton {
            public readonly string cartonId = "cartonId";
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_PrintCarton s_params_PrintCarton = new ActionParamsClass_PrintCarton();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PrintCarton PrintCartonParams { get { return s_params_PrintCarton; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PrintCarton {
            public readonly string cartonId = "cartonId";
            public readonly string printer = "printer";
        }
        static readonly ActionParamsClass_NonpalletizedCartons s_params_NonpalletizedCartons = new ActionParamsClass_NonpalletizedCartons();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_NonpalletizedCartons NonpalletizedCartonsParams { get { return s_params_NonpalletizedCartons; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_NonpalletizedCartons {
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_SpotCheckAreaList s_params_SpotCheckAreaList = new ActionParamsClass_SpotCheckAreaList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SpotCheckAreaList SpotCheckAreaListParams { get { return s_params_SpotCheckAreaList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SpotCheckAreaList {
            public readonly string areaId = "areaId";
        }
        static readonly ActionParamsClass_CloseShipment s_params_CloseShipment = new ActionParamsClass_CloseShipment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CloseShipment CloseShipmentParams { get { return s_params_CloseShipment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CloseShipment {
            public readonly string shipmentId = "shipmentId";
            public readonly string poId = "poId";
        }
        static readonly ActionParamsClass_ReOpenShipment s_params_ReOpenShipment = new ActionParamsClass_ReOpenShipment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReOpenShipment ReOpenShipmentParams { get { return s_params_ReOpenShipment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReOpenShipment {
            public readonly string shipmentId = "shipmentId";
            public readonly string poId = "poId";
        }
        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _cartonNotOnPalletPartial = "_cartonNotOnPalletPartial";
            public readonly string _palletPartial = "_palletPartial";
            public readonly string _palletPartial_Mobile = "_palletPartial.Mobile";
            public readonly string CreateProcess = "CreateProcess";
            public readonly string Index = "Index";
            public readonly string Index_Mobile = "Index.Mobile";
            public readonly string Receiving = "Receiving";
            public readonly string Receiving_Mobile = "Receiving.Mobile";
            public readonly string ShipmentList = "ShipmentList";
            public readonly string Tutorial = "Tutorial";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_HomeController: DcmsMobile.Receiving.Areas.Receiving.Controllers.HomeController {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateProcess(int? processId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CreateProcess);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditProcess(DcmsMobile.Receiving.ViewModels.Home.ReceivingProcessModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.EditProcess);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SelectProcess(DcmsMobile.Receiving.ViewModels.Home.SelectProcessModel info) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SelectProcess);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SelectProcess", info);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Receiving(int? processId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Receiving);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Tutorial(int? processId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Tutorial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult HandleScan(DcmsMobile.Receiving.ViewModels.Home.ReceivingViewModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.HandleScan);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult HandleMobileScan(DcmsMobile.Receiving.ViewModels.Home.ReceivingViewModel model) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.HandleMobileScan);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UnPalletizeCarton(string cartonId, int processId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UnPalletizeCarton);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cartonId", cartonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult PrintCarton(string cartonId, string printer) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.PrintCarton);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cartonId", cartonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "printer", printer);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetPrinters() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetPrinters);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult NonpalletizedCartons(int? processId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.NonpalletizedCartons);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult SpotCheckAreaList(string areaId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.SpotCheckAreaList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "areaId", areaId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ShipmentList() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ShipmentList);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CloseShipment(string shipmentId, long? poId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CloseShipment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shipmentId", shipmentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "poId", poId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReOpenShipment(string shipmentId, long? poId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ReOpenShipment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shipmentId", shipmentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "poId", poId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
