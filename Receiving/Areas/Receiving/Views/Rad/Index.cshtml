@using DcmsMobile.Receiving.ViewModels.Rad;


@model RadViewModel
@{
    ViewBag.Title = "Receiving Configuration";
}

@*@section script {
        <script src="@Links_Receiving.Scripts.jquery_validate_js" type="text/javascript"></script>
        <script src="@Links_Receiving.Scripts.jquery_validate_unobtrusive_js" type="text/javascript"></script>
        <script src="@Links_Receiving.Areas.Receiving.Scripts.Rad.Rad_all_js" type="text/javascript"></script>
    }*@


<div class="container">

    <div class="page-header">
        <span class="pull-right">
            <a href="@Url.Action(MVC_Receiving.Receiving.Home.Index())"><span class="glyphicon glyphicon-link" style="display: inline-block"></span> Receive Cartons</a>
        </span>
        <h2>Receiving Configuration</h2>
        <small class="text-info h6">
            <span class="glyphicon glyphicon-info-sign" style="display: inline-block"></span>
            Disabled configuration settings will not be honored during receiving.
        </small>
    </div>

    @if (Model.SpotCheckAreaList.Count != 0)
    {
        <div class="well well-sm">
            Available Spot Check Areas
            (Area
            <span class="glyphicon glyphicon-arrow-right"></span>
            Building)

            @for (int i = 0; i < Model.SpotCheckAreaList.Count(); i++)
            {
                <span class="h4 text-success">
                    &nbsp; &nbsp; &nbsp;
                    @Html.DisplayFor(m => m.SpotCheckAreaList[i].AreaId)
                    <span class="glyphicon glyphicon-arrow-right"></span>
                    @Html.DisplayFor(m => m.SpotCheckAreaList[i].BuildingId)
                </span>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">No Spot Check Areas defined</div>
    }

    <div id="divSpotCheck">
        @if (!Model.EnableEditing)
        {
            <button class="btn btn-primary pull-right" data-toggle="modal" data-target="#btnAddSpotCheck">
                Add Spot Check...
            </button>
        }
        <div>
            @Html.Partial(MVC_Receiving.Receiving.Rad.Views._spotCheckListPartial, Model.SpotCheckList)
        </div>
    </div>


    <!-- Modal for edit spot check button in partial page _spotCheckListPartial.cshtml-->
    <div class="modal fade" id="btnEditSpotCheck" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="myModalLabel">Edit Spot Check</h4>
                </div>

                @Html.Partial(MVC_Receiving.Receiving.Rad.Views._editSpotCheckPartial, new SpotCheckViewModel())

            </div>
        </div>
    </div>

    <!-- Modal for remove spot check Percentage button in partial page _spotCheckListPartial.cshtml-->
    <div class="modal fade" id="btnAddSpotCheck" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title">Add Spot Check</h4>
                </div>
                @Html.Partial(MVC_Receiving.Receiving.Rad.Views._addSpotCheckPartial, new SpotCheckViewModel
{
    SewingPlantList = Model.SpotCheckViewModel.SewingPlantList
})

            </div>
        </div>
    </div>
</div>


@section script {
    <script src="@Links_Receiving.Areas.Receiving.Scripts.bootstrap3_typeahead_js" type="text/javascript"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            //Enabel auto-complete textbox for the specific style and color in the add spot check popup in _addSpotCheckPartial Page.
            $('#SpecificStyle,#SpecificColor').on('change', function (e) {
                $('#tb' + $(this).attr('id')).attr("disabled", false).attr('placeholder', "").attr('required', true);
            });
            $('#Style,#Color').change(function (e) {
                $('#tbSpecific' + $(this).attr('id')).attr('required', false).val('').attr("disabled", true).attr('placeholder', "ALL");
            });

            //Insert values of style,color,sewingPlant and spotCheckPercent in the _editSpotCheckPartial  from _spotCheckListPartial
            $('#divSpotCheckList').on('click', 'table tbody tr td button[data-target="#btnEditSpotCheck"]', function (e) {
                var $tr = $(e.target).closest('tr');
                $('#divEditSpotCheck').find('span[data-name="style"]').text($tr.attr('data-style'));
                $('#divEditSpotCheck').find('span[data-name="color"]').text($tr.attr('data-color'));
                $('#divEditSpotCheck').find('span[data-name="sewingPlantId"]').text($tr.attr('data-sewingplant-id'));
                $('#divEditSpotCheck').find('span[data-name="spotCheckPercent"]').text($tr.attr('data-spotcheck-percent'));
                $('#newPercent').val($tr.attr('data-spotcheck-percent'));

                var checked = $tr.attr('data-is-spotcheck-enabled');       
                if (checked == "True") {
                    $('#cbEditIsSpotCheckEnable').prop('checked', 'checked');
                }
                else {
                    $('#cbEditIsSpotCheckEnable').removeAttr('checked', 'checked')
                }


            });
            //auto-complete for the _addspotCheckPartial Page.
            $('input[data-url-list]').typeahead({
                source: function (query, cb) {
                    $.ajax({
                        url: this.$element.attr("data-url-list"),
                        context: this.$element,
                        data: {
                            term: query
                        }
                    }).then(function (response) {
                        // Extract the label from each result in the array.
                        // Store the value in a global map
                        var x = $.map(response, function (val, i) {
                            return val.label;
                        });
                        cb(x);
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        alert("error" + jqXHR.responseText);
                    });
                },
                matcher: function (item) {
                    return true;
                }

            });

        });
    </script>
}



