@using DcmsMobile.Receiving.ViewModels.Home
@model IndexViewModel
@{
    ViewBag.Title = "Receiving Process";
    var x = Model.RecentProcesses.Take(10);
    Model.RecentProcesses = x.ToList();
    var grid = Html.GridFor(m => m.RecentProcesses);
    grid.AddColumn(m => m.ProcessId).CellHtml(item => item.Html.ActionLink(item.Model.ProcessId.ToString(), MVC_Receiving.Receiving.Home.Receiving(item.Model.ProcessId)));
    grid.AddColumn(m => m.ProNumber);
    grid.AddColumn(m => m.PalletCount).CellStyle("right-align");
    grid.AddColumn(m => m.CartonCount).CellStyle("right-align");
}
@Html.StatusSummary()
<div class="box boxB">
    <div class="boxContent">
        @using (Html.BeginForm(MVC_Receiving.Receiving.Home.SelectProcess()))
            {
                <div>
                    <label>
                        Continue existing process</label>
                    <span style="white-space: nowrap">
                        @Html.TextBoxFor(m => m.SelectProcess.ProcessId, new
                   {
                       id = "scan",
                       size = "12"
                   })<span>*</span></span>
                </div>
            }
    </div>
</div>
@grid.GetHtml(
    selectedRowStyle: "ui-state-highlight",
    rowStyle: "rowA",
    alternatingRowStyle: "rowB",
    caption: "Recent Process List"
)




<!--$Id$-->
