@model DcmsMobile.Receiving.ViewModels.Home.ReceivingProcessModel
@{
    Layout = MVC_Receiving.Receiving.Shared.Views._layoutReceiving;
    ViewBag.Title = Model.ProcessId == null ? "Create Process" : string.Format("Edit Process #{0}", Model.ProcessId);
}


<div class="container">
    <div class="page-header">
        <span class="pull-right">
            <a href="@Url.Action(MVC_Receiving.Receiving.Home.Index())">
                <span class="glyphicon glyphicon-home"></span>
                Recent Process
            </a>
        </span>
        <h2>Create Process</h2>
    </div>
    @using (Html.BeginForm(MVC_Receiving.Receiving.Home.EditProcess(), FormMethod.Post, new
    {
        @class = "form-horizontal",
        role = "form"
    }))
    {
        @Html.HiddenFor(m => m.ProcessId)
        <div class="form-group">
            <label for="ddlReceivingArea" class="col-sm-2 control-label">Receive In <sup><i class="glyphicon glyphicon-asterisk"></i></sup></label>
            <div class="col-sm-10">
                @Html.GroupDropListFor(m => m.ReceivingAreaId, Model.ReceivingAreasList, "(Select Any Area)",
                new
                {
                    id = "ddlReceivingArea",
                    @class = "form-control",
                    @required = "required"

                })
            </div>
        </div>
        <div class="form-group">
            <label for="ddlSpotCheckArea" class="col-sm-2 control-label">Spot Check Area <sup><i class="glyphicon glyphicon-asterisk"></i></sup></label>
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.SpotCheckAreaId, Model.SpotCheckAreasList, "(Select Any Area)", new
           {
               id = "ddlSpotCheckArea",
               @class = "form-control",
               @required = "required"
               

           })
            </div>
        </div>
        <div class="form-group">
            <label for="ddlPriceSeasonCode" class="col-sm-2 control-label">Season Code</label>
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.PriceSeasonCode, Model.PriceSeasonCodeList, "(No Change)", new
           {
               id = "ddlPriceSeasonCode",
               @class = "form-control"
              
           })
            </div>
        </div>
        <div class="form-group has-feedback">
            <label for="txtboxExpectedCarton" class="col-sm-2 control-label">Expected Cartons <sup><i class="glyphicon glyphicon-asterisk"></i></sup></label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.ExpectedCartons, new
           {
               id = "txtboxExpectedCarton",
               maxlength = "5",
               @class = "form-control",
               type = "number",
               @required = "required"
           })
            </div>
        </div>
        <div class="form-group">
            <label for="txtBoxPalletLimit" class="col-sm-2 control-label">Max Cartons Per Pallet</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.PalletLimit, new
           {
               id = "txtBoxPalletLimit",
               maxlength = 4,
               @class = "form-control",
               type = "number",
               size = 4
           })
            </div>
        </div>
        <div class="form-group">
            <label for="txtBoxPro" class="col-sm-2 control-label">Pro # <sup><i class="glyphicon glyphicon-asterisk"></i></sup></label>

            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.ProNumber, new
           {
               id = "txtBoxPro",
               maxlength = "25",
               @class = "form-control",
               @required = "required"
           })

            </div>
        </div>

        <div class="form-group">
            <label for="tbProDate" class="col-sm-2 control-label">
                @ModelMetadata.FromLambdaExpression(m => m.ProDate, this.ViewData).DisplayName <sup><i class="glyphicon glyphicon-asterisk"></i></sup>
            </label>
            <div class="col-sm-10">
                <input name="@Html.NameFor(m => m.ProDate)" value="@string.Format("{0:d}", Model.ProDate)"
                       placeholder="mm/dd/yyyy" id="tbProDate" size="10" maxlength="10" class="form-control" type="date" required />
            </div>
        </div>
        <div class="form-group">
            <label for="tbCarrier" class="col-sm-2 control-label">Carrier <sup><i class="glyphicon glyphicon-asterisk"></i></sup></label>
            <div class="col-sm-10">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.CarrierId, new
                           {
                               id = "tbCarrier",
                               @class = "form-control",
                               data_url_list = Url.Action(MVC_Receiving.Receiving.AutoComplete.GetCarriers()),
                               @required = "required"
                           })
                    <span class="input-group-btn">
                        <span class="btn btn-default"><span class="glyphicon glyphicon-search"></span></span>
                    </span>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                @if (Model.ProcessId.HasValue)
                {
                    <button type="submit" class="btn btn-primary">Save and Continue</button>
                    <a href="@Url.Action(MVC_Receiving.Receiving.Home.Receiving(Model.ProcessId))" class="btn btn-default">Continue without saving</a>

                }
                else
                {
                    <button type="submit" class="btn btn-primary">Create New</button>
                }
            </div>
        </div>

    }
</div>
@section script {
    <script src="@Links_Receiving.Areas.Receiving.Scripts.bootstrap3_typeahead_js" type="text/javascript"></script>


    <script type="text/javascript">
        $(document).ready(function () {
            // //Select SpotCheck area based on the selection of receiving area.
            //$('#ddlReceivingArea').change(function () {
            //    var building = $('#ddlReceivingArea').val();
            //    var items;
            //    $.getJSON($('#ddlSpotCheckArea').attr('data-source-url').replace("X", building), function (data) {
            //        if (data.length != 1) {
            //            items = '<option value ="">(Please Select)</option>';
            //        }
            //        var $select = $('#ddlSpotCheckArea');
            //        $.each(data, function (i, area) {
            //            items += "<option value='" + area.Value + "'>" + area.Text + "</option>";
            //        });
            //        $select.html(items);
            //    });
            //});

            $('input[data-url-list]').typeahead({
                source: function (query, cb) {
                    $.ajax({
                        url: this.$element.attr("data-url-list"),
                        context: this.$element,
                        data: {
                            term: query
                        }
                    }).then(function (response) {
                        // Extract the label from each result in the array.
                        // Store the value in a global map
                        var x = $.map(response, function (val, i) {
                            return val.label;
                        });
                        cb(x);
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        alert("error" + jqXHR.responseText);
                    });
                },
                matcher: function (item) {
                    return true;
                },
                //showHintOnFocus: true
            });

        });
    </script>
}
<!--$Id: _processPartial.cshtml 11704 2012-01-21 06:12:33Z rkandari $-->
