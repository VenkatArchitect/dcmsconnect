<!--  Contract Reviewed by: Binod Kumar 17th Sept 2011.
     1. Following attribs are used in our code
    data-ajax-url: We keep URL of handle scan.
    -->
@model DcmsMobile.Receiving.ViewModels.Home.ReceivingViewModel
@{
    Layout = MVC_Receiving.Receiving.Shared.Views._layoutReceiving;
    string sound;
    if (!this.ViewData.ModelState.IsValid)
    {
        // Validation error
        sound = Links_Receiving.Areas.Receiving.Content.Sounds.error_wav;
    }
    else
    {
        // Carton was received
        sound = Links_Receiving.Areas.Receiving.Content.Sounds.scan_wav;
    }
}
<div class="container">
    <div class="page-header">
        <span class="pull-right">
            <a href="@string.Format("{0}?process_id={1}", Model.ProcessDetailUrl, Model.ProcessId)"
               title="Receiving Detail for the selected Process" target="_blank"
               class=" btn btn-link">
                <span class="glyphicon glyphicon-new-window"></span>
                @*Report 40.103:*@ Cartons received and shipments summary
            </a>
        </span>
        <h2>
            Receiving
            <small>Carrier  @Html.DisplayFor(m => m.CarrierId) @Html.DisplayFor(m => m.CarrierDescription)</small>
        </h2>
    </div>

    <p>
        @Html.LabelFor(m => m.ProcessId)
        @Html.DisplayFor(m => m.ProcessId)
        &nbsp;
        @Html.LabelFor(m => m.ExpectedCartons)
        @Html.DisplayFor(m => m.ExpectedCartons)
        &nbsp;
        @Html.LabelFor(m => m.ProDate)
        @Html.DisplayFor(m => m.ProDate)
        &nbsp;
        @Html.LabelFor(m => m.ProNumber)
        @Html.DisplayFor(m => m.ProNumber)
        &nbsp;
        @Html.LabelFor(m => m.PriceSeasonCode)
        @Html.DisplayFor(m => m.PriceSeasonCode)
        &nbsp;
        @Html.LabelFor(m => m.OperatorName)
        @Html.DisplayFor(m => m.OperatorName)
    </p>

    <div class="panel panel-info">
        <div class="panel-heading">
            <div class="row" style="margin-bottom:0px;">
                <div class="col-md-4">
                    <div class="input-group">
                        <div class="form-group">
                            <div class="input-group input-group-lg">
                                <input type="text" id="scan" name="@Html.NameFor(m => m.ScanModel.ScanText)"
                                       class="form-control" autofocus
                                       data-ajax-url="@Url.Action(MVC_Receiving.Receiving.Home.HandleScan())"
                                       autocomplete="off" placeholder="Scan Carton or Pallet" />
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" type="submit">Scan</button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="btn-group">
                        <button id="btnNewPallet" class="btn btn-default" type="button" data-new-pallet="@Model.ScanModel.ScanText">
                            <span class="glyphicon glyphicon-plus-sign"></span>  New Pallet
                        </button>
                        <a href="@Url.Action(MVC_Receiving.Receiving.Home.CreateProcess(Model.ProcessId))" class="btn btn-default"><span class="glyphicon glyphicon-edit"></span> Edit Process</a>
                        <a href="@Url.Action(MVC_Receiving.Receiving.Home.Index())" class="btn btn-default"><span class="glyphicon glyphicon-home"></span> Change Process</a>
                        <a href="#" id="linkShowCarton" class="btn btn-default"><span class="glyphicon glyphicon glyphicon-list-alt"></span> Cartons received but not on Pallet...</a>
                    </div>
                </div>
            </div>
            Receiving progress <em>@Model.CartonCount of @(Model.ExpectedCartons ?? 0) cartons</em>
            <div class="progress" style="margin-bottom:0px;" id="progressCartons">
                <div class="progress-bar" role="progressbar" aria-valuenow="@Model.CartonCount " aria-valuemin=" 0" aria-valuemax="@Model.ExpectedCartons" style="width: @Model.percentReceivedCartons%;min-width:20px;">
                    <span>@Model.percentReceivedCartons</span>%
                </div>
            </div>
        </div>
    </div>

    <!-- Nav tabs -->
    <ul class="nav nav-tabs bg-info" role="tablist" id="palletTabs">
        @for (var i = 0; i < Model.Pallets.Count; i++)
        {
            <li class="@(i==0? "active":"")">

                <a href='#Pallet_@(Model.Pallets[i].PalletId)' role="tab" data-toggle="tab"
                   title='Pallet @Model.Pallets[i].PalletId'>
                    @(Model.Pallets[i].PalletId)
                    <span title="Remove Pallet" class='glyphicon glyphicon-remove-sign text-info'></span>
                </a>
            </li>
        }

    </ul>
    <!-- Tab panes -->
    <div class="tab-content" id="palletTabContent">

        @for (var i = 0; i < Model.Pallets.Count; i++)
        {
            <div id="Pallet_@(Model.Pallets[i].PalletId)" class="@(i==0? "active":"") tab-pane" data-pallet="@Model.Pallets[i].PalletId">
                @Html.Partial(MVC_Receiving.Receiving.Home.Views._palletPartial, Model.Pallets[i])
            </div>
        }
    </div>
    <!-- Print Modal called from _palletPartialPage -->
    <div class="modal fade" id="printModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="myModalLabel">
                        Print Carton <span class="cartonId" data-name="@MVC_Receiving.Receiving.Home.PrintCartonParams.cartonId">This will be replaced by the actual carton id when dialog is opened</span>
                    </h4>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger hidden" role="alert">Please select a printer</div>
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label for="ddlPrinter" class="col-sm-2 control-label">Printer <abbr>*</abbr></label>
                            <div class="col-sm-10">
                                <select id="ddlprinters" class="form-control" data-getprinters-url='@Url.Action(MVC_Receiving.Receiving.Home.GetPrinters())'
                                        name="@MVC_Receiving.Receiving.Home.PrintCartonParams.printer" required></select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnPrint" data-print-url="@Url.Action(MVC_Receiving.Receiving.Home.PrintCarton())"><span class="glyphicon glyphicon-print"></span> Print</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>

            </div>

        </div>



    </div>

    <!--Remove Carton Model(Pop-up)-->
    <div class="modal fade" id="removeModal" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="myModalLabel">
                        Remove Carton <span class="cartonId" data-name="@MVC_Receiving.Receiving.Home.UnPalletizeCartonParams.cartonId"></span>
                        from Pallet <span class="palletId"></span>
                    </h4>
                </div>

                <div class="modal-body">
                    <span data-name="@MVC_Receiving.Receiving.Home.UnPalletizeCartonParams.processId" class="processId">@Model.ProcessId</span>
                    <span class="text-info">
                        If you have just received this carton, it will also be unreceived. Press Ok to confirm.
                    </span>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" data-url="@Url.Action(MVC_Receiving.Receiving.Home.UnPalletizeCarton())" id="btnRemove">Ok</button>
                    <button class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>



    </div>


</div>
@section script{
    <!-- Closing tabs inspired from
     http://jeykeu.wordpress.com/2013/07/27/dynamically-add-remove-and-re-number-tabs-in-twitter-bootstrap/-->

    <script type="text/javascript">
        $(document).ready(function () {
            // Shows the first tab content by default
            //$('ul[role="tablist"] li a:first').tab('show');
            //$('ul[role="tablist"] li a').click(function () { $('.divError').hide(); });


            //$('#scan').keydown(function (e) {
            //    //enter key
            //    if (e.keyCode == 13) {
            //        if ($(this).val() != "") {
            //            var tabToOpen = $(this).val().toUpperCase();
            //            var curPalletIndex = $('ul[role="tablist"] li.active').index();

            //            //this checks weather the href is already been there in the page(ie.pallet on scan)
            //            var $li = $('a[href="#Pallet_' + tabToOpen + '"]').closest('li');
            //            var index = $li.index();
            //            if (index == -1) {

            //               var $li = $('a[href="#Pallet_' + tabToOpen + '"]').closest('li');
            //               var palletId = $li.attr('data-palletid');

            //                if (palletId) {
            //                    $('.divError').show().html('a[href="#Pallet_' + tabToOpen + 'has the same disposition. Ignoring pallet scan');
            //                    return;
            //                }
            //                else {
            //                    $('ul[role="tablist"]').append('<li  data-palletid=' + tabToOpen + ' data-disposition=' + tabToOpen + '><a href="#Pallet_' + tabToOpen + ' " ' + 'role="tab" data-toggle="tab"  title="Pallet ' + tabToOpen + '">' + tabToOpen + '<span title="Remove Pallet" class="glyphicon glyphicon-remove-sign text-info"></span></a></li>')
            //                    $('div.tab-content').append('<div class="tab-pane" id="Pallet_' + tabToOpen + '">Carton content in pallet' + tabToOpen + '</div>');
            //                }

            //            }
            //            else if ((index == curPalletIndex)) {
            //                // Pallet is already active

            //                $('.divError').show().html('Pallet Id is already active. Please scan a carton.');

            //            } else {
            //                // Activate the pallet
            //                $('.divError').hide();
            //                $('ul[role="tablist"] li a[href="#Pallet_' + tabToOpen + '"]').tab('show');
            //            }
            //        }
            //    }


            //});

            $('#btnNewPallet').click(function (e) {
                alert('auto increment tab with pallet id');
            });

            // Close pallet tab when close icon is clicked
            $('#palletTabs').on('click', '.glyphicon-remove-sign', function (e) {
                var $li = $(this).closest('li');
                if ($li.is('.active')) {
                    // If the visible tab is being removed, first make something else visible
                    // Try to show the next tab
                    var $nextli = $li.next();
                    if ($nextli.length == 0) {
                        // If no next, then show first
                        $nextli = $('li:first', e.delegateTarget);
                    }
                    $('a', $nextli).tab('show');
                }
                // Remove content first
                var contentSelector = $('a', $li).attr('href');  // e.g. #tab2
                $(contentSelector).remove();
                // Now remove tab
                $li.remove();

            });


            // Supply carton id to modals before they open
            $('#removeModal').on('show.bs.modal', function (e) {
                $('span.cartonId', e.delegateTarget).text($(e.relatedTarget).closest('td').attr('data-carton'));
                $('span.palletId', e.delegateTarget).text($('#palletTabContent div.active').attr('data-pallet'));
            }).on('click', '#btnRemove', function (e) {
                //remove the carton from pallet.
                // The text of all spans with data-name attribute will be posted
                var data = new Object();
                $('span[data-name]', e.delegateTarget).each(function () {
                    data[$(this).attr('data-name')] = $(this).text();
                });
                $.ajax($(this).attr('data-url'), {
                    type: 'POST',
                    data: data,
                    context: this,
                    statusCode: {
                        // Some error, show them in screen and play error sound.
                        203: function (data, textStatus, jqXHR) {
                            $('#spanErrorMessage').show().html(data).addClass('alert alert-warning');
                            //PlaySound('error');
                        },
                        // Unreceive success
                        200: function (data, textStatus, jqXHR) {
                            $('#palletTabContent div.active').html(data);
                            $(e.delegateTarget).modal('hide');
                            UpdateProgressBar(-1);
                            $('#spanErrorMessage').show().html('Removed Carton Successfully').addClass('alert alert-success');
                            return;
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('error' + jqXHR.responseText);
                        // PlaySound('error');
                    }
                    //complete: function (jqXHR, textStatus) {
                    //    setTimeout(function () {
                    //        //  $('#scan').val('').focus();
                    //    }, 0);
                    //}
                }).then(function (printers, textStatus, jqXHR) {
                }, function (jqXHR, textStatus, errorThrown) {
                });
            });


        });

        // Pass negative for decrement
        function UpdateProgressBar(increment) {
            var $bar = $('#progressCartons div.progress-bar');
            var val = parseInt($bar.attr('aria-valuenow')) + increment;
            var maxval = parseInt($bar.attr('aria-valuemax'));
            var pct = Math.round(val * 100 / maxval);
            $bar.attr('aria-valuenow', val)
                .css('width', pct + '%')
                .find('span').text(pct);

        }

        // Print carton label
        $(document).ready(function () {
            $('#printModal').one('show.bs.modal', function (e) {
                // Populate the printer drop down when shown first time
                var $ddlPrinters = $('#ddlprinters');
                $.get($ddlPrinters.attr('data-getprinters-url'))
                    .then(function (printers, textStatus, jqXHR) {
                        // Success. We have got the list of printers
                        var selected = jqXHR.getResponseHeader("Selected");
                        var y = this.ddl;
                        $.each(printers, function (i, printer) {
                            var x = $('<option></option>').val(printer.Name).text(printer.Name + ' : ' + printer.Description);
                            if (printer.Name === selected) {
                                x.attr('selected', 'selected');
                            }
                            this.append(x);
                        }.bind(this));
                    }.bind($ddlPrinters), function (jqXHR, textStatus, errorThrown) {
                        // Some error
                        var x = $('<option></option>').val('')
                            .html('<span class="bg-danger">Could not retrieve printer list: ' + textStatus + ' ' + jqXHR.status + '</span>');
                        this.append(x);
                    }.bind(this));
            }).on('show.bs.modal', function (e) {
                // Update the carton id in the modal header. This carton will be printed
                $('span.cartonId', e.delegateTarget).text($(e.relatedTarget).closest('td').attr('data-carton'));
                $(".alert", e.delegateTarget).addClass('hidden');
            }).on('click', '#btnPrint', function (e) {
                // Print the carton label
                // Remove alert-* classes from the alert. The appropriate class will be added later
                var $alert = $(".alert", e.delegateTarget).removeClass(function (index, css) {
                    return (css.match(/(^|\s)alert-\S+/g) || []).join(' ');
                }).removeClass('hidden');
                var $ddl = $('#ddlprinters', e.delegateTarget);
                if (!$ddl.val()) {
                    $alert.text("Please select a printer").addClass('alert-warning');
                    return;
                }
                var data = new Object();
                $('span[data-name]', e.delegateTarget).each(function (index, elem) {
                    this[$(elem).attr('data-name')] = $(elem).text();
                }.bind(data));
                data[$ddl.attr('name')] = $ddl.val();
                $.post($(this).attr('data-print-url'), data)
                    .then(function (data, textStatus, jqXHR) {
                        // success
                        this.html(data);
                        switch (jqXHR.status) {
                            case 203:
                                this.addClass('alert-warning');
                                break;

                            default:
                                this.addClass('alert-success');
                                break;
                        }
                    }.bind($alert), function (jqXHR, textStatus, errorThrown) {
                        // Error
                        this.addClass('alert-danger').html(jqXHR.responseText);
                    }.bind($alert));
            });

        });
    </script>
}


