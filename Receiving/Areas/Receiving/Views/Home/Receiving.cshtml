@*  Contract

    Reviewed by: Binod Kumar 17th Sept 2011.

    1. Following attribs are used in our code
       data-ajax-url: We keep URL of handle scan.
*@
@model DcmsMobile.Receiving.ViewModels.Home.ReceivingViewModel
@{
    ViewBag.Title = "Scan Now";
    string sound;
    if (!this.ViewData.ModelState.IsValid)
    {
        // Validation error
        sound = Links_Receiving.Areas.Receiving.Content.Sounds.error_wav;
    }
    else
    {
        // Carton was received
        sound = Links_Receiving.Areas.Receiving.Content.Sounds.scan_wav;
    }
}
@*<audio src="@Links_Receiving.Areas.Receiving.Content.Sounds._1_mp3" controls autoplay></audio>*@
@using (Html.BeginForm(MVC_Receiving.Receiving.Home.HandleScan()))
{
<div>
    <span class="ui-bar ui-bar-a">
        <em>Process </em>@Html.DisplayFor(m => m.ProcessId)
        <a href="#processInfo" data-transition="slidedown" class="ui-btn ui-corner-all ui-btn-inline ui-icon-info ui-btn-icon-notext" data-rel="popup"></a>
        <a href="#processMenu" data-transition="pop" class="ui-btn ui-corner-all ui-btn-inline ui-icon-bullets ui-btn-icon-notext" data-rel="popup"></a>
        <input type="text" id="scan" name="@Html.NameFor(m => m.ScanModel.ScanText)"
               data-ajax-url="@Url.Action(MVC_Receiving.Receiving.Home.HandleScan())" style="text-transform: uppercase" size="12" autocomplete="off" placeholder="Scan Carton or Pallet" />
    </span>
</div>
    @Html.HiddenFor(m => m.ScanModel.ProcessId)
    @Html.HiddenFor(m => m.ReceivingAreaId)
    @Html.HiddenFor(m => m.SpotCheckAreaId)
    @Html.HiddenFor(m => m.CartonCount)
    @Html.HiddenFor(m => m.ExpectedCartons)
    @Html.HiddenFor(m => m.ScanModel.PalletId)
    @Html.HiddenFor(m => m.ScanModel.PalletDispos)
}
<div data-role="collapsible-set" id="palletSet">
    @for (var i = 0; i < Model.Pallets.Count; ++i)
    {
        <div data-role="collapsible" id="@Model.Pallets[i].PalletId">
            <h4>
                @Html.DisplayFor(m => m.Pallets[i].PalletId)
                @if (Model.Pallets[i].Cartons.Count > 0)
            {
            <text>
                [Area @Html.DisplayFor(m => m.Pallets[i].Cartons[0].DestinationArea)]
                [Vwh @Html.DisplayFor(m => m.Pallets[i].Cartons[0].VwhId)]
                [#Ctn @Model.Pallets[i].Cartons.Count]
                [Pallet Limit @Model.Pallets[i].PalletLimit]
                @(Model.Pallets[i].Cartons.Select(c => c.Sku.SkuId).Distinct().Count() > 0 ? "[Mixed Pallet]" : "")
            </text>
            }
            else
            {
            @:[NEW]
            }                
            </h4>           
            <div>
                @Html.Partial(MVC_Receiving.Receiving.Home.Views._palletPartial, Model.Pallets[i])
            </div>
        </div>
    }
</div>
<div data-role="popup" id="processInfo">
    <div class="boxContent" style="white-space: nowrap">
        <ul data-role="listview" data-inset="true">
            <li>
                Carrier @Html.DisplayFor(m => m.CarrierId) : @Html.DisplayFor(m => m.CarrierDescription)
            </li>
            <li>
                Exp Ctns @Html.DisplayFor(m => m.ExpectedCartons)
            </li>
            <li>
                Pro #
                @Html.DisplayFor(m => m.ProNumber)
            </li>
            <li>
                Pro Date
                @Html.DisplayFor(m => m.ProDate)
            </li>
            <li>
                Season Code
                @Html.DisplayFor(m => m.PriceSeasonCode)
            </li>
            <li>
                Received By
                @Html.DisplayFor(m => m.OperatorName)
            </li>
        </ul>

    </div>
</div>
<div data-role="popup" id="processMenu">
    <ul data-role="listview" data-inset="true" style="min-width:210px;">
        <li data-role="list-divider">Choose an action</li>
        <li>@Html.ActionLink("Edit Process", MVC_Receiving.Receiving.Home.CreateProcess(Model.ProcessId))</li>
        <li>
            <a href="@string.Format("{0}?process_id={1}", Model.ProcessDetailUrl, Model.ProcessId)" title="Receiving Detail for the selected Process
" target="_blank">Received shipments and cartons summary report</a>
        </li>
        <li><a href="#" id="linkShowCarton">Cartons received but not on Pallet...</a></li>
    </ul>
</div>
<div data-role="popup" id="errPopup">    
</div>
@*@section scripts{
    <script type="text/javascript">
    $(document).ready(function () {
        $scan = $('#scan');
        //$('#palletSet').find('div[data-role="collapsible"]').bind('expand', function () {
        //    alert('Expanded');
        //    //$('#hfPalletid').val(this.attr('id'));            
        //   // alert('hi');
        //});   

        $('#palletSet').find('div[data-role="collapsible"]').collapsible({
            expand: function () {
                $('#hfPalletid').val($(this).attr('id'));
                //alert($('#hfPalletid').val());
            }
        })

     

        $scan.keypress(function (e) {
            //e.stopPropagation();
            if (e.which == $.ui.keyCode.ENTER) {                
                $.ajax({
                    url: $scan.attr('data-ajax-url'),
                    type: 'POST',
                    data: $('#frmScan').serialize() + "&ScanModel.ScanText=" + $scan.val(),
                    statusCode: {
                        // this is for handling pallet scan
                        202: function (data, textStatus, jqXHR) {
                            var scannedPallet = jqXHR.getResponseHeader("PalletId");
                            if ($('div#' + scannedPallet).length > 0)
                            {
                                $('#' + scannedPallet).collapsible("expand");
                                return ;
                            }
                            var palletCollapsible = "<div data-role='collapsible' id='" + scannedPallet + "'><h3>" + scannedPallet + "</h3><div>" + data + "</div></div>";
                            $("#palletSet").append(palletCollapsible).collapsibleset("refresh");
                            $('#hfPalletid').val(scannedPallet);
                            
                        },
                        // this to handle when a carton scanned before a pallet
                        203: function (data, textStatus, jqXHR) {                        
                            $('#errPopup').html(data).popup("open").popup("option", "positionTo",$('#scan'));
                        },
                        // Carton disposition does not match active pallet disposition
                        250: function (data, textStatus, jqXHR) {
                            $('#errPopup').html(jqXHR.getResponseHeader("ErrorMsg")).popup("open").popup("option", "positionTo", $('#scan'));                            
                        }
                    }
                });

            }
        });
    });
    </script>
}*@



<!--$Id$-->
