<!--  Contract Reviewed by: Binod Kumar 17th Sept 2011.
     1. Following attribs are used in our code
    data-ajax-url: We keep URL of handle scan.
    -->
@model DcmsMobile.Receiving.ViewModels.Home.ReceivingViewModel
@{
    Layout = MVC_Receiving.Receiving.Shared.Views._layoutReceiving;
    string sound;
    if (!this.ViewData.ModelState.IsValid)
    {
        // Validation error
        sound = Links_Receiving.Areas.Receiving.Content.Sounds.error_wav;
    }
    else
    {
        // Carton was received
        sound = Links_Receiving.Areas.Receiving.Content.Sounds.scan_wav;
    }
}
<div class="container">
    <div class="page-header">
        <span class="pull-right">
            <a href="@string.Format("{0}?process_id={1}", Model.ProcessDetailUrl, Model.ProcessId)"
               title="Receiving Detail for the selected Process" target="_blank"
               class=" btn btn-link">
                <span class="glyphicon glyphicon-new-window"></span>
                @*Report 40.103:*@ Cartons received and shipments summary
            </a>
        </span>
        <h2>
            Receiving
            <small>Carrier  @Html.DisplayFor(m => m.CarrierId) @Html.DisplayFor(m => m.CarrierDescription)</small>
        </h2>
    </div>

    <p>
        @Html.LabelFor(m => m.ProcessId)
        @Html.DisplayFor(m => m.ProcessId)
        &nbsp;
        @Html.LabelFor(m => m.ExpectedCartons)
        @Html.DisplayFor(m => m.ExpectedCartons)
        &nbsp;
        @Html.LabelFor(m => m.ProNumber)
        @Html.DisplayFor(m => m.ProNumber)
        &nbsp;
        @Html.LabelFor(m => m.ProDate)
        @Html.DisplayFor(m => m.ProDate)
        &nbsp;
        @Html.LabelFor(m => m.ProNumber)
        @Html.DisplayFor(m => m.ProNumber)
        &nbsp;
        @Html.LabelFor(m => m.ProDate)
        @Html.DisplayFor(m => m.ProDate)
        &nbsp;
        @Html.LabelFor(m => m.PriceSeasonCode)
        @Html.DisplayFor(m => m.PriceSeasonCode)
        &nbsp;
        @Html.LabelFor(m => m.OperatorName)
        @Html.DisplayFor(m => m.OperatorName)
    </p>

    <div class="panel panel-info">
        <div class="panel-heading">
            <div class="row" style="margin-bottom:0px;">
                <div class="col-md-4">
                    <div class="input-group">
                        <div class="form-group">
                            <div class="input-group input-group-lg">
                                <input type="text" id="scan" name="@Html.NameFor(m => m.ScanModel.ScanText)"
                                       class="form-control" autofocus 
                                       data-ajax-url="@Url.Action(MVC_Receiving.Receiving.Home.HandleScan())"
                                       autocomplete="off" placeholder="Scan Carton or Pallet" />
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" type="submit">Scan</button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="btn-group">
                        <button id="btnNewPallet" class="btn btn-default" type="button" data-new-pallet="@Model.ScanModel.ScanText">
                            <span class="glyphicon glyphicon-plus-sign"></span>  New Pallet
                        </button>
                        <a href="@Url.Action(MVC_Receiving.Receiving.Home.CreateProcess(Model.ProcessId))" class="btn btn-default"><span class="glyphicon glyphicon-edit"></span> Edit Process</a>
                        <a href="@Url.Action(MVC_Receiving.Receiving.Home.Index())" class="btn btn-default"><span class="glyphicon glyphicon-home"></span> Change Process</a>
                        <a href="#" id="linkShowCarton" class="btn btn-default"><span class="glyphicon glyphicon glyphicon-list-alt"></span> Cartons received but not on Pallet...</a>
                    </div>
                </div>
            </div>
            Receiving progress <em>@Model.cartonsOnPallet of @(Model.ExpectedCartons ?? 0) cartons</em>
            <div class="progress" style="margin-bottom:0px;">
                <div class="progress-bar" role="progressbar" aria-valuenow="@Model.percentReceivedCartons " aria-valuemin=" 0" aria-valuemax="100" style="width: @Model.percentReceivedCartons%;min-width:20px;">
                    @Model.percentReceivedCartons%
                </div>
            </div>
        </div>
    </div>


    <!-- Nav tabs -->
    <ul class="nav nav-tabs bg-info" role="tablist">
        @for (var i = 0; i < Model.Pallets.Count(); i++)
        {
            <li>

                <a class="active" href='#Pallet_@(Model.Pallets[i].PalletId)' role="tab" data-toggle="tab"
                   title='Pallet @Model.Pallets[i].PalletId'>
                    @(Model.Pallets[i].PalletId)
                    <span title="Remove Pallet" class='glyphicon glyphicon-remove-sign text-info'></span>
                </a>
            </li>
        }

    </ul>
    <!-- Tab panes -->
    <div class="tab-content">
        @foreach (var pallet in Model.Pallets)
        {
            <div id="Pallet_@(pallet.PalletId)" class="tab-pane">
                @Html.Partial(MVC_Receiving.Receiving.Home.Views._palletPartial, pallet)
            </div>
        }
    </div>
    <!-- Print Modal called from _palletPartialPage -->
    <div class="modal fade" id="printModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="myModalLabel">
                        Print Carton<input type="button" class="btn btn-link btn-lg" id="cartonId" disabled="disabled">
                    </h4>
                </div>
                <form class="form-horizontal" role="form" method="post" action="@Url.Action(MVC_Receiving.Receiving.Home.PrintCarton())">
                    <div class="modal-body">
                            <input type="hidden" id="hfCartonId" name="@MVC_Receiving.Receiving.Home.PrintCartonParams.cartonId" />
                            <input type="hidden" value="@Model.ProcessId" name="@MVC_Receiving.Receiving.Home.PrintCartonParams.processId" />
                        <div class="form-group">
                            <label for="ddlPrinter" class="col-sm-2 control-label">Printer <abbr>*</abbr></label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(m => m.PrinterId, Model.PrinterList, "Select Printer...", new
                    {
                        id = "ddlPrinter",
                        required = "required",
                        @class = "form-control",
                        @name = MVC_Receiving.Receiving.Home.PrintCartonParams.printerId
                    })

                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-print"></span> Print</button>
                    </div>
                </form>
            </div>

        </div>



    </div>

    <!--Remove Carton Model(Pop-up)-->
    <div class="modal fade" id="removeModal" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title" id="myModalLabel">Remove</h4>
                </div>
                <form class="form-horizontal" role="form" method="post" action="@Url.Action(MVC_Receiving.Receiving.Home.UnPalletizeCarton())">
                    <div class="modal-body">
                        <input type="hidden" id="hfCartonId" name="@MVC_Receiving.Receiving.Home.UnPalletizeCartonParams.cartonId" />
                        <input type="hidden" value="@Model.ProcessId" name="@MVC_Receiving.Receiving.Home.UnPalletizeCartonParams.processId" />
                        <span class="text-info">                        
                            Are you sure you want to remove carton<input type="button" id="cartonId" class="btn btn-link  btn-lg" disabled="disabled">
                            from Pallet<input type="button" id="palletId" class="btn btn-link  btn-lg" disabled="disabled">?
                        </span>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                        <button type="submit" class="btn btn-primary">Yes</button>
                    </div>
                </form>
            </div>

        </div>



    </div>


    </div>
    @section script{
        <!--Styles for making the tab with cross icons
         http://jeykeu.wordpress.com/2013/07/27/dynamically-add-remove-and-re-number-tabs-in-twitter-bootstrap/-->
        <style type="text/css">
            .nav-tabs > li .glyphicon-remove-sign {
                margin: -16px -15px 0px 10px;
                font-size: 13px;
                padding: 5px 0;
                float: right;
            }

            .nav-tabs > li a[data-toggle=tab] {
                float: left !important;
            }
        </style>

        <script type="text/javascript">
            $(document).ready(function () {
                // Shows the first tab content by default
                $('ul[role="tablist"] li a:first').tab('show');

                //IShows the tab on scan if already present
                $('#scan').keydown(function (e) {
                    //enter key
                    if (e.keyCode == 13) {
                        if ($(this).val() != "") {
                            var tabToOpen = $(this).val().toUpperCase();
                            $('ul[role="tablist"] li a[href="#Pallet_' + tabToOpen +'"]').tab('show');
                        }
                    }
                });

                $('#btnNewPallet').click(function (e) {
                   
                    var newTab = $('#scan').val().toUpperCase();
                   
                    $('ul[role="tablist"]').append('<li><a href="#Pallet_' + newTab + ' " ' + 'role="tab" data-toggle="tab"  title="' + newTab + '">' + newTab + '<span title="Remove Pallet" class="glyphicon glyphicon-remove-sign text-info"></span></a></li>')
                    $('div.tab-content').append('<div class="tab-pane" id="Pallet_' + newTab + '">Carton content in pallet' + newTab + '</div>');
                  
                });
               

























                //Show values form _palletPartial page in print modal(Dialog Box) and remove carton(Dialog Box)
                $('table tbody td').on('click', 'button', function (e) {
                    var cartonId = $(e.delegateTarget).attr('data-carton');
                    var palletId = $(e.delegateTarget).attr('data-pallet');
                    $('#hfCartonId,#cartonId').val(cartonId);
                    $('#palletId').val(palletId);
                });


            });
        </script>
    }


