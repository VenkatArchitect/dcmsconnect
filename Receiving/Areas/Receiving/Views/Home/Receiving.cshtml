<!--  Contract Reviewed by: Binod Kumar 17th Sept 2011.
     1. Following attribs are used in our code
    data-ajax-url: We keep URL of handle scan.
    -->
@model DcmsMobile.Receiving.ViewModels.Home.ReceivingViewModel
@{
    Layout = MVC_Receiving.Receiving.Shared.Views._layoutReceiving;
    string sound;
    if (!this.ViewData.ModelState.IsValid)
    {
        // Validation error
        sound = Links_Receiving.Areas.Receiving.Content.Sounds.error_wav;
    }
    else
    {
        // Carton was received
        sound = Links_Receiving.Areas.Receiving.Content.Sounds.scan_wav;
    }
}
<div class="container">
    <div class="page-header">
        <span class="pull-right">
            <a href="@string.Format("{0}?process_id={1}", Model.ProcessDetailUrl, Model.ProcessId)"
               title="Receiving Detail for the selected Process" target="_blank"
               class=" btn btn-link">
                <span class="glyphicon glyphicon-new-window"></span>
                @*Report 40.103:*@ Cartons received and shipments summary
            </a>
        </span>
        <h2>
            Receiving
            <small>Carrier  @Html.DisplayFor(m => m.CarrierId) @Html.DisplayFor(m => m.CarrierDescription)</small>
        </h2>
    </div>

    <p>
        @Html.LabelFor(m => m.ProcessId)
        @Html.DisplayFor(m => m.ProcessId)
        &nbsp;
        @Html.LabelFor(m => m.ExpectedCartons)
        @Html.DisplayFor(m => m.ExpectedCartons)
        &nbsp;
        @Html.LabelFor(m => m.ProNumber)
        @Html.DisplayFor(m => m.ProNumber)
        &nbsp;
        @Html.LabelFor(m => m.ProDate)
        @Html.DisplayFor(m => m.ProDate)
        &nbsp;
        @Html.LabelFor(m => m.ProNumber)
        @Html.DisplayFor(m => m.ProNumber)
        &nbsp;
        @Html.LabelFor(m => m.ProDate)
        @Html.DisplayFor(m => m.ProDate)
        &nbsp;
        @Html.LabelFor(m => m.PriceSeasonCode)
        @Html.DisplayFor(m => m.PriceSeasonCode)
        &nbsp;
        @Html.LabelFor(m => m.OperatorName)
        @Html.DisplayFor(m => m.OperatorName)
    </p>

    <div class="panel panel-info">
        <div class="panel-heading">
            <div class="row" style="margin-bottom:0px;">
                <div class="col-md-4">
                    <div class="input-group">
                        <div class="form-group">
                            <div class="input-group input-group-lg">
                                <input type="text" id="scan" name="@Html.NameFor(m => m.ScanModel.ScanText)"
                                       class="form-control" autofocus
                                       data-ajax-url="@Url.Action(MVC_Receiving.Receiving.Home.HandleScan())"
                                       autocomplete="off" placeholder="Scan Carton or Pallet" />
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" type="submit">Scan</button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="btn-group">
                        <button id="btnNewPallet" class="btn btn-default" type="button" data-new-pallet="@Model.ScanModel.ScanText">
                            <span class="glyphicon glyphicon-plus-sign"></span>  New Pallet
                        </button>
                        <a href="@Url.Action(MVC_Receiving.Receiving.Home.CreateProcess(Model.ProcessId))" class="btn btn-default"><span class="glyphicon glyphicon-edit"></span> Edit Process</a>
                        <a href="@Url.Action(MVC_Receiving.Receiving.Home.Index())" class="btn btn-default"><span class="glyphicon glyphicon-home"></span> Change Process</a>
                        <a href="#" id="linkShowCarton" class="btn btn-default"><span class="glyphicon glyphicon glyphicon-list-alt"></span> Cartons received but not on Pallet...</a>
                    </div>
                </div>
            </div>
            Receiving progress <em>@Model.cartonsOnPallet of @(Model.ExpectedCartons ?? 0) cartons</em>
            <div class="progress" style="margin-bottom:0px;">
                <div class="progress-bar" role="progressbar" aria-valuenow="@Model.percentReceivedCartons " aria-valuemin=" 0" aria-valuemax="100" style="width: @Model.percentReceivedCartons%;min-width:20px;">
                    @Model.percentReceivedCartons%
                </div>
            </div>
        </div>
    </div>

    <form id="frmScan" method="post" action="#">
        <div>
            <input type="hidden" name='@Html.NameFor(m => m.ScanModel.ProcessId)' value='@Model.ScanModel.ProcessId' />
            <input type="hidden" name='@Html.NameFor(m => m.ReceivingAreaId)' value='@Model.ReceivingAreaId' />
            <input type="hidden" name='@Html.NameFor(m => m.SpotCheckAreaId)' value='@Model.SpotCheckAreaId' />
            <input type="hidden" name='@Html.NameFor(m => m.CartonCount)' value='@Model.CartonCount' id="hfReceivedCartonsCount" />
            <input type="hidden" name='@Html.NameFor(m => m.ExpectedCartons)' value='@Model.ExpectedCartons' id="hfExpectedCartonsCount" />
            <input type="hidden" name='@Html.NameFor(m => m.ScanModel.PalletId)' value='@Model.ScanModel.PalletId' id="tbPalletId" />
            <div id="spanErrorMessage" class="ui-state-error ui-helper-hidden">
            </div>
        </div>
    </form>
    <div class="widget-container">
        <div id="tabs" data-remove-carton="@Url.Action(MVC_Receiving.Receiving.Home.UnPalletizeCarton())" class="@(Model.Pallets.Count == 0 ? "ui-helper-hidden" : "")">
            <ul class="nav nav-tabs" role="tablist">
                @foreach (var pallet in Model.Pallets)
                {
                    <li data-palletid='@pallet.PalletId' data-disposition='@pallet.DispositionId'>
                        <a class="active"  href='#Pallet_@(pallet.PalletId)'
                           title='Pallet @pallet.PalletId'>@(pallet.PalletId)</a><span title="Remove Pallet" class='ui-icon ui-icon-close'></span>
                    </li>
                }
            </ul>
            @foreach (var pallet in Model.Pallets)
            {
                <div id="Pallet_@(pallet.PalletId)">
                    @Html.Partial(MVC_Receiving.Receiving.Home.Views._palletPartial, pallet)
                </div>
            }
        </div>
    </div>
</div>
@section script{

}
