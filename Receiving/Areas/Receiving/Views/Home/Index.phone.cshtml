@*
    Contract:
    1. data-autocomplete-url: Needed for attaching auto complete on Carrier.

*@
@model DcmsMobile.Receiving.ViewModels.Home.IndexViewModel
@{
    ViewBag.Title = "Receiving Process";
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    @*var grid = Html.GridFor(m => m.RecentProcesses);
        grid.AddColumn().HeaderHtml("#").CellHtml(m => m.RowIndex + 1);
        grid.AddColumn(m => m.ReceivingStartDate);
        grid.AddColumn(m => m.ElapsedTime);
        grid.AddColumn(m => m.ProcessId).CellHtml(item => item.Html.ActionLink(item.Html.ViewData.Model.ProcessId.ToString(), MVC_Receiving.Receiving.Home.Receiving(item.Html.ViewData.Model.ProcessId)));
        grid.AddColumn(m => m.OperatorName);
        grid.AddColumn(m => m.ProNumber);
        grid.AddColumn(m => m.ProDate);
        grid.AddColumn(m => m.CarrierDisplayName);
        grid.AddColumn(m => m.PalletCount).CellStyle("right-align");
        grid.AddColumn().HeaderHtml("Received Cartons").CellHtml(@<div class="ui-progressbar ui-widget ui-widget-content ui-corner-all" style="position: relative; height: 1.1em; white-space: nowrap;" title="@string.Format("{0}% completed", @item.Model.CartonCount * 100 / (item.Model.ExpectedCartons.HasValue && item.Model.ExpectedCartons.Value > 0 ? @item.Model.ExpectedCartons.Value : 1)), @item.Model.CartonCount cartons out of @(item.Model.ExpectedCartons ?? 0) expected cartons received">
            <div style="width: @string.Format("{0}%", (item.Model.CartonCount * 100 / (item.Model.ExpectedCartons.HasValue && item.Model.ExpectedCartons.Value > 0 ? @item.Model.ExpectedCartons.Value : 1)) > 100 ? 100 : (item.Model.CartonCount * 100 / (item.Model.ExpectedCartons.HasValue && item.Model.ExpectedCartons.Value > 0 ? @item.Model.ExpectedCartons.Value : 1))); position: absolute; left: 0px; top: 0px" class="ui-progressbar-value ui-widget-header ui-corner-left @string.Format("{0}", (@item.Model.CartonCount * 100 /(item.Model.ExpectedCartons.HasValue && item.Model.ExpectedCartons.Value > 0 ? @item.Model.ExpectedCartons.Value : 1)) > 100 ? "ui-state-error" : "")">
            </div>
            <div class="ui-progressbar-value" style="width: 100%; position: absolute; left: 0px;
                top: 0px; font-size: 0.8em; margin-top: 1px; margin-left: 1px">
                @string.Format("{0}%", @item.Model.CartonCount * 100 / (item.Model.ExpectedCartons.HasValue && item.Model.ExpectedCartons.Value > 0 ? @item.Model.ExpectedCartons.Value : 1))
                [@item.Model.CartonCount of @(item.Model.ExpectedCartons ?? 0)]
            </div>
        </div>);*@

}
@section scripts {
    <style type="text/css">
        .controlgroup-textinput {
            padding-top: .22em;
            padding-bottom: .22em;
        }
    </style>
}
@using (Html.BeginForm(MVC_Receiving.Receiving.Home.Receiving(), FormMethod.Get))
{
    <fieldset data-role="controlgroup" data-type="horizontal">
        <legend>Select Process</legend>
        @*<input type="text" id="search-control-group" data-wrapper-class="controlgroup-textinput ui-btn">*@
        <input type="number" id="search" placeholder="Receiving Process Id" name="@MVC_Receiving.Receiving.Home.ReceivingParams.processId"
               data-wrapper-class="controlgroup-textinput ui-btn" autofocus />
        <button>Submit</button>
        <a href="@Url.Action(MVC_Receiving.Receiving.Home.CreateProcess())" class="ui-btn ui-corner-all ui-icon-plus ui-btn-icon-left">Create</a>
        <a href="@Url.Action(MVC_Receiving.Receiving.Home.ShipmentList())" class="ui-btn ui-corner-all ui-icon-carat-r ui-btn-icon-right">Open Shipments</a>
    </fieldset>
}
@*@using (Html.BeginForm(MVC_Receiving.Receiving.Home.Receiving(), FormMethod.Get))
{
    <label for="search">Select Receiving Process</label>
    <input type="number" id="search" placeholder="Receiving Process Id" name="@MVC_Receiving.Receiving.Home.ReceivingParams.processId" />
}*@
<ul data-role="listview" data-inset="true" data-filter="true" data-input="#search">
    @for (var i = 0; i < Model.RecentProcesses.Count; ++i)
    {
        <li data-filtertext="@Model.RecentProcesses[i].ProcessId">
            <a href="@Url.Action(MVC_Receiving.Receiving.Home.Receiving(Model.RecentProcesses[i].ProcessId))">
                <h3><em>@(i + 1).</em> @Html.DisplayFor(m => m.RecentProcesses[i].ProcessId) by @Html.DisplayFor(m => m.RecentProcesses[i].OperatorName)</h3>
                <p><strong>PRO# @Html.DisplayFor(m => m.RecentProcesses[i].ProNumber) dated @Html.DisplayFor(m => m.RecentProcesses[i].ProDate)</strong></p>
                <p class="ui-li-aside">@Html.DisplayFor(m => m.RecentProcesses[i].ReceivingStartDate) <em>@Html.DisplayFor(m => m.RecentProcesses[i].ElapsedTime)</em></p>
                <p>@Html.DisplayFor(m => m.RecentProcesses[i].CarrierDisplayName)</p>
                <span class="ui-li-count">
                    @Html.DisplayFor(m => m.RecentProcesses[i].CartonCount) of @Html.DisplayFor(m => m.RecentProcesses[i].ExpectedCartons)
                    ctn 6 pallets
                </span>
            </a>
        </li>
    }
</ul>


@*@section sidebar {
        <div class="box boxA">
            <div class="boxContent">
                @using (Html.BeginForm(MVC_Receiving.Receiving.Home.SelectProcess()))
                {
                    <div>
                        <label>
                            Continue existing process
                        </label>
                        <span style="white-space: nowrap">
                            @Html.TextBoxFor(m => m.SelectProcess.ProcessId, new
                       {
                           size = "12"
                       })<span>*</span>
                        </span>
                        <input type="submit" value="Select" />
                    </div>
                    @Html.ValidationSummary()
                }
            </div>
        </div>
        <div class="box boxB">
            <div class="boxContent">
                <ul>
                    <li>
                        @Html.ActionLink("Create New Process", MVC_Receiving.Receiving.Home.CreateProcess())
                </li>
                <li>
                    First time user?
                    <a href="@Url.Content(Links_Receiving.Areas.Receiving.Content.Guided_Receiving_pps)">View Presentation</a>
                </li>
                <li>
                    @Html.ActionLink("Open Shipments", MVC_Receiving.Receiving.Home.ShipmentList())
                </li>
            </ul>
        </div>
    </div>
    }*@


<!--$Id$-->
