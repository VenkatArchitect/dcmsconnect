@model DcmsMobile.Receiving.ViewModels.Rad.SpotCheckViewModel
@{

    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}
<form id="addSpotCheck" method="post">   
    <div class="modal-body">
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            <label for="ddlSewingPlant">Sewing Plant</label>
            @Html.GroupDropListFor(m => m.SewingPlantId, Model.SewingPlantList, "(All)", new { id = "ddlSewingPlant", @class = "form-control" })
        </div>
        <div class="form-group ">
            <label>Style <sup><i class="glyphicon glyphicon-asterisk"></i></sup></label>
            <div class="form-inline">
                <label>
                    <input id="rbAllStyle" class="radio" type="radio" name="@Html.NameFor(m => m.AllStyles).ToString()" data-attr-disabletb="tbStyle" />
                    All Styles
                </label>
            </div>
            <div class="form-inline">
                <label>
                    <input type="radio" class="radio" name="@Html.NameFor(m => m.AllStyles)" checked="checked" id="rbSpecificStyle" data-attr-enabletb="tbStyle" />
                    Specific Style
                </label>
            </div>
            <div class="input-group">
                @Html.TextBoxFor(m => m.Style, new
   {

       data_url_list = Url.Action(MVC_Receiving.Receiving.AutoComplete.StyleAutocomplete()),
       autocomplete = "off",
       style = "text-transform: uppercase",
       id = "tbStyle",
       @class = "form-control"
   })
                <span class="input-group-btn">
                    <span class="btn btn-default"><span class="glyphicon glyphicon-search"></span></span>
                </span>

            </div>
            <div class="form-group">
                <label>Color <sup><i class="glyphicon glyphicon-asterisk"></i></sup></label>
                <div class="form-inline">
                    <label>
                        <input type="radio" class="radio" id="rbAllColors" name="@Html.NameFor(m => m.AllColors).ToString()" data-attr-disabletb="tbColor" />
                        All Colors
                    </label>
                </div>
                <div class="form-inline">
                    <label>
                        <input type="radio" class="radio" name="@Html.NameFor(m => m.AllColors)" id="rbSpecificColor" checked="checked" data-attr-enabletb="tbColor" />
                        Specific Color
                    </label>
                </div>
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Color, new
   {

       data_url_list = Url.Action(MVC_Receiving.Receiving.AutoComplete.ColorAutocomplete()),
       autocomplete = "off",
       style = "text-transform: uppercase",
       id = "tbColor",
       @class = "form-control"
   })
                    <span class="input-group-btn">
                        <span class="btn btn-default"><span class="glyphicon glyphicon-search"></span></span>
                    </span>

                </div>
            </div>
            <div class="checkbox">
                <label>
                    <input type="checkbox" name="@Html.NameFor(m=>m.IsSpotCheckEnabled)" value="true" checked="checked" id="cbIsSpotCheckEnable" />
                    SpotCheck Enabled
                </label>
            </div>
            <div class="form-group">
                <label for="tbSpotCheckPercent">Spot Check Percent <sup><i class="glyphicon glyphicon-asterisk"></i></sup></label>
                @Html.TextBoxFor(m => m.SpotCheckPercent, new { id = "tbSpotCheckPercent", @class = "form-control" })
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary">Add</button>
        </div>
    </div>
</form>







































@*@using (Html.BeginForm(MVC_Receiving.Receiving.Rad.SetSpotCheckPercentage(), FormMethod.Post, new
    {
        id = "frmAddSpotCheck"
    }))
    {
        <fieldset>
            <legend>Sewing Plant</legend>
            @Html.GroupDropListFor(m => m.SewingPlantId, Model.SewingPlantList, "(All)", new { id = "ddlSewingPlant" })
        </fieldset>
        <br />
        <fieldset>
            <legend>Style</legend>
            <input type="radio" name="@Html.NameFor(m => m.AllStyles)" id="rbSpecificStyle" data-attr-enabletb="tbStyle" />Specific Style

            @Html.TextBoxFor(m => m.Style, new
       {
           data_ac_validate_url = Url.Action(MVC_Receiving.Receiving.AutoComplete.ValidateStyle()),
           data_ac_list_url = Url.Action(MVC_Receiving.Receiving.AutoComplete.StyleAutocomplete()),
           autocomplete = "off",
           style = "text-transform: uppercase",
           size = "15",
           id = "tbStyle"
       })
            <span title="Double click to quickly see suggestions">↓</span>
            <br />


            <input id="rbAllStyle" type="radio" name="@Html.NameFor(m => m.AllStyles)" value="@Model.AllStyles" data-attr-disabletb="tbStyle" />
            <span>All styles &nbsp;</span>
            <br />
            <span id="lblStyleDesc" data-ac-msg-for="@Html.NameFor(m => m.Style)"></span>
        </fieldset>
        <br />
        <fieldset>
            <legend>Color</legend>
            <input type="radio" name="@Html.NameFor(m => m.AllColors)" id="rbSpecificColor" data-attr-enabletb="tbColor" />
            Specific Color
            @Html.TextBoxFor(m => m.Color, new
       {
           data_ac_validate_url = Url.Action(MVC_Receiving.Receiving.AutoComplete.ValidateColor()),
           data_ac_list_url = Url.Action(MVC_Receiving.Receiving.AutoComplete.ColorAutocomplete()),
           autocomplete = "off",
           style = "text-transform: uppercase",
           size = "15",
           id = "tbColor"
       })
            <br />
            <input type="radio" id="rbAllColors" name="@Html.NameFor(m => m.AllColors)" data-attr-disabletb="tbColor" />
            <span>All Colors &nbsp;</span>
            <br />
            <span id="lblColorDesc" data-ac-msg-for="@Html.NameFor(m => m.Color)"></span>
        </fieldset>

        @Html.LabelFor(m => m.IsSpotCheckEnabled)<span>&nbsp;</span>


        <input type="checkbox" name="@Html.NameFor(m=>m.IsSpotCheckEnabled)" checked="checked" id="cbIsSpotCheckEnable" />
        <br />
        <div>
            @Html.LabelFor(m => m.SpotCheckPercent)
        </div>

        @Html.TextBoxFor(m => m.SpotCheckPercent, new { id = "tbSpotCheckPercent" })<span>*</span>
        @Html.ValidationSummary()
        <button type="submit">hhh</button>
    }*@
