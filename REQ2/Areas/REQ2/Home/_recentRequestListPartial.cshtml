@model DcmsMobile.REQ2.Areas.REQ2.Home.RecentRequestsViewModel
@{
    var rowIndex = 0;
@*var grid = Html.GridFor(m => m.RecentRequests);
    grid.AddColumn(m => m.Header.ResvId).CellAttribute("class", "data-reqId").CellHtml(item => item.Html.ActionLink(item.Model.Header.ReqId.ToString(), MVC_REQ2.REQ2.Home.DisplayRequest(item.Model.Header.ResvId)))
        .CellAttribute("title", "Click to add SKUs");
    grid.AddColumn(m => m.Header.Priorities);
    grid.AddColumn(m => m.Header.VirtualWareHouseId);
    grid.AddColumn().HeaderHtml("Area")
        .CellHtml(@<span>@item.Html.DisplayFor(m => m.Header.BuildingId) @item.Html.DisplayFor(m => m.Header.SourceAreaShortName)
            &rarr; @item.Html.DisplayFor(m => m.Header.DestinationAreaShortName)</span>);
    grid.AddColumn(m => m.QuantityRequested).CellAttribute("style", "text-align: right;");
    grid.AddColumn(m => m.DateCreated).CellAttribute("style", "min-width: 6em").Presorted(true);

    grid.AddColumn().HeaderHtml("Assigned?").CellHtml(c => c.Html.ViewData.Model.AssignedFlag, @<text><div
        class="ui-icon ui-icon-check" title="Cartons assigned to the request" style="display: inline-block">
    </div>@item.Html.DisplayFor(m => m.AssignedPieces) pieces in @item.Html.DisplayFor(m => m.AssignedCartonCount)
    cartons</text>);
    grid.AddColumn().HeaderHtml("Conversion Request?").CellHtml(c => c.Html.ViewData.Model.Header.RequestForConversion, @<text><div
        class="ui-icon ui-icon-check" title="conversion request" style="display: inline-block">
    </div></text>);
    grid.AddColumn(m => m.Header.Remarks);
    grid.AddColumn(m => m.Header.RequestedBy);
    grid.AddColumn().HeaderHtml("Change").CellHtml(c => c.Html.ActionLink(c.Model.Header.ResvId, MVC_REQ2.REQ2.Home.CreateRequest(c.Model.Header.ResvId)))
        .CellAttribute("title", "Edit request details.").CellAttribute("class", "edit-icon").CellStyle(c => c.Html.ViewData.Model.AssignedFlag, "edit-icon-disabled");
    grid.AddColumn().CellHtml(
    @<text>
    <div style="float: left; cursor: pointer" class="ui-icon ui-icon-close" title="Delete Request" />
    </text>).CellStyle(c => c.Html.ViewData.Model.AssignedFlag, "delete-icon-disabled").SpanHeader();
    grid.AddColumn().CellHtml(c => c.Html.HiddenFor(m => m.Header.ResvId))
    .HeaderAttribute("class", "ui-helper-hidden")
    .CellAttribute("class", "ui-helper-hidden")
    .FooterAttribute("class", "ui-helper-hidden");
}*@
}
@*@grid.GetHtml(
    rowStyle: "rowA",
    alternatingRowStyle: "rowB",
    caption: "Recent Request List",
    emptyDataHtml: "<span class='ui-state-highlight'>No requests have been created yet.</span>"
)*@

@if (Model.RecentRequests != null)
{
    <table>
        <caption>Recent Request List</caption>
        <thead>
            <tr>
                <th>Request</th>
                <th>Priority</th>
                <th>VWh</th>
                <th>Area</th>
                <th>Pieces</th>
                <th>Created On<span class="ui-icon ui-icon-triangle-1-s" style="display: inline-block;" /></th>
                <th>Assigned?</th>
                <th>Conversion Request?</th>
                <th>Remarks</th>
                <th>Requested By</th>
                <th colspan="2">Change</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.RecentRequests)
            {
                <tr class="@(rowIndex % 2 != 0 ? "rowA" : "rowB")">
                    <td title="Click to add SKUs" class="data-reqId">
                        @Html.ActionLink(item.Header.ResvId.ToString(), MVC_REQ2.REQ2.Home.SkuEditor(item.Header.ResvId))
                    </td>
                    <td>@item.Header.Priorities</td>
                    <td>@item.Header.VirtualWareHouseId</td>
                    <td>@item.Header.BuildingId @item.Header.SourceAreaShortName &rarr; @item.Header.DestinationAreaShortName</td>
                    <td style="text-align: right">@item.QuantityRequested </td>
                    <td style="min-width: 6em">@item.DateCreated</td>
                    <td>
                        @if (item.AssignedDate.HasValue)
                        {
                            <div class="ui-icon ui-icon-check" title="Cartons assigned to the request" style="display: inline-block"></div>
                            <text>@item.AssignedPieces pieces in @item.AssignedCartonCount cartons</text>
                        }
                    </td>
                    <td>
                        @if (item.Header.RequestForConversion)
                        {
                            <div class="ui-icon ui-icon-check" title="conversion request" style="display: inline-block"></div>
                        }
                    </td>
                    <td>
                        @item.Header.Remarks
                    </td>
                    <td>
                        @item.Header.RequestedBy
                    </td>
                    <td title="Edit request details." class ="@(item.AssignedDate.HasValue ? "edit-icon-disabled" : "edit-icon")">
                        @Html.ActionLink(item.Header.ResvId, MVC_REQ2.REQ2.Home.PropertyEditor(item.Header.ResvId))
                    </td>
                    <td class="@(item.AssignedDate.HasValue ? "delete-icon-disabled" : "")">
                        <div style="float: left; cursor: pointer" class="ui-icon ui-icon-close" title="Delete Request" />
                        @*<input type="hidden" value="@Model.RecentRequests.Select(p => p.Header.ResvId)" name="@Model.NameFor(m => m.RecentRequests.Select(p => p.Header.ResvId))" @*class="ui-helper-hidden"/>*@
                        @*@Html.HiddenFor(m => m.RecentRequests.Select(p => p.Header.ResvId))*@
                    </td>
                    <td class="ui-helper-hidden">
                        <input type="hidden" value="@item.Header.ResvId"/>
                    </td>
                </tr>
                        rowIndex = rowIndex + 1;
            }
        </tbody>
    </table>
}
else
{
    <span class='ui-state-highlight'>No requests have been created yet.</span>
}
@*$Id$*@