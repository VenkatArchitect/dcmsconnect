@model DcmsMobile.REQ2.ViewModels.CartonListViewModel
@{
    ViewBag.Title = "Carton List";
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}
@section sidebar {
    <div class="box boxB">
        <div class="boxContent">
            <div>
                <span style="display: inline-block" class="ui-icon ui-state-active ui-icon-arrowreturnthick-1-w"></span>
                @Html.ActionLink("Back to ManageSku", MVC_REQ2.REQ2.Req.DisplayRequest(Model.CtnresvId))
            </div>
            <div>
                <span style="display: inline-block" class="ui-icon ui-state-active ui-icon-arrowreturnthick-1-w"></span>
                @Html.ActionLink("Back to Recent Requests", MVC_REQ2.REQ2.Req.DisplayRecentRequest())
            </div>
        </div>
    </div>
}
<div>
    @Html.HiddenFor(m => m.CtnresvId)
</div>
@if (Model.CartonList.Count != 0)
{
    <table>
        <caption>List of assigned cartons</caption>
        <thead>
            <tr>
                <th>#
                </th>
                <th>Carton</th>
                <th>Quantity</th>
                <th>Area</th>
                <th>Vwh</th>
                <th>Quality Code</th>
                <th>Rework Needed</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.CartonList.Count; i++)
            {
                <tr class="@(i % 2 == 0 ? "rowA" : "rowB")">
                    <td>
                        @(i + 1)
                    </td>
                    <td>@Html.DisplayFor(m => m.CartonList[i].CartonId)</td>
                    <td style="text-align: right">@Html.DisplayFor(m => m.CartonList[i].Quantity)</td>
                    <td>@Html.DisplayFor(m => m.CartonList[i].AreaShortName) &rarr; @Html.DisplayFor(m => m.CartonList[i].AreaDescription)</td>
                    <td>@Model.CartonList[i].VwhId</td>
                    <td style="text-align: center">@Html.DisplayFor(m => m.CartonList[i].QualityCode)</td>
                    <td><span title ="Carton marked for rework" class= "@(string.IsNullOrEmpty(Model.CartonList[i].ReworkNeeded) ? "" : "ui-icon ui-icon-check")"></span></td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <span class='ui-state-highlight'>No cartons have been assigned yet.</span>
}
@*$Id$*@